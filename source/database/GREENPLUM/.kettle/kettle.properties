# This file was generated by Pentaho Data Integration version 3.2.0.
#



# START VARIABLES FOR NYC CHECKBOOK
NYC_EMAIL_SERVER=MAIL_SERVER_NAME_HERE
NYC_EMAIL_PORT=25
NYC_EMAIL_FROM=FROM_EMAIL_ID_HERE
NYC_EMAIL_TO=TO_EMAIL_ID_HERE
NYC_EMAIL_CC=CC_EMAIL_ID_HERE
NYC_FMS_GROUP_EMAIL_CC=CC_EMAIL_ID_HERE
NYC_OASIS_GROUP_EMAIL_CC=CC_EMAIL_ID_HERE


CHECKBOOK_DB_HOST=DB_HOSTNAME_HERE
CHECKBOOK_DB_USER=DB_USER_HERE
CHECKBOOK_DB_PASS=DB_PASSWORD_HERE
CHECKBOOK_DB_NAME=DB_NAME_HERE (database_name1)

CHECKBOOK_DB_NAME_OGE=DB_NAME_HERE (database_name2)

CB_FILES_SOURCE_DIR=/home/gpadmin/GREENPLUM/Checkbook/SOURCE_DATA/
CB_FILES_DEST_DIR=/home/gpadmin/GREENPLUM/Checkbook/DEST/
CB_FILES_GPDIST_DIR=/home/gpadmin/GREENPLUM/Checkbook/GPFDIST/datafiles/
CB_FILES_BACKUP_DIR=/home/gpadmin/GREENPLUM/Checkbook/BACKUP/

CB_FILES_SOURCE_DIR_OGE=/home/gpadmin/GREENPLUM/Checkbook_ogent/SOURCE_DATA/
CB_FILES_DEST_DIR_OGE=/home/gpadmin/GREENPLUM/Checkbook_ogent/DEST/
CB_FILES_GPDIST_DIR_OGE=/home/gpadmin/GREENPLUM/Checkbook_ogent/GPFDIST/datafiles/
CB_FILES_BACKUP_DIR_OGE=/home/gpadmin/GREENPLUM/Checkbook_ogent/BACKUP/

NYC_FILES_TO_PROCESS_SQL=SELECT c.load_file_id::int as l_load_file_id,a.data_source_code as l_data_source_code, a.data_source_name::varchar(500) as l_data_source_name, d.standard_file_name::varchar(500) as l_standard_file_name, c.file_name::varchar(500) as l_file_name,(CASE WHEN type_of_feed = 'M' THEN 1 WHEN type_of_feed = 'W' THEN 2 WHEN type_of_feed = 'D' THEN 3 END ) l_file_order, file_timestamp::varchar(50) as l_file_timestamp, b.load_id::int as l_load_id FROM etl.ref_data_source a JOIN etl.etl_data_load b ON a.data_source_code = b.data_source_code  JOIN  etl.etl_data_load_file c ON b.load_id = c.load_id LEFT JOIN etl.ref_file_name_pattern d ON a.data_source_code = d.data_source_code WHERE b.job_id = replace_job_id AND  table_order=1 AND consume_flag='Y' AND pattern_matched_flag = 'Y' ORDER BY a.data_source_order, file_timestamp, 4;

NYC_FILES_STATUS_SQL=SELECT c.data_source_name::varchar(255) as "Data Source Name" , b.file_name::varchar(255) as "Data File Name", b.consume_flag "Is Consumed",  b.processed_flag as "Is Processed" FROM etl.etl_data_load a, etl.etl_data_load_file b,  etl.ref_data_source c  WHERE  a.load_id = b.load_id  AND a.data_source_code = c.data_source_code  AND c.table_order = 1 AND a.job_id = replace_job_id ORDER BY c.data_source_order;

NYC_FILES_LOAD_STATISTICS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name", b.file_name::varchar(255) as "Data File Name", total_records_staged + total_malformed_records as "Total Records Received", total_records_staged - total_invalid_records as "Total Records Staged", total_malformed_records as "Total Malformed Records", total_invalid_records as "Total Invalid Records", total_records_inserted as "Total Records Inserted in Transaction Tables", total_records_updated as "Total Records Updated in Transaction Tables" FROM (SELECT b.load_file_id,  sum(CASE WHEN description = 'staging' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_records_staged, sum(CASE WHEN description = 'invalid' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_invalid_records , sum(CASE WHEN description = 'Malformed'  THEN num_transactions ELSE 0 END) AS  total_malformed_records, sum(CASE WHEN description like '# of records inserted in%'  THEN num_transactions ELSE 0 END) AS total_records_inserted, sum(CASE WHEN description like '# of records updated in%'  THEN num_transactions ELSE 0 END) AS total_records_updated FROM etl.etl_data_load_verification a, etl.etl_data_load_file b, etl.etl_data_load c  WHERE a.load_file_id = b.load_file_id AND b.load_id = c.load_id   AND c.job_id = replace_job_id GROUP BY 1) X, etl.etl_data_load_file b, etl.etl_data_load c , etl.ref_data_source d WHERE X.load_file_id = b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id  ORDER BY d.data_source_order ;

NYC_FILES_LOAD_STATISTICS_OASIS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name", b.file_name::varchar(255) as "Data File Name", total_records_staged + total_malformed_records as "Total Records Received", total_records_staged - total_invalid_records as "Total Records Staged", total_malformed_records as "Total Malformed Records", total_invalid_records as "Total Invalid Records", total_records_inserted as "Total Records Inserted in Transaction Tables", total_records_updated as "Total Records Updated in Transaction Tables" FROM (SELECT b.load_file_id,  sum(CASE WHEN description = 'staging' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_records_staged, sum(CASE WHEN description = 'invalid' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_invalid_records , sum(CASE WHEN description = 'Malformed'  THEN num_transactions ELSE 0 END) AS  total_malformed_records, sum(CASE WHEN description like '# of records inserted in%'  THEN num_transactions ELSE 0 END) AS total_records_inserted, sum(CASE WHEN description like '# of records updated in%'  THEN num_transactions ELSE 0 END) AS total_records_updated FROM etl.etl_data_load_verification a, etl.etl_data_load_file b, etl.etl_data_load c  WHERE a.load_file_id = b.load_file_id AND b.load_id = c.load_id   AND c.data_source_code = 'PC' AND c.job_id = replace_job_id GROUP BY 1) X, etl.etl_data_load_file b, etl.etl_data_load c , etl.ref_data_source d WHERE X.load_file_id = b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id  ORDER BY d.data_source_order ;


NYC_INVALID_RECORDS_SQL=select d.data_source_name::varchar(255) as "Data Source Name" , b.file_name::varchar(255) as "Data File Name", total_invalid_records as "Total Invalid records", invalid_reason::varchar(255) as "Invalid Reason" from invalid_records a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.load_file_id =b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id order by d.data_source_order ;


NYC_INVALID_RECORDS_OGE_SQL=select d.data_source_name::varchar(255) as "Data Source Name", a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number as "OGE Contract #",a.purpose as "Contract Purpose", a.budget_name as "Budget Name", a.oge_registered_amount as "OGE Registered Amt", a.contractor_name as "Prime Contractor Name", a.contractor_address as "Prime Contractor Address", a.contractor_city as "Prime Contractor City", a.contractor_state as "Prime Contractor State", a.contractor_zip as "Prime Contractor Zip", invalid_reason::varchar(255) as "Invalid Reason", b.file_name::varchar(255) as "Data File Name" from (select load_file_id,agency_code, fms_contract_number, fms_commodity_line, edc_contract_number as oge_contract_number, purpose, budget_name, edc_registered_amount as oge_registered_amount, contractor_name, contractor_address, contractor_city, contractor_state, contractor_zip, invalid_reason as invalid_reason from etl.invalid_edc_contract  UNION ALL select load_file_id,agency_code, fms_contract_number, fms_commodity_line, tdc_contract_number as oge_contract_number, purpose, budget_name, tdc_registered_amount as oge_registered_amount, contractor_name, contractor_address, contractor_city, contractor_state, contractor_zip, invalid_reason as invalid_reason  from etl.invalid_tdc_contract )a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.load_file_id =b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id order by d.data_source_order, a.agency_code, a.fms_contract_number;

NYC_FILES_OGE_NEW_RECORDS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name",a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number as "OGE Contract #", a.purpose as "Contract Purpose", a.budget_name as "Budget Name", a.oge_registered_amount as "OGE Registered Amt", a.vendor_name as "Prime Contractor Name", a.vendor_address as "Prime Contractor Address", a.vendor_city as "Prime Contractor City", a.vendor_state as "Prime Contractor State", a.vendor_zip as "Prime Contractor Zip" FROM (SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line, a.oge_contract_number , a.purpose, a.budget_name , a.oge_registered_amount, a.vendor_name, a.vendor_address, a.vendor_city, a.vendor_state, a.vendor_zip, a.created_load_id FROM oge_contract a LEFT JOIN oge_contract_previous_load  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE b.fms_contract_number IS NULL) a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.created_load_id =b.load_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 order by d.data_source_order, a.agency_code, a.fms_contract_number;


NYC_FILES_OGE_DELETED_RECORDS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name",a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number as "OGE Contract #", a.purpose as "Contract Purpose", a.budget_name as "Budget Name", a.oge_registered_amount as "OGE Registered Amt", a.vendor_name as "Prime Contractor Name", a.vendor_address as "Prime Contractor Address", a.vendor_city as "Prime Contractor City", a.vendor_state as "Prime Contractor State", a.vendor_zip as "Prime Contractor Zip"  FROM (SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line, a.oge_contract_number, a.purpose, a.budget_name, a.oge_registered_amount, a.vendor_name, a.vendor_address, a.vendor_city, a.vendor_state, a.vendor_zip, a.created_load_id FROM oge_contract_previous_load a LEFT JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE b.fms_contract_number IS NULL) a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.created_load_id =b.load_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 order by d.data_source_order, a.agency_code, a.fms_contract_number;


NYC_FILES_OGE_MODIFIED_RECORDS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name",a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number1 as "OGE Contract #", a.purpose1 as "Contract Purpose", a.budget_name1 as "Budget Name", a.oge_registered_amount1 as "OGE Registered Amt", a.vendor_name1 as "Prime Contractor Name", a.vendor_address1 as "Prime Contractor Address", a.vendor_city1 as "Prime Contractor City", a.vendor_state1 as "Prime Contractor State", a.vendor_zip1 as "Prime Contractor Zip",a.modified_data as "Modified Data", a.modified_data_old_value as "Modified Data Old value" FROM (SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'OGE Registered Amount' as modified_data, a.oge_registered_amount::varchar as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  a.oge_registered_amount <> b.oge_registered_amount UNION ALL SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'OGE Contract #' as modified_data, a.oge_contract_number as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  a.oge_contract_number <> b.oge_contract_number UNION ALL SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'Prime Contractor Name' as modified_data, a.vendor_name as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  UPPER(a.vendor_name) <> UPPER(b.vendor_name) UNION ALL SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'Purpose' as modified_data, a.purpose as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  UPPER(a.purpose) <> UPPER(b.purpose) UNION ALL SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'Budget Name' as modified_data, a.budget_name as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  UPPER(a.budget_name) <> UPPER(b.budget_name) UNION ALL SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line,  a.created_load_id,  b.oge_contract_number as oge_contract_number1, b.purpose as purpose1, b.budget_name as budget_name1, b.oge_registered_amount as oge_registered_amount1, b.vendor_name as vendor_name1, b.vendor_address as vendor_address1, b.vendor_city as vendor_city1, b.vendor_state as vendor_state1, b.vendor_zip as vendor_zip1,  'Prime Contractor Address' as modified_data, UPPER(a.vendor_address) || ' ' || UPPER(a.vendor_city) || ' ' || UPPER(a.vendor_state) || ' ' || UPPER(a.vendor_zip) as modified_data_old_value FROM oge_contract_previous_load a JOIN oge_contract  b ON a.fms_contract_number = b.fms_contract_number AND a.fms_commodity_line = b.fms_commodity_line WHERE  UPPER(a.vendor_address)  <> UPPER(b.vendor_address) OR  UPPER(a.vendor_city) <> UPPER(b.vendor_city)) a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.created_load_id =b.load_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 order by d.data_source_order, a.agency_code, a.fms_contract_number;

NYC_FILES_OGE_NOT_FOUND_IN_FMS_RECORDS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name",a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number as "OGE Contract #", a.purpose as "Contract Purpose", a.budget_name as "Budget Name", a.oge_registered_amount as "OGE Registered Amt", a.vendor_name as "Prime Contractor Name", a.vendor_address as "Prime Contractor Address", a.vendor_city as "Prime Contractor City", a.vendor_state as "Prime Contractor State", a.vendor_zip as "Prime Contractor Zip" FROM (SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line, a.oge_contract_number, a.purpose, a.budget_name, a.oge_registered_amount, a.vendor_name, a.vendor_address, a.vendor_city, a.vendor_state, a.vendor_zip, a.created_load_id FROM oge_contract a LEFT JOIN (select contract_number from history_agreement where latest_flag = 'Y')  b ON a.fms_contract_number = b.contract_number  WHERE b.contract_number IS NULL) a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.created_load_id =b.load_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 order by d.data_source_order, a.agency_code, a.fms_contract_number;

NYC_FILES_OGE_INCOMPLETE_VENDOR_DATA_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name",a.agency_code as "Agency Number", a.fms_contract_number as "Registration Contract ID", a.fms_commodity_line as "Commodity Line", a.oge_contract_number as "OGE Contract #", a.purpose as "Contract Purpose", a.budget_name as "Budget Name", a.oge_registered_amount as "OGE Registered Amt", a.vendor_name as "Prime Contractor Name", a.vendor_address as "Prime Contractor Address", a.vendor_city as "Prime Contractor City", a.vendor_state as "Prime Contractor State", a.vendor_zip as "Prime Contractor Zip" FROM (SELECT a.agency_code , a.fms_contract_number, a.fms_commodity_line, a.oge_contract_number , a.purpose, a.budget_name , a.oge_registered_amount, a.vendor_name, a.vendor_address, a.vendor_city, a.vendor_state, a.vendor_zip, a.created_load_id FROM oge_contract a  WHERE coalesce(a.vendor_name, '') = 'EDC To Provide' OR  coalesce(a.vendor_address, '') = 'N/A' OR  coalesce(a.vendor_city, '') = 'N/A' OR  coalesce(a.vendor_state, '') = 'N/A' OR  coalesce(a.vendor_zip, '') = 'N/A'    ) a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.created_load_id =b.load_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 order by d.data_source_order, a.agency_code, a.fms_contract_number;

# SOLR Checkbook2.0 VARIABLES 

NYC_SOLR_DELETE_PENDING_CONTRACTS=http://hostname:port/solrCoreName/update?stream.body=%3Cdelete%3E%3Cquery%3Econtract_status:pending%3C/query%3E%3C/delete%3E&commit=true
NYC_SOLR_DELETE_RECORDS=http://hostname:port/solrCoreName/dataimport?command=delta-import&clean=false&jobID=replace_job_id
NYC_SOLR_INCREMENTAL_INDEXING=http://hostname:port/solrCoreName/dataimport?command=full-import&clean=false&jobID=replace_job_id
NYC_SOLR_FULL_INDEXING=http://hostname:port/solrCoreName/dataimport?command=full-import&clean=true&jobID=0
NYC_SOLR_CHECK_INDEX_STATUS=http://hostname:port/solrCoreName/dataimport/
NYC_SOLR_RECORDS_COUNT=http://hostname:port/solrCoreName/select/?q=*%3A*&version=2.2&start=0&rows=10&indent=on


NYC_SOLR_DELETE_RECORDS_OGE=http://hostname:port/solrCoreName/update?stream.body=%3Cdelete%3E%3Cquery%3Eagency_type:oge%3C/query%3E%3C/delete%3E&commit=true
NYC_SOLR_FULL_INDEXING_OGE=http://hostname:port/solrCoreName/dataimport?command=full-import&entity=contracts_oge&entity=spending_oge&clean=false&jobID=0
NYC_SOLR_CHECK_INDEX_STATUS_OGE=http://hostname:port/solrCoreName/dataimport/

# END VARIABLES FOR NYC CHECKBOOK
