# This file was generated by Pentaho Data Integration version 3.2.0.
#



# START VARIABLES FOR NYC CHECKBOOK
NYC_EMAIL_SERVER=MAIL_SERVER_NAME_HERE
NYC_EMAIL_PORT=25
NYC_EMAIL_FROM=FROM_EMAIL_ID_HERE
NYC_EMAIL_TO=TO_EMAIL_ID_HERE
NYC_EMAIL_CC=CC_EMAIL_ID_HERE
NYC_FMS_GROUP_EMAIL_CC=CC_EMAIL_ID_HERE
NYC_OASIS_GROUP_EMAIL_CC=CC_EMAIL_ID_HERE


CHECKBOOK_DB_HOST=DB_HOSTNAME_HERE
CHECKBOOK_DB_USER=DB_USER_HERE
CHECKBOOK_DB_PASS=DB_PASSWORD_HERE
CHECKBOOK_DB_NAME=DB_NAME_HERE

CB_FILES_SOURCE_DIR=/home/gpadmin/ETL/SOURCE_DATA/
CB_FILES_DEST_DIR=/home/gpadmin/ETL/DEST/
CB_FILES_GPDIST_DIR=/home/gpadmin/ETL/GPFDIST/datafiles/
CB_FILES_BACKUP_DIR=/home/gpadmin/ETL/BACKUP/


NYC_FILES_TO_PROCESS_SQL=SELECT c.load_file_id::int as l_load_file_id,a.data_source_code as l_data_source_code, a.data_source_name::varchar(500) as l_data_source_name, d.standard_file_name::varchar(500) as l_standard_file_name, c.file_name::varchar(500) as l_file_name,(CASE WHEN type_of_feed = 'M' THEN 1 WHEN type_of_feed = 'W' THEN 2 WHEN type_of_feed = 'D' THEN 3 END ) l_file_order, file_timestamp::varchar(50) as l_file_timestamp, b.load_id::int as l_load_id FROM etl.ref_data_source a JOIN etl.etl_data_load b ON a.data_source_code = b.data_source_code  JOIN  etl.etl_data_load_file c ON b.load_id = c.load_id LEFT JOIN etl.ref_file_name_pattern d ON a.data_source_code = d.data_source_code WHERE b.job_id = replace_job_id AND  table_order=1 AND consume_flag='Y' AND pattern_matched_flag = 'Y' ORDER BY a.data_source_order, file_timestamp, 4;

NYC_FILES_STATUS_SQL=SELECT c.data_source_name::varchar(255) as "Data Source Name" , b.file_name::varchar(255) as "Data File Name", b.consume_flag "Is Consumed",  b.processed_flag as "Is Processed" FROM etl.etl_data_load a, etl.etl_data_load_file b,  etl.ref_data_source c  WHERE  a.load_id = b.load_id  AND a.data_source_code = c.data_source_code  AND c.table_order = 1 AND a.job_id = replace_job_id ORDER BY c.data_source_order;

NYC_FILES_LOAD_STATISTICS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name", b.file_name::varchar(255) as "Data File Name", total_records_staged + total_malformed_records as "Total Records Received", total_records_staged - total_invalid_records as "Total Records Staged", total_malformed_records as "Total Malformed Records", total_invalid_records as "Total Invalid Records", total_records_inserted as "Total Records Inserted in Transaction Tables", total_records_updated as "Total Records Updated in Transaction Tables" FROM (SELECT b.load_file_id,  sum(CASE WHEN description = 'staging' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_records_staged, sum(CASE WHEN description = 'invalid' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_invalid_records , sum(CASE WHEN description = 'Malformed'  THEN num_transactions ELSE 0 END) AS  total_malformed_records, sum(CASE WHEN description like '# of records inserted in%'  THEN num_transactions ELSE 0 END) AS total_records_inserted, sum(CASE WHEN description like '# of records updated in%'  THEN num_transactions ELSE 0 END) AS total_records_updated FROM etl.etl_data_load_verification a, etl.etl_data_load_file b, etl.etl_data_load c  WHERE a.load_file_id = b.load_file_id AND b.load_id = c.load_id   AND c.job_id = replace_job_id GROUP BY 1) X, etl.etl_data_load_file b, etl.etl_data_load c , etl.ref_data_source d WHERE X.load_file_id = b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id  ORDER BY d.data_source_order ;

NYC_FILES_LOAD_STATISTICS_OASIS_SQL=SELECT d.data_source_name::varchar(255) as "Data Source Name", b.file_name::varchar(255) as "Data File Name", total_records_staged + total_malformed_records as "Total Records Received", total_records_staged - total_invalid_records as "Total Records Staged", total_malformed_records as "Total Malformed Records", total_invalid_records as "Total Invalid Records", total_records_inserted as "Total Records Inserted in Transaction Tables", total_records_updated as "Total Records Updated in Transaction Tables" FROM (SELECT b.load_file_id,  sum(CASE WHEN description = 'staging' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_records_staged, sum(CASE WHEN description = 'invalid' AND coalesce(a.record_identifier,'') in ('H','A','M','') THEN num_transactions ELSE 0 END) AS total_invalid_records , sum(CASE WHEN description = 'Malformed'  THEN num_transactions ELSE 0 END) AS  total_malformed_records, sum(CASE WHEN description like '# of records inserted in%'  THEN num_transactions ELSE 0 END) AS total_records_inserted, sum(CASE WHEN description like '# of records updated in%'  THEN num_transactions ELSE 0 END) AS total_records_updated FROM etl.etl_data_load_verification a, etl.etl_data_load_file b, etl.etl_data_load c  WHERE a.load_file_id = b.load_file_id AND b.load_id = c.load_id   AND c.data_source_code = 'PC' AND c.job_id = replace_job_id GROUP BY 1) X, etl.etl_data_load_file b, etl.etl_data_load c , etl.ref_data_source d WHERE X.load_file_id = b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id  ORDER BY d.data_source_order ;


NYC_INVALID_RECORDS_SQL=select d.data_source_name::varchar(255) as "Data Source Name" , b.file_name::varchar(255) as "Data File Name", total_invalid_records as "Total Invalid records", invalid_reason::varchar(255) as "Invalid Reason" from invalid_records a, etl.etl_data_load_file  b, etl.etl_data_load c, etl.ref_data_source d where a.load_file_id =b.load_file_id AND b.load_id = c.load_id AND c.data_source_code =d.data_source_code AND d.table_order = 1 AND c.job_id = replace_job_id order by d.data_source_order ;

# SOLR Checkbook2.0 VARIABLES 

NYC_SOLR_DELETE_PENDING_CONTRACTS_DEV=http://hostname:port/solrCoreName/update?stream.body=%3Cdelete%3E%3Cquery%3Econtract_status:pending%3C/query%3E%3C/delete%3E&commit=true
NYC_SOLR_DELETE_RECORDS_DEV=http://hostname:port/solrCoreName/dataimport?command=delta-import&clean=false&jobID=replace_job_id
NYC_SOLR_INCREMENTAL_INDEXING_DEV=http://hostname:port/solrCoreName/dataimport?command=full-import&clean=false&jobID=replace_job_id
NYC_SOLR_FULL_INDEXING_DEV=http://hostname:port/solrCoreName/dataimport?command=full-import&clean=true&jobID=0
NYC_SOLR_CHECK_INDEX_STATUS_DEV=http://hostname:port/solrCoreName/dataimport/
NYC_SOLR_RECORDS_COUNT_DEV=http://hostname:port/solrCoreName/select/?q=*%3A*&version=2.2&start=0&rows=10&indent=on

# END VARIABLES FOR NYC CHECKBOOK
