widget_name,aggregate_table_name,create_table,query1,query2,execution_order
SpendingByCOAEntitiesAndFiscalYear,aggregateon_spending_coa_entities,"CREATE TABLE aggregateon_spending_coa_entities (
	department_id integer,
	agency_id smallint,
	spending_category_id smallint,
	expenditure_object_id integer,
	vendor_id integer,
	month_id int,
	year_id smallint,
	type_of_year char(1),
	total_spending_amount numeric(16,2),
	total_disbursements integer
	) DISTRIBUTED BY (department_id)  ","SELECT department_id,
		agency_id,
       	spending_category_id,
       	expenditure_object_id,   
       	vendor_id,
       	check_eft_issued_cal_month_id as month_id,
       	check_eft_issued_nyc_year_id as year_id,
       	'B' as type_of_year,
       	sum(check_amount) total_spending_amount,
       	count(*) as total_disbursements
  FROM disbursement_line_item_details 
  GROUP BY 1,2,3,4,5,6,7","SELECT 	department_id,
		agency_id,
       	spending_category_id,
       	expenditure_object_id,     
       	vendor_id,
       	check_eft_issued_cal_month_id AS month_id,
        calendar_fiscal_year_id AS year_id,
       	'C' as type_of_year,
       	sum(check_amount) total_spending_amount,
       	count(*) as total_disbursements
  FROM disbursement_line_item_details
  GROUP BY 1,2,3,4,5,6,7",1
SpendingByContractId,aggregateon_spending_contract,"CREATE TABLE aggregateon_spending_contract (
    agreement_id bigint,
    document_id character varying(20),
    document_code character varying(8),
	vendor_id integer,
	agency_id smallint,
	description character varying(60),	
	spending_category_id smallint,
	year_id smallint,
	type_of_year char(1),
	total_spending_amount numeric(16,2), 
	total_contract_amount numeric(16,2)
	) DISTRIBUTED BY (agreement_id)","SELECT agreement_id, contract_number, contract_document_code, vendor_id, agency_id, description,  
spending_category_id, year_id, type_of_year,
 sum(total_spending_amount) total_spending_amount,
  sum(contract_amount) total_contract_amount
FROM
(SELECT COALESCE(master_agreement_id, agreement_id) as agreement_id, 
       COALESCE(master_contract_number,contract_number) as contract_number,
       COALESCE(master_contract_document_code,contract_document_code) as contract_document_code,
       COALESCE(master_contract_vendor_id,contract_vendor_id) as vendor_id,
       COALESCE(master_contract_agency_id,contract_agency_id) as agency_id,
       COALESCE(master_purpose,purpose) as description,
       spending_category_id,
       check_eft_issued_nyc_year_id AS year_id,
       'B' as type_of_year,
       sum(check_amount) AS total_spending_amount,
       MIN(COALESCE(maximum_spending_limit,maximum_contract_amount)) AS contract_amount
  FROM disbursement_line_item_details 
  WHERE agreement_id IS NOT NULL AND contract_number IS NOT NULL
GROUP BY 1,2,3,4,5,6,7,8,9
) X
GROUP BY 1,2,3,4,5,6,7,8,9 ","SELECT agreement_id, contract_number, contract_document_code, vendor_id, agency_id, description,  
 spending_category_id, year_id, type_of_year,
 sum(total_spending_amount) total_spending_amount,
  sum(contract_amount) total_contract_amount
  FROM
(SELECT COALESCE(master_agreement_id, agreement_id) as agreement_id,
       COALESCE(master_contract_number,contract_number) as contract_number,
       COALESCE(master_contract_document_code,contract_document_code) as contract_document_code,
       COALESCE(master_contract_vendor_id_cy,contract_vendor_id_cy) as vendor_id,
       COALESCE(master_contract_agency_id_cy,contract_agency_id_cy) as agency_id,
       COALESCE(master_purpose_cy,purpose_cy) as description,
       calendar_fiscal_year_id AS year_id,   
       spending_category_id,
       'C' as type_of_year,
       sum(check_amount) AS total_spending_amount,
       MIN(COALESCE(maximum_spending_limit_cy,maximum_contract_amount_cy)) AS contract_amount
  FROM disbursement_line_item_details
  WHERE agreement_id IS NOT NULL AND contract_number IS NOT NULL
GROUP BY 1,2,3,4,5,6,7,8,9 ) X
 GROUP BY 1,2,3,4,5,6,7,8,9 ",2
SpendingByVendorId,aggregateon_spending_vendor,"CREATE TABLE aggregateon_spending_vendor (
	vendor_id integer,
	agency_id smallint,
	spending_category_id smallint,
	year_id smallint,
	type_of_year char(1),
	total_spending_amount numeric(16,2), 
	total_contract_amount numeric(16,2),
	is_all_categories char(1)
	) DISTRIBUTED BY (vendor_id)","SELECT X.vendor_id, X.agency_id, X.spending_category_id,   
       X.year_id,
       X.type_of_year,
       X.total_spending_amount,
       Y.total_contract_amount,
       'N' as is_all_categories
  FROM (SELECT agency_id,
               vendor_id,
               spending_category_id,
               check_eft_issued_nyc_year_id AS year_id,
               'B' as type_of_year,
               sum(check_amount) AS total_spending_amount
          FROM    disbursement_line_item_details a 
		  WHERE  a.spending_category_id <> 2
GROUP BY 1,2,3,4) X
LEFT JOIN (SELECT vendor_id, agency_id, spending_category_id, year_id, sum(total_contract_amount) as total_contract_amount
 FROM aggregateon_spending_contract WHERE type_of_year = 'B' 
 GROUP BY 1,2,3,4) Y
 ON X.vendor_id = Y.vendor_id AND X.agency_id = Y.agency_id AND X.spending_category_id = Y.spending_category_id AND X.year_id = Y.year_id 
 UNION ALL
   SELECT X.vendor_id, X.agency_id, X.spending_category_id::smallint,     
       X.year_id,
       X.type_of_year,
       X.total_spending_amount,
       Y.total_contract_amount,
       'Y' as is_all_categories
  FROM (SELECT agency_id,
               vendor_id,               
               check_eft_issued_nyc_year_id AS year_id,
               NULL as spending_category_id,
               'B' as type_of_year,
               sum(check_amount) AS total_spending_amount
          FROM    disbursement_line_item_details a 
		  WHERE  a.spending_category_id <> 2
GROUP BY 1,2,3) X
LEFT JOIN (SELECT vendor_id, agency_id, year_id, SUM(total_contract_amount) as total_contract_amount
FROM 
(SELECT agreement_id, vendor_id, agency_id, year_id, MIN(total_contract_amount) as total_contract_amount
 FROM aggregateon_spending_contract WHERE type_of_year = 'B' 
 GROUP BY 1,2,3,4) Z GROUP BY 1,2,3) Y
 ON X.vendor_id = Y.vendor_id AND X.agency_id = Y.agency_id AND X.year_id = Y.year_id","SELECT X.vendor_id, X.agency_id, X.spending_category_id, 
       X.year_id,
       X.type_of_year,
       X.total_spending_amount,
       Y.total_contract_amount,
       'N' as is_all_categories
  FROM (SELECT agency_id,
               vendor_id,
               spending_category_id,
               calendar_fiscal_year_id AS year_id,
               'C' as type_of_year,
               sum(check_amount) AS total_spending_amount
          FROM    disbursement_line_item_details a 
		  WHERE  a.spending_category_id <> 2
GROUP BY 1,2,3,4) X
LEFT JOIN (SELECT vendor_id, agency_id, spending_category_id, year_id, sum(total_contract_amount) as total_contract_amount
 FROM aggregateon_spending_contract WHERE type_of_year = 'C' 
 GROUP BY 1,2,3,4) Y
 ON X.vendor_id = Y.vendor_id AND X.agency_id = Y.agency_id AND X.spending_category_id = Y.spending_category_id AND X.year_id = Y.year_id 
 UNION ALL
   SELECT X.vendor_id, X.agency_id, X.spending_category_id::smallint,  
       X.year_id,
       X.type_of_year,
       X.total_spending_amount,
       Y.total_contract_amount,
       'Y' as is_all_categories
  FROM (SELECT agency_id,
               vendor_id,
               calendar_fiscal_year_id AS year_id,
               NULL as spending_category_id,
               'C' as type_of_year,
               sum(check_amount) AS total_spending_amount
          FROM    disbursement_line_item_details a 
		  WHERE  a.spending_category_id <> 2
GROUP BY 1,2,3) X
LEFT JOIN (SELECT vendor_id, agency_id, year_id, SUM(total_contract_amount) as total_contract_amount
FROM 
(SELECT agreement_id, vendor_id, agency_id, year_id, MIN(total_contract_amount) as total_contract_amount
 FROM aggregateon_spending_contract WHERE type_of_year = 'C' 
 GROUP BY 1,2,3,4) Z GROUP BY 1,2,3) Y
 ON X.vendor_id = Y.vendor_id AND X.agency_id = Y.agency_id AND X.year_id = Y.year_id ",3
SpendingByVendorExpObject,aggregateon_spending_vendor_exp_object,"CREATE TABLE aggregateon_spending_vendor_exp_object(
	vendor_id integer,
	expenditure_object_id integer,
	spending_category_id smallint,
	year_id smallint,
	type_of_year char(1),
	total_spending_amount numeric(16,2) )
DISTRIBUTED BY (expenditure_object_id)","SELECT vendor_id,expenditure_object_id,spending_category_id,
 check_eft_issued_nyc_year_id AS year_id, 'B' as type_of_year,SUM(check_amount) as total_spending_amount
 FROM disbursement_line_item_details
GROUP BY 1,2,3,4","SELECT vendor_id,expenditure_object_id,spending_category_id,
 calendar_fiscal_year_id AS year_id,  'C' as type_of_year,SUM(check_amount) as total_spending_amount
 FROM disbursement_line_item_details
GROUP BY 1,2,3,4",4
RevenueByCategoryId,aggregateon_revenue_category_funding_class,"CREATE TABLE aggregateon_revenue_category_funding_class(
                revenue_category_code character varying,
                revenue_category_id smallint,
                funding_class_id smallint,
                funding_class_code character varying,
                agency_id  smallint,
                budget_fiscal_year_id smallint,
                posting_amount numeric(16,2),
                adopted_amount numeric(16,2),
                current_modified_amount numeric(16,2))
DISTRIBUTED BY (agency_id)","SELECT b1.revenue_category_code,d.revenue_category_id,c.funding_class_id,b1.funding_class_code,b1.agency_id,budget_fiscal_year_id,
               posting_amount,adopted_amount,current_budget_amount
FROM
(
SELECT COALESCE(a.revenue_category_code,a1.revenue_category_code) as revenue_category_code,
               COALESCE(a.funding_class_code,a1.funding_class_code) as funding_class_code,
               COALESCE(a.agency_id,a1.agency_id) as agency_id,
       COALESCE(a.budget_fiscal_year_id,a1.budget_fiscal_year_id) as budget_fiscal_year_id,
       sum(a.posting_amount) AS posting_amount,
       SUM(a1.adopted_amount) AS adopted_amount,
       SUM(a1.current_budget_amount) AS current_budget_amount
  FROM (SELECT x.revenue_category_code,
                      x.funding_class_code,x.agency_id,
               x.budget_fiscal_year_id,
               sum(x.posting_amount) AS posting_amount
          FROM   revenue_details x
                   GROUP BY 1, 2,3,4) a
          full outer join
(SELECT c.revenue_category_code,
                d.funding_class_code,a.agency_id,
                a.budget_fiscal_year_id,
                sum(a.adopted_amount) as adopted_amount,
       sum(a.current_modified_budget_amount) as current_budget_amount
  FROM revenue_budget a
       JOIN ref_revenue_source b
          ON a.revenue_source_id = b.revenue_source_id
                                LEFT JOIN ref_revenue_category c ON b.revenue_category_id = c.revenue_category_id
                                LEFT JOIN ref_funding_class d ON b.funding_class_id = d.funding_class_id
  GROUP BY 1,2,3,4) a1 on a.revenue_category_code = a1.revenue_category_code and a.funding_class_code = a1.funding_class_code 
  and a.budget_fiscal_year_id = a1.budget_fiscal_year_id and a.agency_id = a1.agency_id
group by 1,2,3,4 ) b1 left join ref_year y on b1.budget_fiscal_year_id = y.year_id 
left join ref_funding_class c on b1.funding_class_code =c.funding_class_code and c.fiscal_year= y.year_value
left join ref_revenue_category d on b1.revenue_category_code = d.revenue_category_code",,5
RevenueByCategoryIdAndYear,aggregateon_revenue_category_funding_by_year,"CREATE TABLE aggregateon_revenue_category_funding_by_year(
                revenue_category_code character varying,
                revenue_category_id smallint,
                funding_class_id smallint,
                funding_class_code character varying,
                agency_id smallint,
                budget_fiscal_year_id smallint,
                posting_amount_cy numeric(16,2),
                posting_amount_ny numeric(16,2),
                posting_amount_ny_1 numeric(16,2),
                posting_amount numeric(16,2),
                other_amount numeric(16,2),
                remaining_amount numeric(16,2),
                current_modified_amount numeric(16,2))
DISTRIBUTED BY (agency_id)","SELECT X.revenue_category_code,d.revenue_category_id,c.funding_class_id,X.funding_class_code,X.agency_id,budget_fiscal_year_id,
               posting_amount_cy, posting_amount_ny, posting_amount_ny_1, posting_amount,other_amount,remaining_amount,current_budget_amount
FROM
(
SELECT revenue_category_code, funding_class_code, agency_id, budget_fiscal_year_id, posting_amount_cy, posting_amount_ny, posting_amount_ny_1, 
posting_amount, (posting_amount - (posting_amount_cy + posting_amount_ny + posting_amount_ny_1)) as other_amount, (current_budget_amount - posting_amount) as remaining_amount, current_budget_amount
FROM
(
SELECT a.revenue_category_code as revenue_category_code,
               a.funding_class_code as funding_class_code,
               a.agency_id as agency_id,
       a.budget_fiscal_year_id as budget_fiscal_year_id,
                   sum(a.posting_amount_cy) AS posting_amount_cy,
                   sum(a.posting_amount_ny) AS posting_amount_ny,
                   sum(a.posting_amount_ny_1) AS posting_amount_ny_1,
       sum(a.posting_amount) AS posting_amount,
       SUM(a1.current_budget_amount) AS current_budget_amount
  FROM (SELECT x.revenue_category_code,
                      x.funding_class_code,x.agency_id,
               x.budget_fiscal_year_id,
                                                   sum(CASE WHEN x.budget_fiscal_year = x.fiscal_year THEN x.posting_amount ELSE 0 END) AS posting_amount_cy,
                                                   sum(CASE WHEN x.budget_fiscal_year+1 = x.fiscal_year THEN x.posting_amount ELSE 0 END) AS posting_amount_ny,
                                                   sum(CASE WHEN x.budget_fiscal_year+2 = x.fiscal_year THEN x.posting_amount ELSE 0 END) AS posting_amount_ny_1,
               sum(x.posting_amount) AS posting_amount
          FROM   revenue_details x                          
                   GROUP BY 1, 2,3,4) a
          left join
(SELECT c.revenue_category_code,
  d.funding_class_code,a.agency_id,
a.budget_fiscal_year_id,
       sum(a.current_modified_budget_amount) as current_budget_amount
  FROM revenue_budget a
       JOIN ref_revenue_source b
          ON a.revenue_source_id = b.revenue_source_id
                                LEFT JOIN ref_revenue_category c ON b.revenue_category_id = c.revenue_category_id
                                LEFT JOIN ref_funding_class d ON b.funding_class_id = d.funding_class_id
  GROUP BY 1,2,3,4) a1 on a.revenue_category_code = a1.revenue_category_code and a.funding_class_code = a1.funding_class_code 
  and a.budget_fiscal_year_id = a1.budget_fiscal_year_id and a.agency_id = a1.agency_id
group by 1,2,3,4) b1 ) X left join ref_year y on X.budget_fiscal_year_id = y.year_id 
left join ref_funding_class c on X.funding_class_code =c.funding_class_code and c.fiscal_year= y.year_value
left join ref_revenue_category d on X.revenue_category_code = d.revenue_category_code",,6
PayrollByEmployeeAgency,aggregateon_payroll_employee_agency,"CREATE TABLE aggregateon_payroll_employee_agency(
	employee_id bigint,
	agency_id smallint,
	fiscal_year_id smallint,
	type_of_year char(1),
	pay_frequency varchar,
	type_of_employment varchar,
	employee_number varchar(70),
	start_date date,	
	annual_salary numeric(16,2),
	base_pay numeric(16,2),
	overtime_pay numeric(16,2),
	other_payments numeric(16,2),
	gross_pay numeric(16,2) )
DISTRIBUTED BY (employee_id)","SELECT e.employee_id,e.agency_id,e.fiscal_year_id,'B' as type_of_year,
	e.pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,
	min(e.employee_number) as employee_number,
	min(e.agency_start_date) as agency_start_date,
	max(annual_sal_table.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e JOIN (SELECT d.employee_id,d.payroll_number,d.job_sequence_number,d.fiscal_year,d.agency_id, d.amount_basis_id, d.pay_frequency, max(d.annual_salary) as annual_salary
		     FROM (SELECT employee_id,payroll_number,job_sequence_number,fiscal_year,agency_id, amount_basis_id, pay_frequency,  max(pay_date) as pay_date
		     	   FROM payroll a 	     	   
		           GROUP BY 1,2,3,4,5,6,7) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.payroll_number = c.payroll_number 
					     AND d.job_sequence_number = c.job_sequence_number
					     AND d.fiscal_year = c.fiscal_year
						 AND d.agency_id = c.agency_id
					     AND d.pay_date = c.pay_date 
					     AND d.amount_basis_id = c.amount_basis_id 
					     AND d.pay_frequency = c.pay_frequency GROUP BY 1,2,3,4,5,6,7) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.fiscal_year = annual_sal_table.fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
						AND e.agency_id = annual_sal_table.agency_id
						AND e.amount_basis_id = annual_sal_table.amount_basis_id
						AND e.pay_frequency = annual_sal_table.pay_frequency
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id
GROUP BY 1,2,3,4,5,6 ","SELECT e.employee_id,e.agency_id,e.calendar_fiscal_year_id,'C' as type_of_year,
	e.pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,	
	min(e.employee_number) as employee_number,
	min(e.agency_start_date) as agency_start_date,	
	max(annual_sal_table.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e JOIN (SELECT d.employee_id,d.payroll_number,d.job_sequence_number,d.calendar_fiscal_year,d.agency_id,d.amount_basis_id, d.pay_frequency, max(d.annual_salary) as annual_salary
		     FROM (SELECT employee_id,payroll_number,job_sequence_number,calendar_fiscal_year,agency_id, amount_basis_id, pay_frequency, max(pay_date) as pay_date
		     	   FROM payroll a 		     	   
		           GROUP BY 1,2,3,4,5,6,7) c JOIN payroll d ON d.employee_id = c.employee_id
					     AND d.payroll_number = c.payroll_number 
					     AND d.job_sequence_number = c.job_sequence_number
					     AND d.calendar_fiscal_year = c.calendar_fiscal_year
						 AND d.agency_id = c.agency_id
					     AND d.pay_date = c.pay_date 
					     AND d.amount_basis_id = c.amount_basis_id 
					     AND d.pay_frequency = c.pay_frequency GROUP BY 1,2,3,4,5,6,7) annual_sal_table ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.calendar_fiscal_year = annual_sal_table.calendar_fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
						AND e.agency_id = annual_sal_table.agency_id
						AND e.amount_basis_id = annual_sal_table.amount_basis_id
						AND e.pay_frequency = annual_sal_table.pay_frequency
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id	
GROUP BY 1,2,3,4,5,6 ",7
PayrollByAgency,aggregateon_payroll_agency,"CREATE TABLE aggregateon_payroll_agency(	
	agency_id smallint,	
	fiscal_year_id smallint,
	type_of_year char(1),
	base_pay numeric(16,2),
	other_payments numeric(16,2),
	gross_pay numeric(16,2),
	overtime_pay numeric(16,2),
	total_employees int,
	total_salaried_employees int,
	total_hourly_employees int,
	total_overtime_employees int,
	annual_salary numeric(16,2))
DISTRIBUTED BY (agency_id)","SELECT X.agency_id,X.fiscal_year_id, X.type_of_year,
	  MIN(base_pay) as base_pay,
	  MIN(other_payments) as other_payments,
	  MIN(gross_pay) as gross_pay,
	  MIN(overtime_pay) as overtime_pay,
	  MIN(total_employees) as total_employees,
	  MIN(salaried_employees) as salaried_employees,
	  MIN(hourly_employees) as hourly_employees,
	  MIN(total_overtime_employees) as total_overtime_employees,
	  SUM(annual_salary) as annual_salary
FROM
(SELECT agency_id,fiscal_year_id,'B' as type_of_year, 
	SUM(base_pay) as base_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3) X
JOIN (SELECT employee_id, agency_id, fiscal_year_id, type_of_year, max(coalesce(annual_salary,0)) as  annual_salary
			  FROM aggregateon_payroll_employee_agency 
			  WHERE type_of_year = 'B' AND type_of_employment = 'Salaried'
			  GROUP BY 1,2,3,4) Y ON X.agency_id = Y.agency_id AND X.fiscal_year_id = Y.fiscal_year_id AND X.type_of_year = Y.type_of_year
GROUP BY 1,2,3 ","SELECT X.agency_id,X.calendar_fiscal_year_id, X.type_of_year,
	  MIN(base_pay) as base_pay,
	  MIN(other_payments) as other_payments,
	  MIN(gross_pay) as gross_pay,
	  MIN(overtime_pay) as overtime_pay,
	  MIN(total_employees) as total_employees,
	  MIN(salaried_employees) as salaried_employees,
	  MIN(hourly_employees) as hourly_employees,
	  MIN(total_overtime_employees) as total_overtime_employees,
	  SUM(annual_salary) as annual_salary
FROM
(SELECT agency_id,calendar_fiscal_year_id,'C' as type_of_year, 
	SUM(base_pay) as base_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
GROUP BY 1,2,3) X
JOIN (SELECT employee_id, agency_id, fiscal_year_id, type_of_year, max(coalesce(annual_salary,0)) as  annual_salary
			  FROM aggregateon_payroll_employee_agency 
			  WHERE type_of_year = 'C' AND type_of_employment = 'Salaried'
			  GROUP BY 1,2,3,4) Y ON X.agency_id = Y.agency_id AND X.calendar_fiscal_year_id = Y.fiscal_year_id AND X.type_of_year = Y.type_of_year
GROUP BY 1,2,3 ",8
PayrollByMonth,aggregateon_payroll_coa_month,"CREATE TABLE aggregateon_payroll_coa_month(	
	agency_id smallint,
	department_id integer,
	fiscal_year_id smallint,
	month_id int,
	type_of_year char(1),	
	base_pay numeric(16,2),
	overtime_pay numeric(16,2),
	other_payments numeric(16,2),
	gross_pay numeric(16,2) )
DISTRIBUTED BY (agency_id) ","SELECT agency_id,department_id,fiscal_year_id,calendar_month_id,'B' as type_of_year,
	SUM(base_pay) as base_pay,
	SUM(overtime_pay) as overtime_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
	FROM payroll a JOIN ref_date b ON a.pay_date_id = b.date_id
	GROUP BY 1,2,3,4,5 ","SELECT agency_id,department_id,calendar_fiscal_year_id,calendar_month_id,'C' as type_of_year,
	SUM(base_pay) as base_pay,
	SUM(overtime_pay) as overtime_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
	FROM payroll a JOIN ref_date b ON a.pay_date_id = b.date_id
	GROUP BY 1,2,3,4,5 ",9
PayrollByYear,aggregateon_payroll_year,"CREATE TABLE aggregateon_payroll_year(	
	fiscal_year_id smallint,
	type_of_year char(1),	
	total_employees int,
	total_salaried_employees int,
	total_hourly_employees int,
	total_overtime_employees int)
DISTRIBUTED BY (fiscal_year_id) ","SELECT fiscal_year_id,'B' as type_of_year,
	COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
	       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
	       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
	FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
	GROUP BY 1,2 ","SELECT calendar_fiscal_year_id,'C' as type_of_year,
	COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
	       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
	       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
	FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
	GROUP BY 1,2 ",10
PayrollByEmployeeAgencyMonth,aggregateon_payroll_employee_agency_month,"CREATE TABLE aggregateon_payroll_employee_agency_month(
	employee_id bigint,
	agency_id smallint,
	fiscal_year_id smallint,
	type_of_year char(1),
	month_id int,
	pay_frequency varchar,
	type_of_employment varchar,
	employee_number varchar(70),
	start_date date,	
	annual_salary numeric(16,2),
	base_pay numeric(16,2),
	overtime_pay numeric(16,2),
	other_payments numeric(16,2),
	gross_pay numeric(16,2) )
DISTRIBUTED BY (employee_id) ","SELECT e.employee_id,e.agency_id,e.fiscal_year_id,'B' as type_of_year,b.calendar_month_id,
	e.pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,	
	min(e.employee_number) as employee_number,
	min(e.agency_start_date) as agency_start_date,	
	max(e.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e LEFT JOIN (SELECT employee_id,payroll_number,job_sequence_number,fiscal_year,agency_id, calendar_month_id, amount_basis_id, pay_frequency, max(pay_date) as pay_date
		     	   FROM payroll a 
		     	   JOIN ref_date b ON a.pay_date_id = b.date_id
		           GROUP BY 1,2,3,4,5,6,7,8) annual_sal_table  ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.fiscal_year = annual_sal_table.fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
						AND e.agency_id = annual_sal_table.agency_id
						AND e.amount_basis_id = annual_sal_table.amount_basis_id
						AND e.pay_date = annual_sal_table.pay_date
						AND e.pay_frequency = annual_sal_table.pay_frequency
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id	
	JOIN ref_date b ON e.pay_date_id = b.date_id
GROUP BY 1,2,3,4,5,6,7 ","SELECT e.employee_id,e.agency_id,e.calendar_fiscal_year_id,'C' as type_of_year,b.calendar_month_id,
	e.pay_frequency,
	(CASE WHEN amount_basis_name='ANNUAL' THEN 'Salaried' ELSE 'Non-Salaried' END) as type_of_employment,	
	min(e.employee_number) as employee_number,
	min(e.agency_start_date) as agency_start_date,	
	max(e.annual_salary) as annual_salary,
	SUM(base_pay) as base_pay,
	sum(overtime_pay) as overtime_pay,
	sum(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay_ytd	
FROM payroll e LEFT JOIN (SELECT employee_id,payroll_number,job_sequence_number,calendar_fiscal_year,agency_id, calendar_month_id, amount_basis_id, pay_frequency, max(pay_date) as pay_date
		     	   FROM payroll a 
		     	   JOIN ref_date b ON a.pay_date_id = b.date_id
		           GROUP BY 1,2,3,4,5,6,7,8) annual_sal_table  ON e.employee_id = annual_sal_table.employee_id
		     			AND e.payroll_number = annual_sal_table.payroll_number 
		     			AND e.calendar_fiscal_year = annual_sal_table.calendar_fiscal_year
		     			AND e.job_sequence_number = annual_sal_table.job_sequence_number
						AND e.agency_id = annual_sal_table.agency_id
						AND e.amount_basis_id = annual_sal_table.amount_basis_id
						AND e.pay_date = annual_sal_table.pay_date
						AND e.pay_frequency = annual_sal_table.pay_frequency
	JOIN ref_amount_basis z ON e.amount_basis_id = z.amount_basis_id	
	JOIN ref_date b ON e.pay_date_id = b.date_id
GROUP BY 1,2,3,4,5,6,7 ",11
PayrollByAgencyMonth,aggregateon_payroll_agency_month,"CREATE TABLE aggregateon_payroll_agency_month(	
	agency_id smallint,	
	fiscal_year_id smallint,
	type_of_year char(1),
	month_id int,
	base_pay numeric(16,2),
	other_payments numeric(16,2),
	gross_pay numeric(16,2),
	overtime_pay numeric(16,2),
	total_employees int,
	total_salaried_employees int,
	total_hourly_employees int,
	total_overtime_employees int,
	annual_salary numeric(16,2))
DISTRIBUTED BY (agency_id) ","SELECT X.agency_id,X.fiscal_year_id, X.type_of_year,X.calendar_month_id,
	  MIN(base_pay) as base_pay,
	  MIN(other_payments) as other_payments,
	  MIN(gross_pay) as gross_pay,
	  MIN(overtime_pay) as overtime_pay,
	  MIN(total_employees) as total_employees,
	  MIN(salaried_employees) as salaried_employees,
	  MIN(hourly_employees) as hourly_employees,
	  MIN(total_overtime_employees) as total_overtime_employees,
	  SUM(annual_salary) as annual_salary
FROM
(SELECT agency_id,fiscal_year_id,'B' as type_of_year, calendar_month_id,
	SUM(base_pay) as base_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
JOIN ref_date c ON a.pay_date_id = c.date_id
GROUP BY 1,2,3,4) X
JOIN (SELECT employee_id, agency_id, fiscal_year_id, type_of_year, month_id as calendar_month_id, max(coalesce(annual_salary,0)) as  annual_salary
			  FROM aggregateon_payroll_employee_agency_month
			  WHERE type_of_year = 'B' AND type_of_employment = 'Salaried'
			  GROUP BY 1,2,3,4,5) Y ON X.agency_id = Y.agency_id AND X.fiscal_year_id = Y.fiscal_year_id AND X.type_of_year = Y.type_of_year AND X.calendar_month_id = Y.calendar_month_id
GROUP BY 1,2,3,4 ","SELECT X.agency_id,X.calendar_fiscal_year_id, X.type_of_year,X.calendar_month_id,
	  MIN(base_pay) as base_pay,
	  MIN(other_payments) as other_payments,
	  MIN(gross_pay) as gross_pay,
	  MIN(overtime_pay) as overtime_pay,
	  MIN(total_employees) as total_employees,
	  MIN(salaried_employees) as salaried_employees,
	  MIN(hourly_employees) as hourly_employees,
	  MIN(total_overtime_employees) as total_overtime_employees,
	  SUM(annual_salary) as annual_salary
FROM
(SELECT agency_id,calendar_fiscal_year_id,'C' as type_of_year, calendar_month_id,
	SUM(base_pay) as base_pay,
	SUM(other_payments) as other_payments,
	SUM(gross_pay) as gross_pay,
       SUM(overtime_pay) as overtime_pay,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
JOIN ref_date c ON a.pay_date_id = c.date_id
GROUP BY 1,2,3,4) X
JOIN (SELECT employee_id, agency_id, fiscal_year_id, type_of_year, month_id as calendar_month_id, max(coalesce(annual_salary,0)) as  annual_salary
			  FROM aggregateon_payroll_employee_agency_month 
			  WHERE type_of_year = 'C' AND type_of_employment = 'Salaried'
			  GROUP BY 1,2,3,4,5) Y ON X.agency_id = Y.agency_id AND X.calendar_fiscal_year_id = Y.fiscal_year_id AND X.type_of_year = Y.type_of_year AND X.calendar_month_id = Y.calendar_month_id
GROUP BY 1,2,3,4 ",12
PayrollByYearAndMonth,aggregateon_payroll_year_and_month,"CREATE TABLE aggregateon_payroll_year_and_month(	
	fiscal_year_id smallint,
	type_of_year char(1),	
	month_id int,
	total_employees int,
	total_salaried_employees int,
	total_hourly_employees int,
	total_overtime_employees int)
DISTRIBUTED BY (fiscal_year_id) ","SELECT fiscal_year_id,'B' as type_of_year,calendar_month_id,
	COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
	       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
	       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
	FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
	JOIN ref_date c ON a.pay_date_id = c.date_id
	GROUP BY 1,2,3 ","SELECT calendar_fiscal_year_id,'C' as type_of_year,calendar_month_id,
	COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) +
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as total_employees,
	       COUNT(DISTINCT (CASE WHEN  amount_basis_name='ANNUAL' THEN employee_number END)) as salaried_employees,
	       ROUND((COUNT(DISTINCT (CASE WHEN  amount_basis_name IN ('DAILY','HOURLY') THEN employee_number END)) )::DECIMAL /2) as hourly_employees,
	       COUNT(DISTINCT (CASE WHEN overtime_pay >0 THEN employee_number END)) as total_overtime_employees
	FROM payroll a JOIN ref_amount_basis b ON a.amount_basis_id = b.amount_basis_id
	JOIN ref_date c ON a.pay_date_id = c.date_id
	GROUP BY 1,2,3 ",13
PopulateContractSpendingByYear,mid_aggregateon_disbursement_spending_year,"CREATE TABLE mid_aggregateon_disbursement_spending_year(
	original_agreement_id bigint,
	fiscal_year smallint,
	fiscal_year_id smallint,
	check_amount numeric(16,2),
	type_of_year char(1),
	master_agreement_yn character(1))
DISTRIBUTED BY (original_agreement_id)","SELECT agreement_id,
 a.fiscal_year,
 year_id,
 SUM(check_amount),
 'B' as type_of_year,
 'N' as master_agreement_yn
FROM disbursement_line_item_details a JOIN ref_year b ON a.fiscal_year = b.year_value AND agreement_id IS NOT NULL
GROUP  BY 1,2,3,5,6
UNION ALL
SELECT agreement_id,
 a.calendar_fiscal_year,
 year_id,
 SUM(check_amount),
 'C' as type_of_year,
 'N' as master_agreement_yn
FROM disbursement_line_item_details a JOIN ref_year b ON a.calendar_fiscal_year = b.year_value AND agreement_id IS NOT NULL
GROUP  BY 1,2,3,5,6","SELECT master_agreement_id,
 a.fiscal_year,
 year_id,
 SUM(check_amount),
 'B' as type_of_year,
 'Y' as master_agreement_yn
FROM disbursement_line_item_details a JOIN ref_year b ON a.fiscal_year = b.year_value AND master_agreement_id IS NOT NULL
GROUP  BY 1,2,3,5,6
UNION ALL
SELECT master_agreement_id,
 a.calendar_fiscal_year,
 year_id,
 SUM(check_amount),
 'C' as type_of_year,
 'Y' as master_agreement_yn
FROM disbursement_line_item_details a JOIN ref_year b ON a.calendar_fiscal_year = b.year_value AND master_agreement_id IS NOT NULL
GROUP  BY 1,2,3,5,6",15
ContractLandingWidgets,aggregateon_contracts_cumulative_spending,"CREATE TABLE aggregateon_contracts_cumulative_spending(
	original_agreement_id bigint,
	fiscal_year smallint,
	fiscal_year_id smallint,
	document_code_id smallint,
	master_agreement_yn character(1),
	description varchar,
	contract_number varchar,
	vendor_id int,
	award_method_id smallint,
	agency_id smallint,
	industry_type_id smallint,
	award_size_id smallint,
	original_contract_amount numeric(16,2),
	maximum_contract_amount numeric(16,2),
	spending_amount_disb numeric(16,2),
	spending_amount numeric(16,2),
	current_year_spending_amount numeric(16,2),
	dollar_difference numeric(16,2),
	percent_difference numeric(16,2),
	status_flag char(1),
	type_of_year char(1)	
) DISTRIBUTED BY (vendor_id)","SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		a.master_agreement_yn,
		MIN(description),
		MIN(contract_number),
		MIN(vendor_id),
		MIN(award_method_id),
		MIN(a.agency_id) ,
		MIN(industry_type_id),
		MIN(award_size_id),
		MIN(original_contract_amount),
		MIN(maximum_contract_amount),
		SUM(coalesce(b.check_amount,0)),
		MIN(a.rfed_amount),
		SUM(CASE WHEN b.fiscal_year IS NOT NULL AND a.fiscal_year = b.fiscal_year THEN coalesce(b.check_amount,0) ELSE 0 END) as current_year_spending_amount,
		MIN(dollar_difference),
		MIN(percent_difference),
		'A' as status_flag,
		'B' as type_of_year
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN mid_aggregateon_disbursement_spending_year b ON a.original_agreement_id = b.original_agreement_id AND a.fiscal_year >= b.fiscal_year AND b.type_of_year ='B'
	WHERE  a.status_flag='A'
	GROUP BY 1,2,3,4,5
UNION ALL
SELECT a.original_agreement_id,
	a.fiscal_year,
	ry.year_id,
	document_code_id,
	a.master_agreement_yn,
	MIN(description),
	MIN(contract_number),
	MIN(vendor_id),
	MIN(award_method_id),
	MIN(a.agency_id) ,
	MIN(industry_type_id),
	MIN(award_size_id),
	MIN(original_contract_amount),
	MIN(maximum_contract_amount),
	SUM(coalesce(b.check_amount,0)) ,
	MIN(a.rfed_amount),
	SUM(CASE WHEN b.fiscal_year IS NOT NULL AND a.fiscal_year = b.fiscal_year THEN coalesce(b.check_amount,0) ELSE 0 END) as current_year_spending_amount,
	MIN(dollar_difference),
	MIN(percent_difference),
	'R' as status_flag, 
	'B' as type_of_year	
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN mid_aggregateon_disbursement_spending_year b ON a.original_agreement_id = b.original_agreement_id AND a.fiscal_year >= b.fiscal_year AND b.type_of_year ='B' 
	WHERE   a.status_flag='R'
	GROUP BY 1,2,3,4,5","SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		a.master_agreement_yn,
		MIN(description),
		MIN(contract_number),
		MIN(vendor_id),
		MIN(award_method_id),
		MIN(a.agency_id) ,
		MIN(industry_type_id),
		MIN(award_size_id),
		MIN(original_contract_amount),
		MIN(maximum_contract_amount),
		SUM(coalesce(b.check_amount,0)),
		MIN(a.rfed_amount),
		SUM(CASE WHEN b.fiscal_year IS NOT NULL AND a.fiscal_year = b.fiscal_year THEN coalesce(b.check_amount,0) ELSE 0 END) as current_year_spending_amount,
		MIN(dollar_difference),
		MIN(percent_difference),
		'A' as status_flag,
		'C' as type_of_year
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN mid_aggregateon_disbursement_spending_year b ON a.original_agreement_id = b.original_agreement_id AND a.fiscal_year >= b.fiscal_year AND b.type_of_year ='C'
	WHERE  a.status_flag='A'
	GROUP BY 1,2,3,4,5
UNION ALL
SELECT a.original_agreement_id,
	a.fiscal_year,
	ry.year_id,
	document_code_id,
	a.master_agreement_yn,
	MIN(description),
	MIN(contract_number),
	MIN(vendor_id),
	MIN(award_method_id),
	MIN(a.agency_id),
	MIN(industry_type_id),
	MIN(award_size_id),
	MIN(original_contract_amount),
	MIN(maximum_contract_amount),
	SUM(coalesce(b.check_amount,0)) ,
	MIN(a.rfed_amount),
	SUM(CASE WHEN b.fiscal_year IS NOT NULL AND a.fiscal_year = b.fiscal_year THEN coalesce(b.check_amount,0) ELSE 0 END) as current_year_spending_amount,
	MIN(dollar_difference),
	MIN(percent_difference),
	'R' as status_flag, 
	'C' as type_of_year	
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN mid_aggregateon_disbursement_spending_year b ON a.original_agreement_id = b.original_agreement_id AND a.fiscal_year >= b.fiscal_year AND b.type_of_year ='C'
	WHERE   a.status_flag='R'
	GROUP BY 1,2,3,4,5",16
ContractLandingTopGraph,aggregateon_contracts_spending_by_month,"CREATE TABLE aggregateon_contracts_spending_by_month(
 original_agreement_id bigint,
 fiscal_year smallint,
 fiscal_year_id smallint,
 document_code_id smallint,
 month_id integer,
 vendor_id int,
 award_method_id smallint,
 agency_id smallint,
 industry_type_id smallint,
 award_size_id smallint,
 spending_amount numeric(16,2),
 status_flag char(1),
 type_of_year char(1) 
) DISTRIBUTED BY (vendor_id)","SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),		
		'A' as status_flag,
		'B' as type_of_year
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.agreement_id AND a.fiscal_year = b.fiscal_year 
	WHERE  a.status_flag='A' AND a.master_agreement_yn = 'N'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),		
		'A' as status_flag,
		'B' as type_of_year
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.master_agreement_id AND a.fiscal_year = b.fiscal_year 
	WHERE  a.status_flag='A' AND a.master_agreement_yn = 'Y'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
		'R' as status_flag, 
		'B' as type_of_year	
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.agreement_id AND a.fiscal_year = b.fiscal_year 
	WHERE   a.status_flag='R' AND a.master_agreement_yn = 'N'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
		'R' as status_flag, 
		'B' as type_of_year	
	FROM 	agreement_snapshot_expanded a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.master_agreement_id AND a.fiscal_year = b.fiscal_year 
	WHERE   a.status_flag='R' AND a.master_agreement_yn = 'Y'
	GROUP BY 1,2,3,4,5,6,7,8,9,10 ","SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
		'A' as status_flag,
		'C' as type_of_year
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.agreement_id AND a.fiscal_year = b.calendar_fiscal_year 
	WHERE  a.status_flag='A' AND a.master_agreement_yn = 'N'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
		'A' as status_flag,
		'C' as type_of_year
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.master_agreement_id AND a.fiscal_year = b.calendar_fiscal_year 
	WHERE  a.status_flag='A' AND a.master_agreement_yn = 'Y'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
	'R' as status_flag, 
	'C' as type_of_year	
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.agreement_id AND a.fiscal_year = b.calendar_fiscal_year 
	WHERE   a.status_flag='R' AND a.master_agreement_yn = 'N'
	GROUP BY 1,2,3,4,5,6,7,8,9,10
UNION ALL
SELECT  a.original_agreement_id,
		a.fiscal_year,
		ry.year_id,
		document_code_id,
		b.check_eft_issued_cal_month_id as month_id,		
		a.vendor_id,
		a.award_method_id,
		a.agency_id ,	
		a.industry_type_id,
		a.award_size_id,
		SUM(coalesce(b.check_amount,0)),
	'R' as status_flag, 
	'C' as type_of_year	
	FROM 	agreement_snapshot_expanded_cy a 
	LEFT JOIN ref_year ry ON a.fiscal_year = ry.year_value 
	LEFT JOIN disbursement_line_item_details b ON a.original_agreement_id = b.master_agreement_id AND a.fiscal_year = b.calendar_fiscal_year 
	WHERE   a.status_flag='R' AND a.master_agreement_yn = 'Y'
	GROUP BY 1,2,3,4,5,6,7,8,9,10 ",17
ContractsForSumAndTotals,aggregateon_total_contracts,"CREATE TABLE aggregateon_total_contracts
(
fiscal_year smallint,
fiscal_year_id smallint,
vendor_id int,
award_method_id smallint,
agency_id smallint,
industry_type_id smallint,
award_size_id smallint,
total_contracts bigint,
total_commited_contracts bigint,
total_master_agreements bigint,
total_standalone_contracts bigint,
total_revenue_contracts bigint,
total_revenue_contracts_amount numeric(16,2),
total_commited_contracts_amount numeric(16,2),
total_contracts_amount numeric(16,2),
total_spending_amount_disb numeric(16,2), 
total_spending_amount numeric(16,2), 
status_flag char(1),
type_of_year char(1)
) DISTRIBUTED BY (fiscal_year)","SELECT 	fiscal_year, 
		fiscal_year_id,
		vendor_id,
		award_method_id,
		agency_id,
		industry_type_id,
		award_size_id,
		SUM(CASE WHEN b.document_code IN ('MA1','MMA1','CT1','CTA1') THEN 1 ELSE 0 END) AS    total_contracts,
		SUM(CASE WHEN b.document_code IN ('MA1','MMA1','CT1') THEN 1 ELSE 0 END) AS total_commited_contracts,
		SUM(CASE WHEN b.document_code IN ('MA1','MMA1') THEN 1 ELSE 0 END) AS total_master_agreements,
		SUM(CASE WHEN b.document_code IN ('CT1','CTA1') THEN  1 ELSE 0 END) AS total_standalone_contracts,
		SUM(CASE WHEN b.document_code IN ('RCT1') THEN  1 ELSE 0 END) AS total_revenue_contracts,
		SUM(CASE WHEN b.document_code IN ('RCT1') THEN  maximum_contract_amount ELSE 0 END) AS total_revenue_contracts_amount,
		SUM(CASE WHEN b.document_code IN ('MA1','MMA1','CT1') THEN maximum_contract_amount ELSE 0 END) AS total_commited_contracts_amount,
		SUM(CASE WHEN b.document_code IN ('MA1','MMA1','CT1','CTA1') THEN maximum_contract_amount ELSE 0 END) AS total_contracts_amount,
		SUM(CASE WHEN b.document_code IN ('CT1','CTA1','DO1') THEN spending_amount_disb ELSE 0 END) as total_spending_amount_disb,
		SUM(CASE WHEN b.document_code IN ('CT1','CTA1','DO1') THEN spending_amount ELSE 0 END) as total_spending_amount,
		status_flag,
		type_of_year
FROM aggregateon_contracts_cumulative_spending a LEFT JOIN ref_document_code b ON a.document_code_id = b.document_code_id
GROUP BY 1,2,3,4,5,6,7,18,19",,18
ContractsByAppropriationUnit,aggregateon_contracts_department,"CREATE TABLE aggregateon_contracts_department(
	document_code_id smallint,
	document_agency_id smallint,
	agency_id smallint,
	department_id integer,
	fiscal_year smallint,
	fiscal_year_id smallint,
	award_method_id smallint,
	vendor_id int,
	industry_type_id smallint,
	award_size_id smallint,
	spending_amount_disb numeric(16,2),
	spending_amount numeric(16,2),
	total_contracts integer,
	status_flag char(1),
	type_of_year char(1)
) DISTRIBUTED BY (department_id)","SELECT a.document_code_id,
 		a.agency_id as document_agency_id,
 		e.agency_id as agency_id,
		f.department_id as department_id,
		a.fiscal_year,
		b.year_id,
		a.award_method_id,
		a.vendor_id,
		a.industry_type_id,
		a.award_size_id,
		sum(coalesce(d.check_amount,0)) as spending_amount_disb,
		sum(coalesce(c.rfed_line_amount,0)) as spending_amount,
		count(distinct a.original_agreement_id) as total_contracts,
		'A' as status_flag,
		'B' as type_of_year
 FROM agreement_snapshot_expanded a JOIN ref_year b ON a.fiscal_year = b.year_value
 JOIN history_agreement_accounting_line c ON a.agreement_id = c.agreement_id
 LEFT JOIN disbursement_line_item_details d ON a.original_agreement_id = d.agreement_id AND c.line_number =  d.agreement_accounting_line_number 
 AND c.commodity_line_number = d.agreement_commodity_line_number AND a.fiscal_year >= d.fiscal_year
 JOIN ref_agency_history e ON e.agency_history_id = c.agency_history_id
 JOIN ref_department_history f ON f.department_history_id = c.department_history_id AND e.agency_id = f.agency_id
 WHERE  a.master_agreement_yn = 'N' AND a.status_flag='A' GROUP BY 1,2,3,4,5,6,7,8,9,10	
 UNION ALL 
 SELECT a.document_code_id,
 		a.agency_id as document_agency_id,
 		e.agency_id as agency_id,
		f.department_id as department_id,
		a.fiscal_year,
		b.year_id,
		a.award_method_id,
		a.vendor_id,
		a.industry_type_id,
		a.award_size_id,
		sum(coalesce(d.check_amount,0)) as spending_amount_disb,
		sum(coalesce(c.rfed_line_amount,0)) as spending_amount,
		count(distinct a.original_agreement_id) as total_contracts,
		'R' as status_flag,
		'B' as type_of_year
 FROM agreement_snapshot_expanded a JOIN ref_year b ON a.fiscal_year = b.year_value
 JOIN history_agreement_accounting_line c ON a.agreement_id = c.agreement_id
 LEFT JOIN disbursement_line_item_details d ON a.original_agreement_id = d.agreement_id AND c.line_number =  d.agreement_accounting_line_number 
 AND c.commodity_line_number = d.agreement_commodity_line_number AND a.fiscal_year >= d.fiscal_year
 JOIN ref_agency_history e ON e.agency_history_id = c.agency_history_id
 JOIN ref_department_history f ON f.department_history_id = c.department_history_id AND e.agency_id = f.agency_id
 WHERE  a.master_agreement_yn = 'N' AND a.status_flag='R' GROUP BY 1,2,3,4,5,6,7,8,9,10","SELECT a.document_code_id,
 		a.agency_id as document_agency_id,
 		e.agency_id as agency_id,
		f.department_id as department_id,
		a.fiscal_year,
		b.year_id,
		a.award_method_id,
		a.vendor_id,
		a.industry_type_id,
		a.award_size_id,
		sum(coalesce(d.check_amount,0)) as spending_amount_disb,
		sum(coalesce(c.rfed_line_amount,0)) as spending_amount,
		count(distinct a.original_agreement_id) as total_contracts,
		'A' as status_flag,
		'C' as type_of_year
 FROM agreement_snapshot_expanded_cy a JOIN ref_year b ON a.fiscal_year = b.year_value
 JOIN history_agreement_accounting_line c ON a.agreement_id = c.agreement_id
 LEFT JOIN disbursement_line_item_details d ON a.original_agreement_id = d.agreement_id AND c.line_number =  d.agreement_accounting_line_number 
 AND c.commodity_line_number = d.agreement_commodity_line_number AND a.fiscal_year >= d.calendar_fiscal_year
 JOIN ref_agency_history e ON e.agency_history_id = c.agency_history_id
 JOIN ref_department_history f ON f.department_history_id = c.department_history_id AND e.agency_id = f.agency_id
 WHERE  a.master_agreement_yn = 'N' AND a.status_flag='A' GROUP BY 1,2,3,4,5,6,7,8,9,10	
 UNION ALL 
 SELECT a.document_code_id,
 		a.agency_id as document_agency_id,
 		e.agency_id as agency_id,
		f.department_id as department_id,
		a.fiscal_year,
		b.year_id,
		a.award_method_id,
		a.vendor_id,
		a.industry_type_id,
		a.award_size_id,
		sum(coalesce(d.check_amount,0)) as spending_amount_disb,
		sum(coalesce(c.rfed_line_amount,0)) as spending_amount,
		count(distinct a.original_agreement_id) as total_contracts,
		'R' as status_flag,
		'C' as type_of_year
 FROM agreement_snapshot_expanded_cy a JOIN ref_year b ON a.fiscal_year = b.year_value
 JOIN history_agreement_accounting_line c ON a.agreement_id = c.agreement_id
 LEFT JOIN disbursement_line_item_details d ON a.original_agreement_id = d.agreement_id AND c.line_number =  d.agreement_accounting_line_number 
 AND c.commodity_line_number = d.agreement_commodity_line_number AND a.fiscal_year >= d.calendar_fiscal_year
 JOIN ref_agency_history e ON e.agency_history_id = c.agency_history_id
 JOIN ref_department_history f ON f.department_history_id = c.department_history_id AND e.agency_id = f.agency_id
 WHERE  a.master_agreement_yn = 'N' AND a.status_flag='R' GROUP BY 1,2,3,4,5,6,7,8,9,10",19
ContractsSpendingTransactions,contracts_spending_transactions,"CREATE TABLE contracts_spending_transactions
(
disbursement_line_item_id bigint,
original_agreement_id bigint,
fiscal_year smallint,
fiscal_year_id smallint,
document_code_id smallint,
vendor_id int,
award_method_id smallint,
document_agency_id smallint,
industry_type_id smallint,
award_size_id smallint,
disb_document_id  character varying(20),
disb_vendor_name  character varying,
disb_check_eft_issued_date  date,
disb_agency_name  character varying(100),
disb_department_short_name  character varying(15),
disb_check_amount  numeric(16,2),
disb_expenditure_object_name  character varying(40),
disb_budget_name  character varying(60),
disb_contract_number  character varying,
disb_purpose  character varying,
disb_reporting_code  character varying(15),
disb_spending_category_name  character varying,
disb_agency_id  smallint,
disb_vendor_id  integer,
disb_expenditure_object_id  integer,
disb_department_id  integer,
disb_spending_category_id  smallint,
disb_agreement_id  bigint,
disb_contract_document_code  character varying(8),
disb_master_agreement_id  bigint,
disb_fiscal_year_id  smallint,
disb_check_eft_issued_cal_month_id integer,
disb_disbursement_number character varying(40),
status_flag char(1),
type_of_year char(1)
) DISTRIBUTED BY (disbursement_line_item_id)","SELECT 	d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.check_eft_issued_nyc_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'A' as status_flag,
		'B' as type_of_year
FROM   agreement_snapshot_expanded a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.agreement_id  AND a.fiscal_year >= d.fiscal_year
AND a.status_flag='A' AND a.master_agreement_yn = 'N'
UNION ALL
SELECT 	d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.check_eft_issued_nyc_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'A' as status_flag,
		'B' as type_of_year
FROM   agreement_snapshot_expanded a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.master_agreement_id  AND a.fiscal_year >= d.fiscal_year
AND a.status_flag='A' AND a.master_agreement_yn = 'Y'
UNION ALL
 SELECT d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.check_eft_issued_nyc_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'R' as status_flag,
		'B' as type_of_year
FROM   agreement_snapshot_expanded a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.agreement_id  AND a.fiscal_year >= d.fiscal_year
AND a.status_flag='R' AND a.master_agreement_yn = 'N' 
UNION ALL
 SELECT d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.check_eft_issued_nyc_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'R' as status_flag,
		'B' as type_of_year
FROM   agreement_snapshot_expanded a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.master_agreement_id  AND a.fiscal_year >= d.fiscal_year
AND a.status_flag='R' AND a.master_agreement_yn = 'Y' ","SELECT d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.calendar_fiscal_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'A' as status_flag,
		'C' as type_of_year
FROM   agreement_snapshot_expanded_cy a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.agreement_id  AND a.fiscal_year >= d.calendar_fiscal_year
AND a.status_flag='A' AND a.master_agreement_yn = 'N' 
UNION ALL
 SELECT d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.calendar_fiscal_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'A' as status_flag,
		'C' as type_of_year
FROM   agreement_snapshot_expanded_cy a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.master_agreement_id  AND a.fiscal_year >= d.calendar_fiscal_year
AND a.status_flag='A' AND a.master_agreement_yn = 'Y' 
UNION ALL
SELECT 	d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.calendar_fiscal_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'R' as status_flag,
		'C' as type_of_year
FROM   agreement_snapshot_expanded_cy a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.agreement_id  AND a.fiscal_year >= d.calendar_fiscal_year
AND a.status_flag='R' AND a.master_agreement_yn = 'N'
UNION ALL
SELECT 	d.disbursement_line_item_id, 
		a.original_agreement_id,
		a.fiscal_year,
		b.year_id,
		a.document_code_id,
		a.vendor_id,
		a.award_method_id,
		a.agency_id as document_agency_id,
		a.industry_type_id,
		a.award_size_id,
		d.document_id,
		d.vendor_name,
		d.check_eft_issued_date,
		d.agency_name,
		d.department_short_name,
		d.check_amount,
		d.expenditure_object_name,
		d.budget_name,
		d.contract_number,
		d.purpose,
		d.reporting_code,
		d.spending_category_name,
		d.agency_id,
		d.vendor_id,
		d.expenditure_object_id,
		d.department_id,
		d.spending_category_id,
		d.agreement_id,
		d.contract_document_code,
		d.master_agreement_id,
		d.calendar_fiscal_year_id,
		d.check_eft_issued_cal_month_id,
		d.disbursement_number,
		'R' as status_flag,
		'C' as type_of_year
FROM   agreement_snapshot_expanded_cy a, ref_year b, disbursement_line_item_details d
WHERE a.fiscal_year = b.year_value 
AND a.original_agreement_id = d.master_agreement_id  AND a.fiscal_year >= d.calendar_fiscal_year
AND a.status_flag='R' AND a.master_agreement_yn = 'Y' ",20
ContractsByExpenseCategory,aggregateon_contracts_expense,"CREATE TABLE aggregateon_contracts_expense(
	original_agreement_id bigint,
	expenditure_object_code character varying(4),
	expenditure_object_name character varying(40),
	encumbered_amount numeric(16,2),
	spending_amount_disb numeric(16,2),
	spending_amount numeric(16,2),
	is_disbursements_exist char(1)
) DISTRIBUTED BY (original_agreement_id)","SELECT m.original_agreement_id, m.expenditure_object_code, m.expenditure_object_name, m.encumbered_amount,coalesce(n.spending_amount_disb,0) as spending_amount_disb, m.spending_amount, 
(CASE WHEN n.original_agreement_id IS NULL THEN 'N' ELSE 'Y' END) as is_disbursements_exist
FROM
 (SELECT a.original_agreement_id, d.expenditure_object_code,  d.expenditure_object_name, sum(b.line_amount) as encumbered_amount, sum(b.rfed_line_amount) as spending_amount
 FROM history_agreement a, history_agreement_accounting_line b , ref_expenditure_object_history c, ref_expenditure_object d 
 WHERE a.agreement_id = b.agreement_id AND a.latest_flag = 'Y' AND b.expenditure_object_history_id = c.expenditure_object_history_id AND  c.expenditure_object_id = d.expenditure_object_id
 GROUP BY 1,2,3) m LEFT JOIN
 (SELECT agreement_id as original_agreement_id, expenditure_object_code, sum(check_amount) as spending_amount_disb
 FROM disbursement_line_item_details
 GROUP BY 1,2) n ON m.original_agreement_id = n.original_agreement_id AND m.expenditure_object_code = n.expenditure_object_code ",,21
