{{ attach_library('widget_highcharts/grid-view') }}


{{ gridPrintExport(node) |raw }}
<div id="gridprint">
  <h3 class="grid_title">{{ spendingTitle()|raw }}</h3>
  <h3 class="grid_chart_title">{{ node.widgetConfig.chartTitle |raw}}</h3>
  {{ pageGridTitle('Spending')|raw }}
  <div>
    <table id="table_{{ node.nid }}" class=" {{node.widgetConfig.gridConfig.html_class}} ">
      <thead>
      <tr>
        <th>{{ widget_get_table_header("contract_id") | raw}} </th>
        <th>{{ widget_get_table_header("spending_amount") | raw}} </th>
        <th>&nbsp;</th>
        <th>{{ widget_get_table_header("prime_vendor") | raw}} </th>
        <th>{{ widget_get_table_header("contract_agency") | raw}} </th>
        <th>&nbsp;</th>
      </tr>
      </thead>
      <tbody>
      {% if node.data %}
        {% for datarow in node.data %}
          <tr>
            <td><div>{{ datarow.document_id_document_id | raw }}</div></td>
            <td>{{ datarow.check_amount_sum }}</td>
            <td>&nbsp;</td>
            <td><div>{{ datarow.vendor_vendor_legal_name | raw }}</div></td>
            <td><div>{{ datarow.agency_agency_agency_name | raw }}</td>
            <td>&nbsp;</td>
          </tr>
        {% endfor %}
      {% endif %}
      </tbody>
    </table>
    {% set wurl = widget_url() %}
    {% set dataTableOptions = '
    {
                        "bFilter":false,
                        "bInfo":false,
                        "bLengthChange":false,
                        "iDisplayLength":12,
                        "aaSorting":[[1,"desc"]],
                        "bPaginate": false,
                        "sAltAjaxSource":"' ~ wurl ~ '",
            			"fnDrawCallback"  :  function( oSettings ) {
            			addPaddingToDataCells(this);
            			},
                        "aoColumnDefs": [
                            {
                                "aTargets": [0,2,3,4],
                                "sClass":"text",
                                "asSorting": [ "asc","desc" ]
                            },
                            {
                                "aTargets": [1],
                                "aExportFn":"function",
                                "mDataProp": function ( source, type, val ) {
                                    if (type == "set") {
                                        source.total_amount = val;
                                        source.total_amount_display = "<div>" + custom_number_format(val) + "</div>";
                                        return;
                                    }else if (type == "display") {
                                        return source.total_amount_display;
                                    }
                                    return source.total_amount;
                                },
                                "sClass":"number",
                                "asSorting": [ "desc","asc" ],
                                "sWidth":"75px"
                            },
                            {"aTargets":[0],"sWidth":"200px"},
                            {
                              "aTargets": [2],"sWidth":"35px"
                            },
                            {
                              "aTargets": [3]
                            },
                            {
                              "aTargets":[5],
                              "sWidth":"5px"
                            }
                        ]
                    }'
    %}
    <script type="text/javascript">
      {{ widget_highcharts_add_datatable_js(dataTableOptions,node) |raw}}
    </script>
  </div>
</div>

