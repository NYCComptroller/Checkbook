{
    "widgetType":"phpparser",
    "parentNid":634,
    "no_results_content":"No Results Found",
    "limit":10,
    "startWith":0,
    "urlParamMap":{
        "doctype":"document_code.document_code.document_code",
        "vendornm":"display_vendor.display_vendor.legal_name",
        "vendornm_exact":"display_vendor.display_vendor.legal_name","awdmethod" : "award_method.award_method.award_method_code"
    },
    "defaultParameters":{"status_flag":"A","is_vendor_flag":"N","type_of_year":"B","if_for_all_years":"N"},
    "columns":["g100m_count", "g50m_le100m_count", "g25m_le50m_count", "g10m_le25m_count", "ge1m_le10m_count", "less1m_count"],
    "orderBy":"",
    "autocomplete":false,
    "filterName":"Amount",
    "urlParameterName":"curamtr",
    "urlParameterType":"rangeid",
    "showAllRecords":true,
    "autocompleteID":"fCurAmount",
    "adjustParameters":"
      \\Drupal\\checkbook_project\\ContractsUtilities\\ContractUtil::_checkbook_project_adjustContractParameterFilters($node,$parameters,'active_registered');

      if(\\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('vendor') || \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('vendornm')){
          $parameters['is_vendor_flag'] = 'Y';
      }
      if(!(\\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('year') || \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('calyear'))){
          $parameters['latest_flag'] = 'Y';
          $parameters['if_for_all_years'] = 'Y';
      }
          $adjustedParameters = \\Drupal\\checkbook_project\\WidgetUtilities\\WidgetProcessor::_checkbook_project_applyParameterFilters($node,$parameters);
          return $adjustedParameters;
    ",
    "template":"individual_filter"
}
