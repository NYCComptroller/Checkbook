{
    "widgetType": "phpparser",
    "cleanURLParameters":["abc","xyz","agency","year","calyear","title","salamttype","yeartype"],
    "urlParamMap":{
        "abc":"employee_id.employee_id",
        "xyz":"employee_id.employee_id",
        "agency":"agency_id.agency_id",
        "year":"fiscal_year_id.fiscal_year_id",
        "calyear":"calendar_fiscal_year_id.calendar_fiscal_year_id",
        "salamttype":"amount_basis_id.amount_basis_id",
        "yeartype":"year_type"
    },
    "limit":"17",
    "dataset": "checkbook:payroll",
    "columns": [
        "agency.agency",
        "agency_name.agency_name",
        "pay_frequency.pay_frequency",
        "amount_basis_id.amount_basis_id",
        "max_annual_salary",
        "total_base_salary",
        "total_overtime_amount",
        "total_other_payments",
        "total_gross_pay"
    ],
    "adjustParameters":"
        $yearType = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('yeartype');
        $calyear_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('calyear');

        if($calyear_param){
            $year_id = $calyear_param;
        }
        $year_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('year');
        if($year_param){
            $year_id = $year_param;
        }
        if(isset($yearType)) {
            if($yearType == 'B') {
                $parameters['fiscal_year_id.fiscal_year_id'] = $year_id;
                unset($parameters['calendar_fiscal_year_id.calendar_fiscal_year_id']);
            }
            else if($yearType == 'C') {
                $parameters['calendar_fiscal_year_id.calendar_fiscal_year_id'] = $year_id;
                unset($parameters['fiscal_year_id.fiscal_year_id']);
            }
        }
        unset($parameters['amount_basis_id.amount_basis_id']);
        unset($parameters['year_type']);

        $adjustedParameters = $parameters;
        $adjustedParameters = \\Drupal\\checkbook_project\\WidgetUtilities\\WidgetProcessor::_checkbook_project_applyParameterFilters($node,$parameters);
        return $adjustedParameters;
    ",
    "transformationPHP":"
        $calyear_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('calyear');
        $year_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('year');
        $year = $calyear_param ? $calyear_param : $year_param;

        $year_type = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('yeartype');
        $data_source = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('datasource');

        $month = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('month');
        $agency = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('agency');
        $title = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('title');

        $abc_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('abc');
        $xyz_param = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::getTransactionsParams('xyz');
        $employee_id = $abc_param ? $abc_param : $xyz_param;

        $max_annual_salary = \\Drupal\\checkbook_project\\PayrollUtilities\\payrollDetails::getMaxAnnualSalaryByPayFrequency($year, $year_type, $month, $agency, $title, $employee_id);
         $max_hourly_rate = \\Drupal\\checkbook_project\\PayrollUtilities\\payrollDetails::getMaxHourlyRateByPayFrequency($year, $year_type, $month, $agency, $title, $employee_id);
         $max_daily_wage = \\Drupal\\checkbook_project\\PayrollUtilities\\payrollDetails::getMaxDailyWageByPayFrequency($year, $year_type, $month, $agency, $title, $employee_id);



        foreach($node->data as &$row) {
            $pay_frequency = $row['pay_frequency_pay_frequency'];
            $amount_basis_id = $row['amount_basis_id_amount_basis_id'];
            if($data_source=='checkbook_nycha'){
             $row['max_annual_salary'] = $amount_basis_id == 1 ? $max_annual_salary[$pay_frequency] : $max_daily_wage[$pay_frequency];
            }
            else
            {
            $max_pay_rate = (isset($max_hourly_rate[$pay_frequency]) && $max_hourly_rate[$pay_frequency] > 0 ) ?  $max_hourly_rate[$pay_frequency] : $max_daily_wage[$pay_frequency] ;
            //$max_pay_rate = $max_hourly_rate[$pay_frequency];
            $row['max_annual_salary'] = $amount_basis_id == 1 ? $max_annual_salary[$pay_frequency] :   $max_pay_rate ;
            }
        }
        return $node->data;
    ",
     "template":"payroll_employee_agency_payroll_summary"
}
