{
    "widgetType": "data_tables",
    "widgetSubType": "dataTableList",
    "cleanURLParameters":[
        "vendornm_exact","expdoc_exact","captprj_exact","contnum_exact","agency","deptnm_facet","expcategorynm_facet",
        "mcagency","agencyh","year","yeartype","calyear","mcvendor","expcategory","category","checkamtr","dept",
        "contnum","checkamt","chkdate","fundcls","bdgcodenm","captprj","expdoc","vendornm","deptnm","expcategorynm","syear",
        "scalyear","magid","agid","cvendor","cagency","awdmethod","status","csize","cindustry","expcategorycode","month",
        "industry","mwbe","vendor","svendor","subvendor","vendortype","fvendor", "bdgcode", "pscert"
    ],
    "urlParamMap":{
        "contnum_exact":"reference_document_number",
        "captprj_exact":"reporting_code",
        "expdoc_exact":"disbursement_number",
        "deptnm_facet":"department_name",
        "expcategorynm_facet":"expenditure_object_name",
        "vendor_facet":"vendor_name",
        "vendornm_exact":"vendor_name",
        "year":"year_id","yeartype":"year_type","calyear":"year_id","agency":"agency_id",
        "mcagency":"master_child_contract_agency_id","agencyh":"agency_history_id",
        "mcvendor":"master_child_contract_vendor_id","expcategory":"expenditure_object_id",
        "checkamtr":"check_amount","dept":"department_code","contnum":"reference_document_number",
        "checkamt":"check_amount","chkdate":"check_eft_issued_date","fundcls":"fund_class_id",
        "bdgcodenm":"budget_name","captprj":"reporting_code","category":"spending_category_id",
        "expdoc":"disbursement_number","vendornm":"vendor_name","deptnm":"department_name",
        "expcategorynm":"expenditure_object_name","syear":"check_eft_issued_nyc_year_id",
        "scalyear":"calendar_fiscal_year_id","magid":"master_agreement_id","agid":"agreement_id",
        "cvendor":"vendor_id@checkbook:contracts_spending_transactions",
        "cagency":"document_agency_id@checkbook:contracts_spending_transactions",
        "awdmethod":"award_method_id@checkbook:contracts_spending_transactions",
        "status":"status_flag@checkbook:contracts_spending_transactions",
        "csize":"award_size_id@checkbook:contracts_spending_transactions",
        "cindustry":"industry_type_id@checkbook:contracts_spending_transactions",
        "expcategorycode":"expenditure_object_code", "month":"check_eft_issued_cal_month_id",
        "mwbe":"minority_type_id","industry":"industry_type_id",
        "vendor":"prime_vendor_id","svendor":"prime_vendor_id","subvendor":"vendor_id",
        "vendortype":"vendor_type","fvendor":"vendor_id",
        "bdgcode":"budget_name_code","pscert":"is_women_owned"
    },
    "defaultParameters":{"is_prime_or_sub":"S"},
    "paramTypeConfig":{
        "vendornm_exact":"eqignorecase","expdoc_exact":"eqignorecase","captprj_exact":"eqignorecase",
        "contnum_exact":"eqignorecase","checkamtr":"rangeid","checkamt":"range","chkdate":"range",
        "captprj":"like","vendornm":"like","contnum":"like","bdgcodenm":"like","expdoc":"like","syear":"le",
        "scalyear":"le","deptnm":"eqignorecase","expcategorynm":"eqignorecase"
    },
    "allowRequestParams":["dtsmnid","smnid","pscert"],
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "stickyHeader":true,
    "getTotalDataCount":true,
    "limit":"35",
    "noDataInitialLoad":true,
    "html_class": "initiative-table transaction-table",
    "no_results_content":"No Results Found",
    "dataset": "checkbook:spending_transactions_all",
    "uniqueSortColumn":"disbursement_line_item_id",
    "columns": [
        "disbursement_number",
        "agency_id",
        "vendor_id",
        "vendor_name",
        "vendor_type",
        "legal_name@checkbook:sub_vendor",
        "prime_vendor_id",
        "legal_name@checkbook:prime_vendor",
        "check_eft_issued_date",
        "agency_name",
        "check_amount",
        "expenditure_object_name",
        "reference_document_number",
        "purpose",
        "purpose_cy",
        "reporting_code",
        "spending_category_name",
        "spending_category_id",
        "agreement_id",
        "reference_document_code",
        "sub_contract_id",
        "industry_type_id",
        "industry_type_name",
        "minority_type_id",
        "is_prime_or_sub",
        "original_agreement_id@checkbook:sub_vendor_agid",
        "budget_name_code",
        "is_women_owned",
        "is_emerging"
    ],
    "WidgetTitleEval":"return \\Drupal\\checkbook_project\\SpendingUtilities\\SpendingUtil::getTransactionPageTitle('Sub Vendors');",
    "summaryView":{
        "template":"spending_date_summary",
        "templateTitleEval":"return \\Drupal\\checkbook_project\\SpendingUtilities\\SpendingUtil::getTransactionPageTitle('Sub Vendors');"
    },
    "derivedColumns": {
        "associated_prime_vendor_name":{
            "expression":"\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::_get_tooltip_markup($row['legal_name@checkbook:prime_vendor'], 34)"
        },
        "associated_prime_vendor_name_export":{
            "expression":"$row['legal_name@checkbook:prime_vendor']"
        },
        "is_sub_vendor": {
            "expression":"'Yes'"
        },
        "agency_name_formatted":{
            "expression": "\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::_get_tooltip_markup($row['agency_name'], 40)"
        },
        "agency_name_link": {
            "expression": " \\Drupal\\checkbook_project\\CommonUtilities\\RequestUtil::isNewWindow() ? $row['agency_name_formatted']  : ('<a href=/spending_landing' . \\Drupal\\checkbook_project\\CommonUtilities\\CustomURLHelper::_checkbook_project_get_year_url_param_string(false,false,false,true) . \\Drupal\\checkbook_project\\SpendingUtilities\\SpendingUtil::getDataSourceParams()  . Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::_checkbook_project_get_url_param_string('category') . '/agency/'. $row['agency_id']. '>'. $row['agency_name_formatted'] .'</a>') "
        },
        "payee_name_formatted":{
            "expression": "\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::_get_tooltip_markup($row['vendor_name'], 40)"
        },
        "payee_name_export":{
            "expression": "$row['vendor_name']"
        },
        "payee_name_link": {
            "expression": " \\Drupal\\checkbook_project\\CommonUtilities\\RequestUtil::isNewWindow() ||  $row['spending_category_id']==2 ?  $row['payee_name_formatted'] : ('<a href=\"' . \\Drupal\\checkbook_project\\SpendingUtilities\\VendorSpendingUtil::getPayeeNameLinkUrl($node,$row) . '\">'. $row['payee_name_formatted'] .'</a>') "
        },
        "issue_date_formatted":{
            "expression": "$row['check_eft_issued_date']"
        },
        "formatted_check_amount": {
            "expression": "\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::custom_number_formatter_basic_format($row['check_amount'])"
        },
        "reference_document_number_export": {
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['reference_document_number']"
        },
        "reference_document_number_link":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : (\\Drupal\\checkbook_project\\CommonUtilities\\RequestUtil::isNewWindow() ? $row['reference_document_number'] : '<a class=\"new_window\" href=\"' . \\Drupal\\checkbook_project\\SpendingUtilities\\SpendingUrlHelper::getSubContractNumberLinkUrl($node,$row) . '\">'  . $row['reference_document_number'] . '</a>')"
        },
        "purpose_formatted":{
            "expression": "\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::_get_tooltip_markup($row['purpose'], 30)"
        },
        "contract_purpose_text":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['purpose_formatted']"
        },
        "contract_purpose_export":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['purpose']"
        },
        "mwbe_category_name_formatted": {
            "expression":"\\Drupal\\checkbook_project\\MwbeUtilities\\MappingUtil::getMinorityCategoryById($row['minority_type_id'])"
        },
        "mwbe_category_name": {
            "expression": " !\\Drupal\\checkbook_project\\SpendingUtilities\\MwbeSpendingUtil::showMWBECategoryLink($node,$row) ? $row['mwbe_category_name_formatted']  : ('<a href=' . \\Drupal\\checkbook_project\\SpendingUtilities\\MwbeSpendingUtil::getMWBECategoryLinkUrl($node, $row) . '>'. $row['mwbe_category_name_formatted'] .'</a>') "
        },
        "industry_name_formatted": {
            "expression": "\\Drupal\\checkbook_infrastructure_layer\\Utilities\\FormattingUtilities::_get_tooltip_markup($row['industry_type_name'],36)"
        }
    },
    "table_columns": [
        {"labelAlias":"payee_name","column":"payee_name_link","sortSourceColumn":"vendor_name","exportColumn":"payee_name_export"},
        {"labelAlias":"is_sub_vendor","column":"is_sub_vendor","sortSourceColumn":"vendor_type","exportColumn":"is_sub_vendor"},
        {"label":"","column":"","export":false},
        {"labelAlias":"associated_prime_vendor","column":"associated_prime_vendor_name","sortSourceColumn":"legal_name@checkbook:prime_vendor","exportColumn":"associated_prime_vendor_name_export"},
        {"labelAlias":"issue_date","column":"issue_date_formatted","sortSourceColumn":"check_eft_issued_date","headerClass":"issuedate","exportColumn":"issue_date_formatted"},
        {"labelAlias":"agency_name","column":"agency_name_link","sortSourceColumn":"agency_name"},
        {"labelAlias":"check_amount","column":"formatted_check_amount","sortSourceColumn":"check_amount","headerClass":"centrig"},
        {"label":"","column":"","export":false},
        {"labelAlias":"industry_name","column":"industry_name_formatted","sortSourceColumn":"industry_type_name"},
        {"labelAlias":"contract_id","column":"reference_document_number_link","sortSourceColumn":"reference_document_number","exportColumn":"reference_document_number_export"},
        {"labelAlias":"sub_contract_reference_id","column":"sub_contract_id","exportColumn":"sub_contract_id"},
        {"labelAlias":"contract_purpose","column":"contract_purpose_text","sortSourceColumn":"purpose","exportColumn":"contract_purpose_export"},
        {"labelAlias":"spending_category","column":"spending_category_name"},
        {"labelAlias":"mwbe_category","column":"mwbe_category_name","sortSourceColumn":"minority_type_id","exportColumn":"mwbe_category_name_formatted"},
        {"labelAlias": "woman_owned_business","column":"is_women_owned"},
        {"labelAlias": "emerging_business","column":"is_emerging"},
        {"labelAlias":"budget_code","column":"budget_name_code"},
        {"label": "","column": "","export":false}
    ],
    "exportColumnSqlOverride":[
        {
            "column":"mwbe_category_name",
            "sourceColumn":"minority_type_id",
            "sql":"
                case
                when minority_type_id = 2 then 'Black American'
                when minority_type_id = 3 then 'Hispanic American'
                when minority_type_id = 6 THEN 'Native American'
                when minority_type_id = 7 then 'Non-M/WBE'
                when minority_type_id = 9 then 'Women (Non-Minority)'
                when minority_type_id = 11 then 'Individuals and Others'
                when minority_type_id = 99 THEN 'Emerging (Non-Minority)'
                else 'Asian American'
                end as minority_type_name
                "
        },
        {
          "column":"is_sub_vendor",
          "sourceColumn":"vendor_type",
          "sql":"case when vendor_type = 'P' then 'No' else 'Yes' end as is_sub_vendor"
        }
    ],
    "adjustParameters":"
        if(isset($parameters['vendor_type'])){
            $parameters['vendor_type'] = \\Drupal\\checkbook_project\\MwbeUtilities\\VendorType::getVendorTypeValue($parameters['vendor_type']);
        }

        $parameters = \\Drupal\\checkbook_project\\SpendingUtilities\\SpendingUtil::_checkbook_project_adjust_date_spending_parameter_filters($node, $parameters);
        $adjustedParameters = $parameters;
        $adjustedParameters = \\Drupal\\checkbook_project\\WidgetUtilities\\WidgetProcessor::_checkbook_project_applyParameterFilters($node,$parameters);
        return $adjustedParameters;
    ",
    "dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "bPaginate": true,
        "iDisplayLength":35,
        "sPaginationType":"full_numbers_no_ellipses",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aoColumns":[
            {"sClass":"text","sWidth":"250px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"50px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"50px"},
            {"sClass":"text","sWidth":"229px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"130px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"210px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"110px","asSorting":["desc","asc"]},
            {"bSortable":false,"sWidth":"50px"},
            {"sClass":"text","sWidth":"130px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"145px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"125px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"175px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"145px","asSorting":["asc","desc"]},
            {"sClass":"text ","sWidth":"150px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"100px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"10px"}
        ],
        "aaSorting":[[6,"desc"]],
        "sScrollX": "100%",
		"bScrollCollapse": false,
        "fnInitComplete": "##function () { new $j.fn.dataTable.FixedColumns( oTable, {
		\"iLeftColumns\": 1,
		\"iLeftWidth\": 196
	    } );}##"
    },
    "customExternalJS":"function prepareTableListFilterUrl(){
        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
            agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oCategoryIds = getNamedFilterCriteria('fCat' + 'egoryId');
        var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
        var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
        var oDeptIds = getNamedFilterCriteria('fdeptId');
        var oDeptNms = getNamedFilterCriteria('fdeptNm');
        var oSpendCategoryNms = getNamedFilterCriteria('fCategoryNm');
        var oVendorType = getNamedFilterCriteria('fvendorType');
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');
        var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');
        var oBudgetCode = getNamedFilterCriteria('fBudgetCode');
        var oPrimeSubCert = getNamedFilterCriteria('fPrimeSubCert');

        var cUrl = oTable.fnSettings().sAjaxSource;

        var cUrlArray = cUrl.split('/');
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'fvendor',oVendorIds);
        cUrl = adjustUrlParameter(cUrl,'expcategory',oCategoryIds);
        cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
        cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
        cUrl = adjustUrlParameter(cUrl,'dept',oDeptIds);
        cUrl = adjustUrlParameter(cUrl,'deptnm',oDeptNms);
        cUrl = adjustUrlParameter(cUrl,'expcategorycode',oSpendCategoryNms);
        cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
        cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
        cUrl = adjustUrlParameter(cUrl,'industry',oIndustryType);
        cUrl = adjustUrlParameter(cUrl,'bdgcode',oBudgetCode);
        cUrl = adjustUrlParameter(cUrl,'pscert',oPrimeSubCert);
        return cUrl;
    }"
}
