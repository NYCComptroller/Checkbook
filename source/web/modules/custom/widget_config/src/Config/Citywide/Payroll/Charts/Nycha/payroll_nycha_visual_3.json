{
  "widgetType": "highcharts",
  "widgetDatahandler": "highcharts",
  "html_class":"",
  "header":"
  $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
  $header .=  \\Drupal\\checkbook_project\\WidgetUtilities\\ChartUtil::generateWidgetGridViewLink($node);
  return $header;
  ",
  "gridConfig":{
      "template":"chart_grid_view",
      "domain":"payroll",
      "html_class":"chart-grid-view-table three-columns",
      "sortColumn":0,
      "sortOrder": "desc",
      "table_columns": [
        {
          "labelAlias": "year",
          "columnType": "text"
        },
        {
          "labelAlias": "no_of_sal_employees",
          "columnType": "number"
        },
        {
          "labelAlias": "no_of_non_sal_employees",
          "columnType": "number"
        }
      ]
  },
  "no_results_content":"No Results Found",
  "cleanURLParameters":["year","calyear","agency","yeartype","title"],
  "urlParamMap":{"calyear":"fiscal_year_id","year":"fiscal_year_id","agency":"agency_id","yeartype":"type_of_year","title":"civil_service_title_code"},
"chartTitle":"Total Number of Employees Across Years",
"widgetDataLoader":"
        $year_id = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::get('year');
        $where_filters = array();
        foreach($node->widgetConfig->requestParams as $param=>$value){
        if($param == 'fiscal_year_id'){}
        else{$where_filters[] = _widget_build_sql_condition( $param, $value);}
        }
        if(count($where_filters) > 0){
        $where_filter = ' WHERE ' . implode(' AND ' , $where_filters);
        }
        $add_null = _widget_build_sql_add_null( 'contract_id', ' ');

        $datasource = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::get('datasource');
        $sql = 'SELECT (emp.fiscal_year_id+1899) as Year,emp.type_of_employment,count(DISTINCT latest_emp.employee_number) CountE
        FROM aggregateon_payroll_employee_agency emp
        JOIN (SELECT max(pay_date) as pay_date, employee_number,fiscal_year_id,type_of_year
        FROM aggregateon_payroll_employee_agency ' . $where_filter .'
        GROUP BY employee_number,fiscal_year_id,type_of_year) latest_emp
        ON latest_emp.pay_date = emp.pay_date
        AND latest_emp.employee_number = emp.employee_number
        AND latest_emp.fiscal_year_id = emp.fiscal_year_id
        AND latest_emp.type_of_year = emp.type_of_year
        group by emp.fiscal_year_id,emp.type_of_employment';


$node->data  = _checkbook_project_execute_sql($sql,'main',$datasource);
",
"widgetUpdateJSONConfig":"
        $series_previous_temp = array(array());
        $year_id = \\Drupal\\checkbook_infrastructure_layer\\Utilities\\RequestUtilities::get('year');
        $year_value = \\Drupal\\checkbook_project\\CommonUtilities\\CheckbookDateUtil::_getYearValueFromID($year_id);
        $categories = range(2010,$year_value);
        $codes = array('Salaried','Non-Salaried');
        foreach($node->data as $row){$series_previous_temp[$row['type_of_employment']][$row['year']] = (float)$row['counte'];}
        $series_previous = array();
        foreach($codes as $code){
          $prev_series_obj = new stdClass();
          foreach($categories as $category){
            $series_previous[] = $series_previous_temp[$code][$category] ;
            $node->widgetConfig->chartConfig->xAxis->categories[] = $category;
          }
          $prev_series_obj->name = $code;
          $prev_series_obj->data = $series_previous;
          $node->widgetConfig->chartConfig->series[] = $prev_series_obj;
          unset($series_previous);
        }
        foreach($categories as $category){
        $node->widgetConfig->gridConfig->data[] = array(
        $category,
        number_format($series_previous_temp['Salaried'][$category]),
        number_format($series_previous_temp['Non-Salaried'][$category]));
        }
$node->widgetConfig->chartConfig->xAxis->categories = $categories;
",
"chartConfig" : {
        "chart": {
        "type": "column"
        },
        "colors":["#D78E35","#7DB7E5","#122E46"],
        "legend": {"align": "left",  "verticalAlign": "bottom", "layout": "horizontal",
        "padding":1, "itemMarginTop": 3, "itemMarginBottom": 3},
        "xAxis":{"labels":{"enabled":false}},
        "yAxis": {
        "allowDecimals":false,
        "min":0,
        "title": {"text": ""}} ,
        "tooltip": {
        "shared":true,
        "function":"splittooltip"
        },
        "plotOptions": {
        "column": {
        "stacking": "normal",
        "lineColor": "#666666",
        "lineWidth": 1,
        "marker": {
        "lineWidth": 1,
        "lineColor": "#666666"
        }
        }
        },

        "title": {"text": ""}
        }
}

<function>
splittooltip^^'formatter' :
function() {
var s = [];
s.push('Year: CY ' + this.x + '<br/>');
this.points.forEach(function(point) {
s.push('No.of ' + point.series.name + ' Employees: ' +Highcharts.numberFormat(point.y, 0, '.', ',') +'<br/>' );
});
return s;
}
</function>

