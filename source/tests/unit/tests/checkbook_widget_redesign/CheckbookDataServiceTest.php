<?php
/**
 * Created by IntelliJ IDEA.
 * User: alexandr.perfilov
 * Date: 8/8/18
 * Time: 10:15 PM
 */

include_once CUSTOM_MODULES_DIR . '/checkbook_widget_redesign/checkbook_business_layer/checkbook_services/common/data/IDataService.php';
include_once CUSTOM_MODULES_DIR . '/checkbook_widget_redesign/checkbook_business_layer/checkbook_services/common/data/DataService.php';

/**
 * Class CheckbookDataServiceTest
 */
class CheckbookDataServiceTest extends \PHPUnit\Framework\TestCase
{
    /**
     *
     */
    public function setUp(): void
    {
        global $phpunit_cache;
        $phpunit_cache = [];

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     *
     */
    public function testGetByDatasetRowCount()
    {
        global $phpunit_cache;
        $DataService =
            $this->getMockBuilder('DataServiceClass')
                ->setMethods(['getRepository'])
                ->getMock();
        $DataService->expects($this->at(0))
            ->method('getRepository')
            ->will($this->returnValue(new MockRepository()));
        $this->assertEquals('SQL_RESULT_DRC_1', $DataService->getByDatasetRowCount([1, 2, 3]));
        $expected = [
            'get_by_record_count_5bfb529e3bfb765284f6a23813b64b59' => 'SQL_RESULT_DRC_1',
        ];
        $this->assertEquals($expected, $phpunit_cache);
        $phpunit_cache['get_by_record_count_5bfb529e3bfb765284f6a23813b64b59'] = 'CACHED_SQL_RESULT_DRC_1';

        $this->assertEquals('CACHED_SQL_RESULT_DRC_1', $DataService->getByDatasetRowCount([1,2,3]));
    }

    /**
     *
     */
    public function testGetByDataset()
    {
        global $phpunit_cache;
        $DataService =
            $this->getMockBuilder('DataServiceClass')
                ->setMethods(['getRepository'])
                ->getMock();
        $DataService->expects($this->at(0))
            ->method('getRepository')
            ->will($this->returnValue(new MockRepository()));
        $this->assertEquals('SQL_RESULT_D_1', $DataService->getByDataset([1, 2, 3]));
        $expected = [
            'get_by_dataset_checkbook_dc2be19d32fd6f7333c5e4425211ecfe' => 'SQL_RESULT_D_1',
        ];
        $this->assertEquals($expected, $phpunit_cache);
        $phpunit_cache['get_by_dataset_checkbook_dc2be19d32fd6f7333c5e4425211ecfe'] = 'CACHED_SQL_RESULT_D_1';

        $this->assertEquals('CACHED_SQL_RESULT_D_1', $DataService->getByDataset([1,2,3]));
    }
}

/**
 * Class MockRepository
 */
class MockRepository
{
    /**
     * @param $a
     * @param $b
     * @return string
     */
    public function getByDatasetRowCount($a, $b)
    {
        return 'SQL_RESULT_DRC_1';
    }

    /**
     * @param $a
     * @param $b
     * @param $c
     * @param $d
     * @return string
     */
    public function getByDataset($a, $b, $c, $d)
    {
        return 'SQL_RESULT_D_1';
    }
}

/**
 * Class DataServiceClass
 */
class DataServiceClass extends DataService
{
    /**
     * @return MockRepository|SqlEntityRepository
     */
    public function getRepository()
    {
        return new MockRepository();
    }
}
