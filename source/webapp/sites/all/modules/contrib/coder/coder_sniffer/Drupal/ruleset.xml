<?xml version="1.0"?>
<!-- See http://pear.php.net/manual/en/package.php.php-codesniffer.annotated-ruleset.php -->
<ruleset name="Drupal">
 <description>Drupal coding standard</description>

 <rule ref="Internal.NoCodeFound">
  <!-- Usually there is no code in txt or info files, so we suppress warnings about
    PHP short tags and what not. -->
  <exclude-pattern>*.txt</exclude-pattern>
  <exclude-pattern>*.md</exclude-pattern>
  <exclude-pattern>*.info</exclude-pattern>
 </rule>

 <rule ref="Drupal.Commenting.FileComment">
  <!-- Do not run this sniff on txt files. -->
  <exclude-pattern>*.txt</exclude-pattern>
 </rule>
 <rule ref="Drupal.Commenting.FileComment.SpacingAfter">
  <!-- Do not run this sniff on template files. -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>
 <rule ref="Drupal.ControlStructures.ControlSignature">
  <!-- Do not run this sniff on template files. -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>
 <rule ref="Drupal.ControlStructures.ElseCatchNewline">
  <!-- Do not run this sniff on template files. -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>
 <rule ref="Drupal.Formatting.DisallowCloseTag">
  <!-- Do not run this sniff on template files. -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>
 <rule ref="Drupal.WhiteSpace.ScopeClosingBrace">
  <!-- Do not run this sniff on template files. -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>
 <rule ref="Drupal.WhiteSpace.ScopeIndent">
  <!-- Do not run this sniff on template files, as the indentation might follow
  the HTML -->
  <exclude-pattern>*.tpl.php</exclude-pattern>
 </rule>

 <rule ref="Generic.Formatting.SpaceAfterCast" />
 <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
 <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />
 <rule ref="Generic.NamingConventions.ConstructorName" />
 <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
 <rule ref="Generic.PHP.DeprecatedFunctions" />
 <rule ref="Generic.PHP.DisallowShortOpenTag" />
 <rule ref="Generic.PHP.UpperCaseConstant" />
 <rule ref="Generic.WhiteSpace.DisallowTabIndent" />

 <!-- Use Unix newlines -->
 <rule ref="Generic.Files.LineEndings">
  <properties>
   <property name="eolChar" value="\n"/>
  </properties>
 </rule>

 <rule ref="MySource.Debug.DebugCode" />
 <rule ref="PEAR.Files.IncludingFile" />
 <!-- Disable some error messages that we do not want. -->
 <rule ref="PEAR.Files.IncludingFile.UseIncludeOnce">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Files.IncludingFile.UseInclude">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Files.IncludingFile.UseRequire">
  <severity>0</severity>
 </rule>

 <rule ref="PEAR.Functions.FunctionCallSignature"/>
 <!-- Disable some error messages that we already cover. -->
 <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket">
  <severity>0</severity>
 </rule>
 <!-- Disable some error messages that we do not want. -->
 <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
  <severity>0</severity>
 </rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
  <severity>0</severity>
 </rule>

 <rule ref="PEAR.Functions.ValidDefaultValue" />

 <rule ref="PSR2.Classes.PropertyDeclaration" />

 <rule ref="Squiz.Arrays.ArrayDeclaration" />
 <!-- Disable some error messages that we do not want. -->
 <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
  <severity>0</severity>
 </rule>
 <!-- Typo in error message identifier, we keep this for backwards compatibility.
  @todo Remove this once PHPCS 1.5 or higher has been released. -->
 <rule ref="Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
  <severity>0</severity>
 </rule>

 <rule ref="Squiz.Arrays.ArrayBracketSpacing" />

 <rule ref="Squiz.Classes.LowercaseClassKeywords" />
 <rule ref="Squiz.Commenting.PostStatementComment" />
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
 <!-- Disable some error messages that we already cover. -->
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
 <!-- Disable some error messages that we already cover. -->
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
  <severity>0</severity>
 </rule>

 <rule ref="Squiz.ControlStructures.LowercaseDeclaration" />

 <rule ref="Squiz.ControlStructures.SwitchDeclaration" />
 <!-- Disable some error messages that we do not want. -->
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.BreakIndent">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.CaseIndent">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultIndent">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyCase">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyDefault">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.MissingDefault">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak">
  <severity>0</severity>
 </rule>
 <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak">
  <severity>0</severity>
 </rule>

 <rule ref="Squiz.CSS.ColonSpacing" />
 <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions" />
 <rule ref="Squiz.CSS.EmptyClassDefinition" />
 <rule ref="Squiz.CSS.EmptyStyleDefinition" />
 <rule ref="Squiz.CSS.MissingColon" />
 <rule ref="Squiz.CSS.SemicolonSpacing" />

 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
  <properties>
   <property name="equalsSpacing" value="1"/>
  </properties>
 </rule>

 <rule ref="Squiz.PHP.LowercasePHPFunctions" />
 <rule ref="Squiz.PHP.NonExecutableCode" />
 <rule ref="Squiz.Scope.MethodScope" />
 <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
 <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

 <!-- Ignore various version control directories. -->
 <exclude-pattern>*/\.git/*</exclude-pattern>
 <exclude-pattern>*/\.svn/*</exclude-pattern>
 <exclude-pattern>*/\.hg/*</exclude-pattern>
 <exclude-pattern>*/\.bzr/*</exclude-pattern>
</ruleset>
