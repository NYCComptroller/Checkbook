<?php
/**
 * This file is part of the Checkbook NYC financial transparency software.
 *
 * Copyright (C) 2012, 2013 New York City
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


/**
 * Implements hook_page_alter().
 * @param $page
 */
function checkbook_custom_breadcrumbs_page_alter(&$page)
{
  //TODO

  if (preg_match('/^contracts_landing/', current_path()) || preg_match('/^contracts_revenue_landing/', current_path())) {
    _set_contracts_breadcrumb_title_drilldown();
  } elseif (preg_match('/^contracts_pending/', current_path())) {
    _set_pending_contracts_breadcrumb_title_drilldown();
  } elseif (preg_match('/^spending_landing/', current_path())) {
    _set_spending_breadcrumb_title_drilldown();
  } elseif (preg_match('/^budget/', current_path())) {
    _set_budget_breadcrumb_title_drilldown();
  } elseif (preg_match('/^revenue/', current_path())) {
    _set_revenue_breadcrumb_title_drilldown();
  } elseif (preg_match('/^payroll/', current_path())) {
    _set_payroll_breadcrumb_title_drilldown();
  } elseif (preg_match('/^alert/', current_path())) {
    _set_alert_breadcrumb_title_drilldown();
  } else if (preg_match('/^nycha_contracts/', current_path())) {
    _set_nycha_contracts_breadcrumb_title_drilldown();
  } else if (preg_match('/^nycha_spending/', current_path())) {
    _set_nycha_spending_breadcrumb_title_drilldown();
  } else if (preg_match('/^nycha_budget/', current_path())) {
    _set_nycha_budget_breadcrumb_title_drilldown();
  } else if (preg_match('/^nycha_revenue/', current_path())) {
    _set_nycha_revenue_breadcrumb_title_drilldown();
  }

  _checkbook_custom_breadcrumnb_add_breadcrumb_title();
}

/**
 * Custom function to set title for alert landing pages
 **/
function _set_alert_breadcrumb_title_drilldown()
{
  $links = array(l(t('Home'), ''), 'Alerts');
  drupal_set_breadcrumb($links);
}

/**
 * Custom function to set title for contracts landing pages
 **/
function _set_contracts_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_contracts_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for Spending landing pages
 **/
function _set_spending_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_spending_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for Budget landing pages
 **/
function _set_budget_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_budget_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for Revenue landing pages
 **/
function _set_revenue_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_revenue_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for Payroll landing pages
 **/
function _set_payroll_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_payroll_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for NYCHA CONTRACTS landing pages
 **/
function _set_nycha_contracts_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_nycha_contracts_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for NYCHA Spending landing pages
 **/
function _set_nycha_spending_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_nycha_spending_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for NYCHA Budget landing pages
 **/
function _set_nycha_budget_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_nycha_budget_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for NYCHA Revenue landing pages
 **/
function _set_nycha_revenue_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_nycha_revenue_breadcrumb_title_drilldown(), PASS_THROUGH);
}


/**
 * Custom function to get title for contracts landing pages
 * @param bool $ethinicty
 * @return string
 */
function _get_contracts_breadcrumb_title_drilldown($ethinicty = true)
{

  $lastReqParam = _getLastRequestParamValue();
  $title = "New York City";

  foreach ($lastReqParam as $key => $value) {
    switch ($key) {
      case 'agency':
        $title = _checkbook_project_get_name_for_argument("agency_id", $value);
        break;
      case 'vendor':
        $title = _checkbook_project_get_name_for_argument("vendor_id", $value);
        if ($ethinicty) {
          $title .= MappingUtil::getPrimeVendorEthinictyTitle($value, "contracts");
        }
        break;
      case 'awdmethod':
        $title = _checkbook_project_get_name_for_argument("award_method_id", $value);
        break;
      case 'csize':
        $title = _checkbook_project_get_name_for_argument("award_size_id", $value);
        break;
      case 'cindustry':
        $title = _checkbook_project_get_name_for_argument("industry_type_id", $value);
        break;
      case 'subvendor':
        $title = _checkbook_project_get_name_for_argument("sub_vendor_id", $value);
        if ($ethinicty) {
          $title .= MappingUtil::getSubVendorEthinictyTitle($value, "contracts");
        }
        break;
      default:
    }
  }

  return $title;

}


/**
 * Custom function to get title for spending landing pages
 * @param bool $ethinicty
 * @return string
 */
function _get_spending_breadcrumb_title_drilldown($ethinicty = true)
{

  $lastReqParam = _getLastRequestParamValue();
  $title = "New York City";

  foreach ($lastReqParam as $key => $value) {
    switch ($key) {
      case 'agency':
        $title = _checkbook_project_get_name_for_argument("agency_id", $value);
        break;
      case 'vendor':
        $title = _checkbook_project_get_name_for_argument("vendor_id", $value);
        if ($ethinicty) {
          $title .= MappingUtil::getPrimeVendorEthinictyTitle($value, "spending");
        }
        break;
      case 'industry':
        $title = _checkbook_project_get_name_for_argument("industry_type_id", $value);
        break;
      case 'subvendor':
        if ($value != 'all') {
          $title = _checkbook_project_get_name_for_argument("sub_vendor_id", $value);
          if ($ethinicty) {
            $title .= MappingUtil::getSubVendorEthinictyTitle($value, "spending");
          }
        }
        break;
      default:
    }
  }

  return $title;

}

/**
 * Custom function to get title for Budget landing pages
 **/
function _get_budget_breadcrumb_title_drilldown()
{
  $bottomURL = $_REQUEST['expandBottomContURL'];
  if (!$bottomURL && preg_match('/^budget\/transactions/', current_path())) {
    $title = null;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    $title = "New York City";

    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'agency':
          $title = _checkbook_project_get_name_for_argument("agency_id", $value);
          break;
        case 'expcategory':
          $title = _checkbook_project_get_name_for_argument("object_class_id", $value);
          break;
        case 'dept':
          $title = _checkbook_project_get_name_for_argument("department_code", $value);
          break;
        case 'bdgcode':
          $title = _checkbook_project_get_name_for_argument("budget_code_id", $value);

        default:
      }
    }
  }
  return $title;

}

/**
 * Custom function to get title for Revenue landing pages
 **/
function _get_revenue_breadcrumb_title_drilldown()
{
  $bottomURL = $_REQUEST['expandBottomContURL'];
  if (!$bottomURL && preg_match('/^revenue\/transactions/', current_path())) {
    $title = null;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    $title = "New York City";

    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'agency':
          $title = _checkbook_project_get_name_for_argument("agency_id", $value);
          break;
        case 'revcat':
          $title = _checkbook_project_get_name_for_argument("revenue_category_id", $value);
          break;
        case 'fundsrccode':
          $title = _checkbook_project_get_name_for_argument("funding_class_code", $value);
          break;
        default:
      }
    }
  }
  return $title;

}


/**
 * Custom function to get title for Payroll landing pages
 **/
function _get_payroll_breadcrumb_title_drilldown()
{
  $bottomURL = $_REQUEST['expandBottomContURL'];
  if (!$bottomURL && preg_match('/^payroll\/search\/transactions/', current_path())) {
    $title = null;
  } else {
    if (preg_match('/agency_landing/', current_path())) {
      $value = RequestUtilities::get('agency');
      $title = _checkbook_project_get_name_for_argument("agency_id", $value);
    } else if (preg_match('/title_landing/', current_path())) {
      $value = RequestUtilities::get('title');
      $title = _checkbook_project_get_name_for_argument("title", $value);
    } else {
      $title = "New York City";
    }
  }

  return $title;

}

/**
 * Custom function to get title for NYCHA CONTRACTS landing pages
 **/
function _get_nycha_contracts_breadcrumb_title_drilldown()
{
  $bottomURL = $_REQUEST['expandBottomContURL'];
  if (!$bottomURL && preg_match('/^nycha_contracts\/search\/transactions/', current_path()) || preg_match('/^nycha_contracts\/all\/transactions/', current_path())) {
    $title = null;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'vendor':
          $title = _checkbook_project_get_name_for_argument("vendor_id", $value);
          break;
        case 'awdmethod':
          $title = _checkbook_project_get_name_for_argument("award_method_id", $value);
          break;
        case 'csize':
          $title = _checkbook_project_get_name_for_argument("award_size_id", $value);
          break;
        case 'industry':
          $title = _checkbook_project_get_name_for_argument("industry_type_id", $value);
          break;
        default:
          $title = "New York City Housing Authority";
      }
    }
  }
  return $title;

}

/**
 * Custom function to get title for NYCHA CONTRACTS landing pages
 **/
function _get_nycha_spending_breadcrumb_title_drilldown()
{
  $bottomURL = $_REQUEST['expandBottomContURL'];
  if (!$bottomURL && preg_match('/^nycha_spending\/search\/transactions/', current_path()) || preg_match('/^nycha_spending\/all\/transactions/', current_path())) {
    $title = null;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'vendor':
          $title = _checkbook_project_get_name_for_argument("vendor_id", $value);
          break;
        case 'industry':
          $title = _checkbook_project_get_name_for_argument("industry_type_id", $value);
          break;
        case 'fundsrc':
          $title = _checkbook_project_get_name_for_argument("funding_source_id", $value);
          break;
        default:
          $title = "New York City Housing Authority";
      }
    }
  }
  return $title;

}

/**
 * Custom function to get title for NYCHA Budget landing pages
 **/
function _get_nycha_budget_breadcrumb_title_drilldown(){
  $title = NULL;
  if (PageType::getCurrent() == PageType::ADVANCED_SEARCH_PAGE) {
    $title = NULL;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'expcategory':
          $title = _checkbook_project_get_name_for_argument("expenditure_type_id", $value);
          break;
        case 'respcenter':
          $title = _checkbook_project_get_name_for_argument("responsibility_center_id", $value);
          break;
        case 'fundsrc':
          $title = _checkbook_project_get_name_for_argument("funding_source_id", $value);
          break;
        case 'program':
          $title = _checkbook_project_get_name_for_argument("program_phase_id", $value);
          break;
        case 'project':
          $title = _checkbook_project_get_name_for_argument("gl_project_id", $value);
          break;
        default:
          $title = "New York City Housing Authority";
      }
    }
  }
  return $title;
}
/**
 * Custom function to get title for NYCHA Revenu landing pages
 **/
function _get_nycha_revenue_breadcrumb_title_drilldown(){
  $title = NULL;
  if (PageType::getCurrent() == PageType::ADVANCED_SEARCH_PAGE) {
    $title = NULL;
  } else {
    $lastReqParam = _getLastRequestParamValue();
    foreach ($lastReqParam as $key => $value) {
      switch ($key) {
        case 'expcategory':
          $title = _checkbook_project_get_name_for_argument("rev_expenditure_type_id", $value);
          break;
        case 'respcenter':
          $title = _checkbook_project_get_name_for_argument("responsibility_center_id", $value);
          break;
        case 'fundsrc':
          $title = _checkbook_project_get_name_for_argument("rev_funding_source_id", $value);
          break;
        case 'program':
          $title = _checkbook_project_get_name_for_argument("rev_program_phase_id", $value);
          break;
        case 'project':
          $title = _checkbook_project_get_name_for_argument("rev_gl_project_id", $value);
          break;
        default:
          $title = "New York City Housing Authority";
      }
    }
  }
  return $title;
}

/**
 * Custom function to set title for contracts landing pages
 **/
function _set_pending_contracts_breadcrumb_title_drilldown()
{
  drupal_set_title(_get_pending_contracts_breadcrumb_title_drilldown(), PASS_THROUGH);
}

/**
 * Custom function to set title for contracts landing pages
 * @param bool $ethinicty
 * @return string
 */
function _get_pending_contracts_breadcrumb_title_drilldown($ethinicty = true)
{

  $lastReqParam = _getLastRequestParamValue();
  $title = "New York City";

  foreach ($lastReqParam as $key => $value) {
    switch ($key) {
      case 'agency':
        $title = _checkbook_project_get_name_for_argument("agency_id", $value);
        break;
      case 'vendor':
        $title = _checkbook_project_get_name_for_argument("pending_contracts_vendor_id", $value);
        if ($ethinicty) {
          $title .= MappingUtil::getPrimeVendorEthinictyTitle($value, "contracts");
        }
        break;
      case 'awdmethod':
        $title = _checkbook_project_get_name_for_argument("award_method_id", $value);
        break;
      case 'awrdmthd':
        $title = _checkbook_project_get_name_for_argument("award_method_id", $value);
        break;
      case 'csize':
        $title = _checkbook_project_get_name_for_argument("award_size_id", $value);
        break;
      case 'cindustry':
        $title = _checkbook_project_get_name_for_argument("industry_type_id", $value);
        break;
      default:
    }
  }

  return $title;

}


/**
 * Custom function to set breadcrumbs and title for contracts landing pages
 */
function _set_contracts_breadcrumb_title()
{
  $agency_id = RequestUtilities::get("agency");
  $vendor_id = RequestUtilities::get("vendor");
  $year_id = RequestUtilities::get("year");
  $award_method_id = RequestUtilities::get("awdmethod");
  $award_size_id = RequestUtilities::get("csize");
  $industry_type_id = RequestUtilities::get("cindustry");

  $year_type = RequestUtilities::get("yeartype");
  $values['agency_id'] = (isset($agency_id)) ? _checkbook_project_get_name_for_argument("agency_id", $agency_id) : "";
  $values['vendor_id'] = (isset($vendor_id)) ? _checkbook_project_get_name_for_argument("vendor_id", $vendor_id) : "";
  $values['award_method'] = (isset($award_method_id)) ? _checkbook_project_get_name_for_argument("award_method_id", $award_method_id) : "";
  $values['award_size_id'] = (isset($award_size_id)) ? _checkbook_project_get_name_for_argument("award_size_id", $award_size_id) : "";
  $values['industry_type_id'] = (isset($industry_type_id)) ? _checkbook_project_get_name_for_argument("industry_type_id", $industry_type_id) : "";


  $breadcrumb = array();
  $breadcrumb[] = l('Home', '<front>');
  $breadcrumb[] = l('NYC Contracts', 'contracts/year/' . $year_id . '/yeartype/' . $year_type);
  $title = "New York City";
  if (isset($agency_id)) {
    $breadcrumb[] = l($values['agency_id'], 'contracts/agency/' . $agency_id . '/year/' . $year_id . '/yeartype/' . $year_type);
    $title = $values['agency_id'];
  }
  if (isset($vendor_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $agency_id : '';
    $link .= '/vendor/' . $vendor_id;
    $link .= '/year/' . $year_id . '/yeartype/' . $year_type;
    $link .= (isset($award_size_id)) ? '/csize/' . $award_size_id : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $industry_type_id : '';
    $breadcrumb[] = l($values['vendor_id'], $link);
    $title = $values['vendor_id'];
  }
  if (isset($award_method_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $agency_id : '';
    $link .= (isset($vendor_id)) ? '/vendor/' . $vendor_id : '';
    $link .= (isset($award_size_id)) ? '/csize/' . $award_size_id : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $industry_type_id : '';
    $link .= '/awdmethod/' . $award_method_id;
    $link .= '/year/' . $year_id . '/yeartype/' . $year_type;
    $breadcrumb[] = l($values['award_method'], $link);
    $title = $values['award_method'];
  }
  if (isset($industry_type_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $agency_id : '';
    $link .= (isset($vendor_id)) ? '/vendor/' . $vendor_id : '';
    $link .= (isset($award_method_id)) ? '/awdmethod/' . $award_method_id : '';
    $link .= (isset($award_size_id)) ? '/csize/' . $award_size_id : '';
    $link .= '/cindustry/' . $industry_type_id;
    $link .= '/year/' . $year_id . '/yeartype/' . $year_type;
    $breadcrumb[] = l($values['industry_type_id'], $link);
    $title = $values['industry_type_id'];
  }

  if (isset($award_size_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $agency_id : '';
    $link .= (isset($vendor_id)) ? '/vendor/' . $vendor_id : '';
    $link .= (isset($award_method_id)) ? '/awdmethod/' . $award_method_id : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $industry_type_id : '';
    $link .= '/csize/' . $award_size_id;
    $link .= '/year/' . $year_id . '/yeartype/' . $year_type;
    $breadcrumb[] = l($values['award_size_id'], $link);
    $title = $values['award_size_id'];
  }

  $breadcrumb[count($breadcrumb) - 1] = $title;
  drupal_set_title($title, PASS_THROUGH);
  //drupal_set_breadcrumb($breadcrumb);
}

/**
 * Custom function to set breadcrumbs and title for pending contracts landing pages
 */
function _set_pending_contracts_breadcrumb_title()
{
  $pending_contracts_agency_id = RequestUtilities::get("agency");
  $pending_contracts_vendor_code = RequestUtilities::get("vendor");
  $pending_contracts_year_id = RequestUtilities::get("year");
  $pending_contracts_award_method_code = RequestUtilities::get("awrdmthd");
  $pending_contracts_award_size_id = RequestUtilities::get("csize");
  $pending_contracts_industry_type_id = RequestUtilities::get("cindustry");
  $pending_contracts_year_type = RequestUtilities::get("yeartype");

  $values['pending_contracts_agency_id'] = (isset($pending_contracts_agency_id)) ? _checkbook_project_get_name_for_argument("agency_id", $pending_contracts_agency_id) : "";
  $values['pending_contracts_vendor_code'] = (isset($pending_contracts_vendor_code)) ? _checkbook_project_get_name_for_argument("pending_contracts_vendor_code", $pending_contracts_vendor_code) : "";
  $values['pending_contracts_award_method'] = (isset($pending_contracts_award_method_code)) ? _checkbook_project_get_name_for_argument("pending_contracts_award_method", $pending_contracts_award_method_code) : "";
  $values['pending_contracts_award_size_id'] = (isset($pending_contracts_award_size_id)) ? _checkbook_project_get_name_for_argument("award_size_id", $pending_contracts_award_size_id) : "";
  $values['pending_contracts_industry_type_id'] = (isset($pending_contracts_industry_type_id)) ? _checkbook_project_get_name_for_argument("industry_type_id", $pending_contracts_industry_type_id) : "";

  $breadcrumb = array();
  $breadcrumb[] = l('Home', '<front>');
  $breadcrumb[] = l('NYC Contracts', 'contracts/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type);
  $title = "New York City";
  if (isset($pending_contracts_agency_id)) {
    $breadcrumb[] = l($values['pending_contracts_agency_id'], 'contracts/agency/' . $pending_contracts_agency_id . '/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type);
    $title = $values['pending_contracts_agency_id'];
  }
  if (isset($pending_contracts_vendor_code)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $pending_contracts_agency_id : '';
    $link .= '/vendor/' . $pending_contracts_vendor_code;
    $link .= '/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type;
    $link .= (isset($award_size_id)) ? '/csize/' . $pending_contracts_award_size_id : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $pending_contracts_industry_type_id : '';
    $breadcrumb[] = l($values['pending_contracts_vendor_code'], $link);
    $title = $values['pending_contracts_vendor_code'];
  }
  if (isset($pending_contracts_award_method_code)) {
    $link = 'contracts';
    $link .= (isset($pending_contracts_agency_id)) ? '/agency/' . $pending_contracts_agency_id : '';
    $link .= (isset($pending_contracts_vendor_code)) ? '/vendor/' . $pending_contracts_vendor_code : '';
    $link .= (isset($award_size_id)) ? '/csize/' . $pending_contracts_award_size_id : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $pending_contracts_industry_type_id : '';
    $link .= '/awrdmthd/' . $pending_contracts_award_method_code;
    $link .= '/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type;
    $breadcrumb[] = l($values['pending_contracts_award_method'], $link);
    $title = $values['pending_contracts_award_method'];
  }
  if (isset($pending_contracts_industry_type_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $pending_contracts_agency_id : '';
    $link .= (isset($vendor_id)) ? '/vendor/' . $pending_contracts_vendor_code : '';
    $link .= (isset($award_method_id)) ? '/awdmethod/' . $pending_contracts_award_method_code : '';
    $link .= (isset($award_size_id)) ? '/csize/' . $pending_contracts_award_size_id : '';
    $link .= '/cindustry/' . $pending_contracts_industry_type_id;
    $link .= '/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type;
    $breadcrumb[] = l($values['pending_contracts_industry_type_id'], $link);
    $title = $values['pending_contracts_industry_type_id'];
  }
  if (isset($pending_contracts_award_size_id)) {
    $link = 'contracts';
    $link .= (isset($agency_id)) ? '/agency/' . $pending_contracts_agency_id : '';
    $link .= (isset($vendor_id)) ? '/vendor/' . $pending_contracts_vendor_code : '';
    $link .= (isset($award_method_id)) ? '/awdmethod/' . $pending_contracts_award_method_code : '';
    $link .= (isset($industry_type_id)) ? '/cindustry/' . $pending_contracts_industry_type_id : '';
    $link .= '/csize/' . $pending_contracts_award_size_id;
    $link .= '/year/' . $pending_contracts_year_id . '/yeartype/' . $pending_contracts_year_type;
    $breadcrumb[] = l($values['pending_contracts_award_size_id'], $link);
    $title = $values['pending_contracts_award_size_id'];
  }
  $breadcrumb[count($breadcrumb) - 1] = $title;
  drupal_set_title($title, PASS_THROUGH);
}


function _checkbook_custom_breadcrumnb_add_breadcrumb_title()
{
  global $checkbook_breadcrumb_title;
  if (preg_match('/api/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), 'API');
    drupal_set_breadcrumb($links);
  }
  if (preg_match('/(contract-api)/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), l(t('API'), 'data-feeds/api'), 'Contracts API');
    drupal_set_breadcrumb($links);
  } else if (preg_match('/(payroll-api)/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), l(t('API'), 'data-feeds/api'), 'Payroll API');
    drupal_set_breadcrumb($links);
  } else if (preg_match('/(spending-api)/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), l(t('API'), 'data-feeds/api'), 'Spending API');
    drupal_set_breadcrumb($links);
  } else if (preg_match('/(budget-api)/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), l(t('API'), 'data-feeds/api'), 'Budget API');
    drupal_set_breadcrumb($links);
  } else if (preg_match('/(revenue-api)/', drupal_get_path_alias(current_path()))) {
    $links = array(l(t('Home'), ''), l(t('API'), 'data-feeds/api'), 'Revenue API');
    drupal_set_breadcrumb($links);
  } else if (preg_match('/^contract/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getContractBreadcrumbTitle();
  } else if (preg_match('/^nycha_contracts/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getNYCHAContractBreadcrumbTitle();
  } elseif (preg_match('/^payroll/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getPayrollBreadcrumbTitle();
  } elseif (preg_match('/^spending/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getSpendingBreadcrumbTitle();
  } else if (preg_match('/^nycha_spending/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getNYCHASpendingBreadcrumbTitle();
  } elseif (preg_match('/^budget/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getBudgetBreadcrumbTitle();
  } elseif (preg_match('/^nycha_budget/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getNYCHABudgetBreadcrumbTitle();
  } elseif (preg_match('/^nycha_revenue/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getNYCHARevenueBreadcrumbTitle();
  } elseif (preg_match('/^revenue/', current_path())) {
    $checkbook_breadcrumb_title = CustomBreadcrumbs::getRevenueBreadcrumbTitle();
  } elseif (preg_match('/smart_search/', current_path())) {
    $datasource = _checkbook_get_datasource();
    switch ($datasource) {
      case 'nycha':
        $tail = ' NYCHA';
        break;
      case 'edc':
        $tail = ' EDC';
        break;
      default:
        $tail = '';
    }
    $links = array(l(t('Home'), ''), 'Search Results' . $tail);
    drupal_set_breadcrumb($links);
  }
}

function _checkbook_custom_breadcrumb_is_hierarchical()
{
  if (preg_match('/(contract-api)|(payroll-api)|(spending-api)|(budget-api)|(revenue-api)/', current_path())) {
    return true;
  } else if (preg_match('/(contract)|(payroll)|(spending)|(budget)|(revenue)|(newwindow)/', current_path())) {
    return false;
  }

  return true;

}





