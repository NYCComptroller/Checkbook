<statements>
  <!--GetNychaVendors-->
  <statement name="GetContractsByVendors" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        vendor_name,
        vendor_id,
        COUNT(DISTINCT contract_id) AS purchase_order_count,
        SUM(spend_to_date) AS spend_to_date,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount
      FROM contracts_widget_summary c
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField=" start_year_id, end_year_id"/>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY vendor_id, vendor_name
    </sql>
  </statement>

  <!--GetNychaAwardMethods-->
  <statement name="GetContractsByAwardMethods" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        award_method_id,
        award_method_name,
        count(distinct contract_id) AS purchase_order_count,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount,
        SUM(spend_to_date) AS spend_to_date
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField=" start_year_id, end_year_id"/>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY award_method_name, award_method_id
    </sql>
  </statement>

  <!--GetNychaPurchaseOrders-->
  <statement name="GetContractsByPurchaseOrders" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        contract_id,
        purpose,
        vendor_name,
        MAX(total_amount) AS total_amount,
        MAX(original_amount) AS original_amount,
        MAX(spend_to_date) AS spend_to_date,
        ABS(SUM(original_amount - total_amount)) AS amount_difference,
        ROUND(CASE COALESCE( SUM(original_amount), 0 :: NUMERIC ) WHEN 0 THEN 100 :: NUMERIC
            ELSE ABS( SUM(original_amount - total_amount) / SUM(original_amount) )* 100 END, 2) AS percent_difference
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="agreement_type_id">1</exp>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY contract_id, purpose, vendor_name
    </sql>
  </statement>

  <!--GetNychaBlanketAgreements-->
  <statement name="GetContractsBlanketAgreements" datasource="checkbook_nycha">
    <param name="year" required="true"/>
    <param name="vendor" type="int"/>
    <param name="is_modification" type="bool"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        contract_id,
        purpose,
        vendor_name,
        MAX(total_amount) AS total_amount,
        MAX(original_amount) AS original_amount,
        MAX(spend_to_date) AS spend_to_date,
        ABS(SUM(original_amount - total_amount)) AS dollar_difference,
        ROUND( CASE COALESCE(SUM(original_amount), 0 :: NUMERIC ) WHEN 0 THEN 100 :: NUMERIC
                ELSE ABS( SUM(original_amount - total_amount) / SUM(original_amount) )* 100 END, 2) AS percent_difference
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <!--WHERE  '2016' BETWEEN start_year AND end_year-->
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="agreement_type_id">1</exp>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY  contract_id, purpose, vendor_name
      <exp op="IF" condition="=" paramName="is_modification" compareValue="true">
        HAVING ABS(SUM(original_amount - total_amount))!= 0
      </exp>
    </sql>
  </statement>

  <!--GetNychaPlannedAgreements-->
  <statement name="GetContractsPlannedAgreements" datasource="checkbook_nycha">
    <param name="year" required="true"/>
    <param name="vendor" type="int"/>
    <param name="is_modification" type="bool"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        contract_id,
        purpose,
        vendor_name,
        MAX(total_amount) AS total_amount,
        MAX(original_amount) AS original_amount,
        MAX(spend_to_date) AS spend_to_date,
        ABS( SUM(original_amount - total_amount)) AS dollar_difference,
        ROUND( CASE COALESCE(SUM(original_amount), 0 :: NUMERIC ) WHEN 0 THEN 100 :: NUMERIC
                  ELSE ABS(SUM(original_amount - total_amount) / SUM(original_amount) )* 100 END, 2 ) AS percent_difference
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <!--WHERE  '2016' BETWEEN start_year AND end_year-->
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="agreement_type_id">2</exp>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY  contract_id, purpose, vendor_name
      <exp op="IF" condition="=" paramName="is_modification" compareValue="true">
        HAVING ABS( SUM(original_amount - total_amount) )!= 0
      </exp>
    </sql>
  </statement>

  <!--GetDepartment-->
  <statement name="GetContractsByDepartments" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        department_id,
        department_name,
        count(distinct contract_id) AS purchase_order_count,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount,
        SUM(spend_to_date) AS spend_to_date
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY department_id, department_name
    </sql>
  </statement>

  <!-- GetContractsByIndustries -->
  <statement name="GetContractsByIndustries" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        industry_type_name,
        industry_type_id,
        count(distinct contract_id) AS purchase_order_count,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount,
        SUM(spend_to_date) AS spend_to_date
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY industry_type_id,industry_type_name
    </sql>
  </statement>

  <!-- GetCountContracts -->
  <statement name="GetCountContracts" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT DISTINCT contract_id FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="BETWEEN" dbField="start_year_id,end_year_id" paramName="year"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
    </sql>
  </statement>

  <!-- GetContractsBySize -->
  <statement name="GetContractsBySize" datasource="checkbook_nycha">
    <param name="year" required="true" type="int"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        award_size_id,
        award_size_name,
        count(distinct contract_id) AS po_count,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount,
        SUM(spend_to_date) AS spend_to_date
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY  award_size_id,award_size_name
    </sql>
  </statement>

  <!-- GetContractsByRespCenters -->
  <statement name="GetContractsByRespCenters" datasource="checkbook_nycha">
    <param name="year" required="true"/>
    <param name="vendor" type="int"/>
    <param name="industry" />
    <param name="size" />
    <param name="awdmethod" />
    <sql>
      SELECT
        responsibility_center_id,
        responsibility_center_code,
        responsibility_center_name AS responsibility_center_descr,
        COUNT(distinct contract_id) AS contract_count,
        SUM(total_amount) AS total_amount,
        SUM(original_amount) AS original_amount,
        SUM(spend_to_date) AS spend_to_date,
        ABS(SUM(original_amount - total_amount)) AS delta_amount
      FROM contracts_widget_summary
      <where>
        <exp op="AND">
          <exp op="=" dbField="vendor_id" paramName="vendor"/>
          <exp op="BETWEEN" paramName="year" dbField="start_year_id, end_year_id"/>
          <exp op="IS NOT" dbField="responsibility_center_code">NULL</exp>
          <exp op="=" dbField="industry_type_id" paramName="industry"/>
          <exp op="=" dbField="award_size_id" paramName="size"/>
          <exp op="=" dbField="award_method_id" paramName="awdmethod"/>
        </exp>
      </where>
      GROUP BY responsibility_center_id, responsibility_center_code, responsibility_center_descr
    </sql>
  </statement>
</statements>
