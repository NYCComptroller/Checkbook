{
  "datasets":{
    "budget":{
      "datasourceName":"main",
      "source":"budget"
    }
  },
  "cubes":{
    "budget":{
      "sourceDatasetName":"budget",
      "dimensions":[
        {
          "name": "year",
          "levels": [
            {
              "name": "year",
              "sourceColumnName": "budget_fiscal_year"
            }
          ]
        },
        {
          "name":"year_id",
          "levels":[
            {
              "name":"year_id",
              "sourceColumnName":"budget_fiscal_year_id"
            }
          ]
        },
        {
          "name": "expenditure_type_id",
          "levels": [
            {
              "name": "expenditure_type_id",
              "sourceColumnName": "expenditure_type_id"
            }
          ]
        },
        {
          "name": "expenditure_type_description",
          "levels": [
            {
              "name": "expenditure_type_description",
              "sourceColumnName": "expenditure_type_description"
            }
          ]
        },
        {
          "name":"budget_id",
          "levels":[
            {
              "name":"budget_id",
              "sourceColumnName":"budget_id"
            }
          ]
        },
        {
          "name":"budget_type",
          "levels":[
            {
              "name":"budget_type",
              "sourceColumnName":"budget_type"
            }
          ]
        },
        {
          "name":"budget_name",
          "levels":[
            {
              "name":"budget_name",
              "sourceColumnName":"budget_name"
            }
          ]
        },
        {
          "name":"funding_source_id",
          "levels":[
            {
              "name":"funding_source_id",
              "sourceColumnName":"funding_source_id"
            }
          ]
        },
        {
          "name":"funding_source_description",
          "levels":[
            {
              "name":"funding_source_description",
              "sourceColumnName":"funding_source_description"
            }
          ]
        },
        {
          "name":"responsibility_center_id",
          "levels":[
            {
              "name":"responsibility_center_id",
              "sourceColumnName":"responsibility_center_id"
            }
          ]
        },
        {
          "name":"responsibility_center_description",
          "levels":[
            {
              "name":"responsibility_center_description",
              "sourceColumnName":"responsibility_center_description"
            }
          ]
        },
        {
          "name":"responsibility_center_name",
          "levels":[
            {
              "name":"responsibility_center_name",
              "sourceColumnName":"responsibility_center_description"
            }
          ]
        },
        {
          "name":"program_phase_id",
          "levels":[
            {
              "name":"program_phase_id",
              "sourceColumnName":"program_phase_id"
            }
          ]
        },
        {
          "name":"program_phase_description",
          "levels":[
            {
              "name":"program_phase_description",
              "sourceColumnName":"program_phase_description"
            }
          ]
        },
        {
          "name":"gl_project_id",
          "levels":[
            {
              "name":"gl_project_id",
              "sourceColumnName":"gl_project_id"
            }
          ]
        },
        {
          "name":"gl_project_description",
          "levels":[
            {
              "name":"gl_project_description",
              "sourceColumnName":"gl_project_description"
            }
          ]
        }
      ],
      "measures":{
        "txcount": {
          "function": "COUNT(*)"
        },
        "budget_modified":{
          "function":"SUM(COALESCE(modified_budget,0))"
        },
        "budget_remaining":{
          "function":"SUM(funds_available)"
        },
        "budget_committed":{
          "function":"SUM(committed)"
        },
        "budget_encumbered":{
          "function":"SUM(encumbrance_amount)"
        },
        "budget_actual_amount":{
          "function":"SUM(actual_amount)"
        },
        "budget_adopted_amount":{
          "function":"SUM(COALESCE(adopted_budget,0))"
        },
        "g100m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) > 100000000 THEN 1 ELSE 0 END)"
        },
        "g50m_le100m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) > 50000000 AND COALESCE(modified_budget,0) <= 100000000 THEN 1 ELSE 0 END)"
        },
        "g25m_le50m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) > 25000000 AND COALESCE(modified_budget,0) <= 50000000 THEN 1 ELSE 0 END)"
        },
        "g10m_le25m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) > 10000000 AND COALESCE(modified_budget,0) <= 25000000 THEN 1 ELSE 0 END)"
        },
        "ge1m_le10m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) >= 1000000 AND COALESCE(modified_budget,0) <= 10000000 THEN 1 ELSE 0 END)"
        },
        "less1m_count": {
          "function": "SUM(CASE WHEN COALESCE(modified_budget,0) < 1000000 THEN 1 ELSE 0 END)"
        },
        "committed_g100m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) > 100000000 THEN 1 ELSE 0 END)"
        },
        "committed_g50m_le100m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) > 50000000 AND COALESCE(committed,0) <= 100000000 THEN 1 ELSE 0 END)"
        },
        "committed_g25m_le50m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) > 25000000 AND COALESCE(committed,0) <= 50000000 THEN 1 ELSE 0 END)"
        },
        "committed_g10m_le25m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) > 10000000 AND COALESCE(committed,0) <= 25000000 THEN 1 ELSE 0 END)"
        },
        "committed_ge1m_le10m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) >= 1000000 AND COALESCE(committed,0) <= 10000000 THEN 1 ELSE 0 END)"
        },
        "committed_less1m_count": {
          "function": "SUM(CASE WHEN COALESCE(committed,0) < 1000000 THEN 1 ELSE 0 END)"
        }
      }
    }
  }
}
