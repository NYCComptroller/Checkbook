<?php
/**
* This file is part of the Checkbook NYC financial transparency software.
* 
* Copyright (C) 2012, 2013 New York City
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as
* published by the Free Software Foundation, either version 3 of the
* License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/



/**
 * Implements hook_menu().
 */
function checkbook_api_menu() {
  $items['api'] = array(
    'title' => 'Checkbook API',
    'page callback' => 'checkbook_api',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['generate_ref_data'] = array(
    'title' => 'Generate Reference Data',
    'page callback' => 'checkbook_api_generate_ref_data',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['ref_code_list/%'] = array(
    'title' => 'Load Reference Data',
    'page callback' => 'checkbook_api_load_ref_data',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 *
 */
function checkbook_api() {

  $document = new DOMDocument();
  $document->preserveWhiteSpace = FALSE;
  $document->load('php://input');

  $search_criteria = new XMLSearchCriteria($document);

  try {
    $checkbook_api = new CheckBookAPI($search_criteria);
  }
  catch (Exception $e) {
    echo $e->getMessage();
    return;
  }
  drupal_add_http_header("Content-Type", "application/xml");
  if (isset($checkbook_api)) {
    if ($checkbook_api->validateRequest()) {   
      echo $checkbook_api->getData();      
    }
    else {
    	echo $checkbook_api->getErrorResponse();
    }
  }
}

/**
 * @param $code_list_name
 */
function checkbook_api_load_ref_data($code_list_name) {
  global $conf;

  $file_name = $code_list_name . '_code_list.csv';
  $file = variable_get('file_public_path', 'sites/default/files') . '/' . $conf['check_book']['data_feeds']['output_file_dir'] . '/' . $conf['check_book']['ref_data_dir'] . '/' . $file_name;

  drupal_add_http_header("Content-Type", "text/csv");
  drupal_add_http_header("Content-Disposition", "attachment; filename=$file_name");
  drupal_add_http_header("Pragma", "cache");
  drupal_add_http_header("Expires", "-1");

  if (is_file($file)) {
    $data = file_get_contents($file);
    drupal_add_http_header("Content-Length", strlen($data));
    echo $data;
  }
  else {
    echo "Data is not generated. Please contact support team.";
  }
}

/**
 *
 */
function checkbook_api_generate_ref_data() {
  include_once 'script/generateRefData.php';
}

/**
 * @param $data_set
 * @param $parameters
 * @param $criteria
 */
function checkbook_api_adjustContractParameterFilters(&$data_set, &$parameters, $criteria,$datasource = null) {
  $contract_status = $criteria['value']['status'];
  $category = $criteria['value']['category'];
  $type_of_data = ($datasource == 'checkbook_oge') ? "contracts_oge":"";
  switch ($contract_status) {
    case "registered":
    case "active":
      $data_controller_instance = data_controller_get_operator_factory_instance();

      // Either Fiscal or Calendar year is provided:
      $fy = checkbook_api_change_datasource($datasource,$parameters['fiscal_year@checkbook:contracts_coa_aggregates']);
      if (isset($fy)) {
        // Adjust dataset:
        if (isset($criteria['value']['calendar_year'])) {
          $data_set->name = checkbook_api_change_datasource($datasource,'checkbook:agreement_snapshot_cy');
          if(strtolower($type_of_data) == 'contracts_oge')
                $parameters[checkbook_api_change_datasource($datasource,'type_of_year')] = 'C';
          else
                $parameters[checkbook_api_change_datasource($datasource,'type_of_year@checkbook:contracts_coa_aggregates')] = 'C';
        }
        else {
          if(strtolower($type_of_data) == 'contracts_oge')
            $parameters[checkbook_api_change_datasource($datasource,'type_of_year')] = 'B';
          else
            $parameters[checkbook_api_change_datasource($datasource,'type_of_year@checkbook:contracts_coa_aggregates')] = 'B';
        }

        if ($contract_status == 'registered') {
            if(strtolower($type_of_data) == 'contracts_oge')
                $parameters[checkbook_api_change_datasource($datasource,'status_flag')] = 'R';
            else
                $parameters[checkbook_api_change_datasource($datasource,'status_flag@checkbook:contracts_coa_aggregates')] = 'R';
        }
        else {
          if ($contract_status == 'active') {
              if(strtolower($type_of_data) == 'contracts_oge')
                    $parameters[checkbook_api_change_datasource($datasource,'status_flag')] = 'A';
              else
                    $parameters[checkbook_api_change_datasource($datasource,'status_flag@checkbook:contracts_coa_aggregates')] = 'A';
          }
        }

        // Adjust year:
        if(strtolower($type_of_data) == 'contracts_oge'){
            $req_year = $parameters[checkbook_api_change_datasource($datasource,'fiscal_year')];
            $req_years = _checkbook_project_querydataset('checkbook_oge:year',array('year_id','year_value'),array('year_value'=>$req_year));
            $req_year = $req_years[0]['year_id'];
        }
        else{
            $req_year = $parameters[checkbook_api_change_datasource($datasource,'fiscal_year@checkbook:contracts_coa_aggregates')];
        }
        if (isset($req_year)) {
          $ge_condition = $data_controller_instance->initiateHandler(GreaterOrEqualOperatorHandler::$OPERATOR__NAME, $req_year);
          $le_condition = $data_controller_instance->initiateHandler(LessOrEqualOperatorHandler::$OPERATOR__NAME, $req_year);
          if(strtolower($type_of_data) == 'contracts_oge'){
              $parameters['starting_year_id'] = $le_condition;
              $parameters['ending_year_id'] = $ge_condition;
          }else{
              $parameters['starting_year'] = $le_condition;
              $parameters['ending_year'] = $ge_condition;
          }
          if ($contract_status == 'registered') {
                if(strtolower($type_of_data) == 'contracts_oge')
                    $parameters['registered_year_id'] = $req_year;
                else
                    $parameters['registered_year'] = $req_year;
          }
          else {
            if ($contract_status == 'active') {
              if(strtolower($type_of_data) == 'contracts_oge'){
                  $parameters['effective_begin_year_id'] = $le_condition;
                  $parameters['effective_end_year_id'] = $ge_condition;
              }
              else{
                  $parameters['effective_begin_year'] = $le_condition;
                  $parameters['effective_end_year'] = $ge_condition;
              }
            }
          }
        }
      }
      else {
        // All years:
        $parameters['latest_flag'] = 'Y';

        /*if($contractStatus =='active'){
          $leCondition = $data_controller_instance->initiateHandler(LessOrEqualOperatorHandler::$OPERATOR__NAME, array(date('Y-m-d')));
          $parameters['effective_begin_date'] = $leCondition;
        }*/
      }
      break;

    case "pending":
      // $parameters['latest_flag'] = 'Y';
      break;

    default:
      break;
  }
  if ($category == 'revenue') {
    $parameters[checkbook_api_change_datasource($datasource,'document_code@checkbook:ref_document_code')] = 'RCT1';
  }
  else {
    if ($category == 'expense') {    	
      $parameters[checkbook_api_change_datasource($datasource,'document_code@checkbook:ref_document_code')] = array(
        "MMA1",
        "MA1",
        "CT1",
        "DO1",
        "CTA1",
        "MAR",
        "CTR",
      );
    }
  }
}


function checkbook_api_change_datasource($datasource,$param){
	if($datasource != null){
		return str_replace("checkbook:", $datasource . ":",$param);
	}else{
		return $param;
	}
}

