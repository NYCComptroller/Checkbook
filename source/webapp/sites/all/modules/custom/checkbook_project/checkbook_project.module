<?php
/**
* This file is part of the Checkbook NYC financial transparency software.
*
* Copyright (C) 2012, 2013 New York City
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as
* published by the Free Software Foundation, either version 3 of the
* License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
*
* You should have received a copy of the GNU Affero General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * Drupal Hook to alter menu items generated to add specific   ...
 * @param $path
 * @param $options
 * @param $original_path
 * @return boolean
 */
function checkbook_project_url_outbound_alter(&$path, &$options, $original_path){

    if(strpos($path, 'admin') === 0) {
		return true;
	}
	if(strpos($path, 'ctools') === 0) {
		return true;
	}
	if(($path == 'spending_landing')  || ($path == 'spending/agencies')
        || ($path == 'spending/vendors') || ($path == 'mwbe_agency_grading')
        || ($path == 'mwbe_agency_grading/sub_vendor_data') || ($path == 'payroll')  || ($path == 'payroll/agency/%')){

        $path .="/yeartype/B/year/".CheckbookDateUtil::getCurrentFiscalYearId();
		return true;
	}
	elseif(($path == 'budget') || ($path == 'revenue')){
		$path .="/year/".CheckbookDateUtil::getCurrentFiscalYearId();
	}
	elseif($path == 'contracts_landing'){
	  $path .="/status/A/yeartype/B/year/".CheckbookDateUtil::getCurrentFiscalYearId();
	  return true;
	}

}


/**
 * Define new toklen type for checkbook
 * @return multitype:NULL
 */
function checkbook_project_token_info(){
	$info['types']['custom_checkbook'] = array(
    'name' => t('Custom Checkbook Tokens'),
    'description' => t('Custom Checkbook Tokens'),
  );

  $info['tokens']['custom_checkbook']['year_string'] = array(
    'name' => t('Year String'),
    'description' => t("The Year String for URL"),
  );

  return $info;
}


/**
 * Define replacement for checkbook tokens
 * @param $type
 * @param $tokens
 * @param array $data
 * @param array $options
 * @return array
 */
function checkbook_project_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if(isset($tokens['year_string'])) {
    $replacements[$tokens['year_string']] = substr(_checkbook_project_get_year_url_param_string(), 1);
  }
  return $replacements;
}

/**
 * Implementation of hook_menu.. USed for dsiplaying popups.
 * @return multitype:string boolean multitype:number
 */
function checkbook_project_menu(){
    $items['gridview/popup/node/%node'] = array(
        'page callback' => '_checkbook_project_grid_view_popup',
        'page arguments' => array(3),
        'access callback' => true,
        'type'=>MENU_CALLBACK
    );
    $items['gridview/popup/widget/%widget'] = array(
    		'page callback' => '_checkbook_project_grid_view_widget_popup',
    		'page arguments' => array(3),
    		'access callback' => true,
    		'type'=>MENU_CALLBACK
    );
    return $items;
}

/**
 * Hook to load custom project specific utility functions during bootstrap..
 */
function checkbook_project_init(){
	require_once(drupal_get_path("module","checkbook_project") . "/includes/checkbook_database.inc");
	require_once(drupal_get_path("module","checkbook_project") . "/includes/checkbook_datafeeds.inc");
	require_once(drupal_get_path("module","checkbook_project") . "/includes/checkbook_date.inc");
	require_once(drupal_get_path("module","checkbook_project") . "/includes/checkbook_project.inc");
	require_once(drupal_get_path("module","checkbook_project") . "/includes/checkbook_widget_process.inc");
}



