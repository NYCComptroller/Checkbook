{
    "widgetType": "data_tables",
    "widgetSubType":"ajaxSimple",
    "no_results_content":"No Results Found",
    "defaultParameters":{"type_of_year":"B","spending_category_id":null},
    "cleanURLParameters":["year","agency","yeartype","calyear","vendor","category","agid","magid","mwbe","industry"],
    "urlParamMap":{"year":"year_id","agency":"agency_id","yeartype":"type_of_year","calyear":"year_id","vendor":"vendor_id","category":"spending_category_id","agid":"agreement_id.agreement_id","magid":"agreement_id.agreement_id","mwbe":"minority_type_id","industry":"industry_type_id"},
    "dataset": "checkbook:contracts_spending",
        "preProcessConfiguration":"
            $node->is_mwbe = _checkbook_check_is_mwbe_page();
            if($node->is_mwbe) $node->widgetConfig->dataset = 'checkbook:contracts_mwbe_spending';
        ",
    "noDataInitialLoad":true,
    "columns": ["yeartype.yeartype","check_amount_sum","total_contract_amount_sum","document_id.document_id","vendor.vendor","vendor.vendor.legal_name","contract_purpose.contract_purpose","agency.agency","agency.agency.agency_name","year.year","agreement_id.agreement_id"],
    "limit":5,
    "enableExpand":true,
    "getTotalDataCount":true,
    "disableViewAll":true,
    "header":"
        $node->widgetConfig->getData=false;
        load_widget_data($node);
        if($node->totalDataCount > 4) $count = '<span class=\"hideOnExpand\">5 </span>';
        $header='<div class=\"tableHeader\"><h2>Top ' .  $count . 'Contracts</h2><span class=\"contCount\"> Number of Contracts:  ' . number_format($node->totalDataCount) . '</span></div>';
        return $header;
    ",
    "footer":"
        $url = SpendingUtil::getSpendingFooterUrl($node);
        $footer = '';
        if($node->totalDataCount > 0)
             $footer = \"<a class='show-details bottomContainerReload' href='$url'>Details >></a>\";
        else
              $footer = \"<a class='show-details bottomContainerReload' href='$url' style='display:none;'>Details >></a>\";
        return $footer;
    ",
    "derivedColumns": {
        "purpose_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['contract_purpose_contract_purpose'],40)"
        },
        "agency_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agency_agency_agency_name'],40)"
        },
        "agency_name_link": {
            "type": "expression2",
            "expression": "'<a href=\"' . SpendingUtil::getAgencyNameLinkUrl($node,$row) . '\">' . $row[agency_name_formatted] . '</a>'"
        },
        "vendor_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['vendor_vendor_legal_name'],40)"
        },
        "vendor_name_link": {
            "type": "expression2",
            "expression": "'<a href=\"' . SpendingUtil::getVendorNameLinkUrl($node,$row) . '\">' . $row[vendor_name_formatted] . '</a>'"
        } ,
        "formatted_check_amount_sum": {
            "type": "expression2",
            "expression": " custom_number_formatter_format($row['check_amount_sum'],2,'$')"
        },
        "formatted_total_contract_amount_sum": {
            "type": "expression2",
            "expression": "custom_number_formatter_format($row['total_contract_amount_sum'],2,'$')"
        },
        "contract_amount_link":{
            "type":"expression2",
            "expression": "'<a class=\"bottomContainerReload\" href=\"' . SpendingUtil::getCheckAmountLinkUrl($node,$row) . '\">' . $row['formatted_check_amount_sum'] . '</a>'"
        },
        "contract_number_link":{
            "type":"expression2",
            "expression":"'<a class=\"new_window\" href=\"' . SpendingUtil::getContractNumberLinkUrl($node,$row) . '\">'  . $row[document_id_document_id] . '</a>'"
        }
    },
    "adjustParameters":"
        if(!$node->is_mwbe) {
            unset($parameters['minority_type_id']);
            unset($parameters['industry_type_id']);
        }

        return $parameters;
    ",
    "summaryView":{
        "template":"spending_contract_summary",
        "templateTitleEval":"
            $catName = RequestUtil::getSpendingCategoryName();
            $mwbe_title = _checkbook_check_is_mwbe_page() ? 'M/WBE ' : '';
            return ($mwbe_title . 'Contracts ' . $catName . ' Transactions');
        "
    },
    "WidgetTitleEval":"
        $catName = RequestUtil::getSpendingCategoryName();
        $mwbe_title = _checkbook_check_is_mwbe_page() ? 'M/WBE ' : '';
        return ($mwbe_title . 'Contracts ' . $catName . ' Transactions');
    ",
    "table_title":"",
    "table_columns": [
        {"labelAlias": "contract_id","column": "contract_number_link"},
        {"labelAlias": "contract_purpose","column": "purpose_formatted"},
        {"labelAlias": "contract_agency","column": "agency_name_link","sortSourceColumn":"agency.agency.agency_name"},
        {"labelAlias": "prime_vendor","column": "vendor_name_link","sortSourceColumn":"vendor.vendor.legal_name"},
        {"labelAlias": "ytd_spending","column": "contract_amount_link","sortSourceColumn":"check_amount_sum"},
        {"labelAlias": "total_contract_amount","column": "formatted_total_contract_amount_sum","sortSourceColumn":"total_contract_amount_sum"},
        {"label": "","column": ""}
    ],
    "dataTableOptions":{
        "aoColumns": [
              {"bSortable":false,"sClass":"text","sWidth":"160px"},
              {"bSortable":false,"sClass":"text","sWidth":"170px"},
              {"bSortable":false,"sClass":"text","sWidth":"170px"},
              {"bSortable":false,"sClass":"text","sWidth":"150px"},
              {"sClass":"number","asSorting": ["desc","asc"], "sWidth":"109px"},
              {"sClass":"number","asSorting": ["desc","asc" ],"sWidth":"166px"},
              {"bSortable":false,"sWidth":"15px"}
            ],
        "bServerSide": true,
        "bFilter": false,
        "bPaginate": false,
        "bProcessing":true,
        "bLengthChange": false,
        "bInfo": false,
        "bAutoWidth": false,
        "aaSorting": [[ 4, "desc" ]],
        "fnServerParams": "##function ( aoData ) {
                   reloadExpandCollapseWidget(this,aoData);
        }##",
        "oLanguage":{
            "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        }
    }
}