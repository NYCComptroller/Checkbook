{
"widgetType": "highcharts",
"widgetDatahandler": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateWidgetGridViewLink($node);
       return $header;
    ",
 "gridConfig":{
        "template":"chart_grid_view",
        "domain":"spending",
        "html_class":"chart-grid-view-table three-columns",
        "sortColumn":1,
        "table_columns": [
            {
                  "labelAlias": "Agency",
                  "columnType": "text"
             },
             {
                  "labelAlias": "M/WBE Spending",
                  "columnType": "number",
                  "formatType": "amount"
             }
        ]
},
"no_results_content":"No Results Found",
"defaultParameters":{"type_of_year":"B"},
"cleanURLParameters":["yeartype","agency","vendor","subvendor","category","year","industry","mwbe"],
"urlParamMap":{"year":"year_id","yeartype":"type_of_year","agency":"agency_id","vendor":"prime_vendor_id","subvendor":"vendor_id","category":"spending_category_id","industry":"industry_type_id","mwbe":"minority_type_id"},
"chartTitle":"Top Ten Agencies by M/WBE Spending",
"widgetDataLoader":"

    $where_filters = array();
    foreach($node->widgetConfig->requestParams as $param=>$value){
        $where_filters[] = _widget_build_sql_condition(' a1.' . $param, $value);
    }

    if(count($where_filters) > 0){
        $where_filter = ' where ' . implode(' and ' , $where_filters);
    }

    $mwbe_filter = _getRequestParamValue('mwbe');
    $sql = 'select  agency_name , a1.agency_id,
	SUM(
       CASE WHEN minority_type_id = 2 THEN total_spending_amount
            WHEN minority_type_id = 3 THEN total_spending_amount
            WHEN minority_type_id = 4 THEN total_spending_amount
            WHEN minority_type_id = 5 THEN total_spending_amount
            WHEN minority_type_id = 9 THEN total_spending_amount
            ELSE 0
	END) total_mwbe
	from {aggregateon_subven_spending_coa_entities} a1
    join {ref_agency} ra on ra.agency_id =  a1.agency_id
   ' . $where_filter . '
        group by  agency_name,a1.agency_id order by agency_name
    ';

    $node->data  = _checkbook_project_execute_sql($sql);
	$node->data_merged =  $node->data;
	
",
"widgetUpdateJSONConfig":"
	
	$series_new = array();
	
	
	$mwbe_filter = _getRequestParamValue('mwbe');
	
	$amount_column = 'total_mwbe';
	
	$mwbe_filter = _getRequestParamValue('mwbe');
	if($mwbe_filter =='4~5' || $mwbe_filter =='2' || $mwbe_filter =='3' || $mwbe_filter =='9' ){	
		$node->widgetConfig->chartTitle = MappingUtil::getCurrenEhtnicityName()  . ' Spending';
		
		$node->widgetConfig->chartTitle = MappingUtil::getCurrenEhtnicityName()  . ' Top Ten Agencies Spending';
	}else{
		$node->widgetConfig->chartTitle = 'Top Ten Agencies by ' . MappingUtil::getCurrenEhtnicityName() .' Spending';
		
	}
	
	$index = 0;
	foreach($node->data_merged as $row){

        $tooltip_label =
        'Agency: ' . $row['agency_name'].  '<br/>' .
        MappingUtil::getCurrenEhtnicityName() . ' Spending: ' . custom_number_formatter_format( $row[$amount_column],2,'$').  '<br/>' 
        ;
        $node->widgetConfig->gridConfig->data[] = array(
        $row['agency_name'],
        (float)$row[$amount_column] );

        $link= CustomURLHelper::prepareUrl('spending_landing', SpendingUtil::$landingPageParams, array('expandBottomCont'=>'true'), array('agency'=>$row['agency_id']) );
			$series_new[$index]->url = $link;
	 						
			$series_new[$index]->y = (float)$row[$amount_column];
			$series_new[$index]->tooltip_label = $tooltip_label;
			
			$index += 1;
			if($index == 10){
				break;
			}
	}

	$node->widgetConfig->chartConfig->series[0]->name = 'Fiscal Years';
	$node->widgetConfig->chartConfig->series[0]->type = 'column';
	$node->widgetConfig->chartConfig->series[0]->pointWidth = 30;
	$node->widgetConfig->chartConfig->series[0]->data = $series_new;
	
	
",
"chartConfig" : {
	"colors":["#7DB7E5"],
	"chart" : {"width":750},
    "plotOptions": {
            "series": {
                "cursor": "pointer"   ,            
                "stacking": "normal",
                "dataLabels": {
                    "enabled": false
                },
                "minPointLength":3    ,
                "point": {"events": {"function": "clickEvent"}}         
            }
    },
    "xAxis": {
        "categories": [0,1,2,3,4,5,6,7,8,9],
        "labels": {"enabled": false}
    },
    "series": [
        {
            "name": "FY",
            "type": "column",
            "pointWidth": 50,
            "data": []
        }
    ],
    "title": {"text": ""},
    "yAxis": {
     	"min":0,
     	"minRange": 0.1,
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    } ,
    "legend": {
        "enabled": false       
    },
    "tooltip":{"function":"tooltipformatter"}
    }
}


<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' :
function() {return this.point.tooltip_label ;
}
##clickEvent^^"click": function(){ location.href = Drupal.settings.basePath+this.options.url;}
</function>