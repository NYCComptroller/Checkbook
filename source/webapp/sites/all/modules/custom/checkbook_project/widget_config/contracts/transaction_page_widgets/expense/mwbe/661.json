{
    "widgetType":"phpparser",
    "parentNid":656,
    "no_results_content":"No Results Found",
    "defaultParameters":{
        "all_cum_spend.all_cum_spend.status_flag":"A"
    },
    "limit":10,
    "startWith":0,
    "autocomplete":false,
    "filterName":"Amount",
    "urlParameterName":"curamtr",
    "urlParameterType":"rangeid",
    "autocompleteID":"fCurAmount",
    "urlParamMap":{
        "doctype":"document_code.document_code.document_code",
        "contstatus":"all_cum_spend.all_cum_spend.status_flag",
        "calyear":"all_cum_spend.all_cum_spend.fiscal_year_id",
        "year":"all_cum_spend.all_cum_spend.fiscal_year_id",
        "yeartype":"all_cum_spend.all_cum_spend.type_of_year",
        "vendor":"all_cum_spend.all_cum_spend.vendor_id",
        "mwbe_vendor":"all_cum_spend.all_cum_spend.vendor_id",
        "mwbe":"all_cum_spend.all_cum_spend.minority_type_id"
    }  ,
    "columns":["g100m_count", "g50m_le100m_count", "g25m_le50m_count", "g10m_le25m_count", "ge1m_le10m_count", "less1m_count"],
    "orderBy":"",
    "adjustParameters":"
if(isset($parameters['vendor_type'])){
$parameters['vendor_type'] = MappingUtil::getVendorTypeValue($parameters['vendor_type']);
}

$subvendor = _getRequestParamValue('subvendor');
$mwbe = _getRequestParamValue('mwbe');
if($subvendor) $parameters['is_prime_or_sub'] = 'S';
else if($mwbe) $parameters['is_prime_or_sub'] = 'P';

if(function_exists('_checkbook_project_adjustContractParameterFilters')){
_checkbook_project_adjustContractParameterFilters($node,$parameters,'active_registered');
}

if(function_exists('_checkbook_project_applyParameterFilters')){
$adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
return $adjustedParameters;
}
return $parameters;
",
"template":"individual_filter"
}