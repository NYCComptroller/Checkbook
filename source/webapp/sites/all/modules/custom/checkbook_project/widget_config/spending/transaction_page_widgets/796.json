{
    "widgetType": "phpparser",
    "cleanURLParameters":["agency","mcagency","agencyh","year","calyear","vendor","mcvendor","fvendor",
                          "expcategory","category","checkamtr","dept","contnum","checkamt","chkdate",
                          "fundcls","bdgcodenm","captprj","expdoc","vendornm","deptnm","expcategorynm",
                          "syear","scalyear","magid","agid","cvendor","cagency","awdmethod","status","csize",
                          "cindustry","expcategorycode","month","scomline",
                          "comline","comline_exact","budname_exact","budname","entcontnum_exact","entcontnum","industry","mwbe","subvendor","vendortype"
    ],
    "urlParamMap":{
        "year":"check_eft_issued_nyc_year_id","calyear":"calendar_fiscal_year_id","agency":"agency_id",
        "mcagency":"master_child_contract_agency_id","agencyh":"agency_history_id","vendor":"prime_vendor_id","fvendor":"prime_vendor_id",
        "mcvendor":"master_child_contract_vendor_id","expcategory":"expenditure_object_id",
        "checkamtr":"check_amount","dept":"department_id","contnum":"reference_document_number",
        "checkamt":"check_amount","chkdate":"check_eft_issued_date","fundcls":"fund_class_id",
        "bdgcodenm":"budget_name","captprj":"reporting_code","category":"spending_category_id",
        "expdoc":"disbursement_number","vendornm":"vendor_name","deptnm":"department_name",
        "expcategorynm":"expenditure_object_name","syear":"check_eft_issued_nyc_year_id",
        "scalyear":"calendar_fiscal_year_id","magid":"master_agreement_id","agid":"agreement_id",
        "cvendor":"ctx.ctx.vendor_id","cagency":"ctx.ctx.document_agency_id","awdmethod":"ctx.ctx.award_method_id",
        "status":"ctx.ctx.status_flag","csize":"ctx.ctx.award_size_id","cindustry":"ctx.ctx.industry_type_id",
        "expcategorycode":"expenditure_object_code", "month":"check_eft_issued_cal_month_id",
        "entcontnum_exact":"oge_contract_number",
        "entcontnum":"oge_contract_number",
        "comline_exact":"agreement_commodity_line_number",
        "comline":"agreement_commodity_line_number",
        "scomline":"agreement_commodity_line_number",
        "budname_exact":"oge_budget_name",
        "budname":"oge_budget_name",
        "mwbe":"minority_type_id",
        "industry":"industry_type_id",
        "subvendor":"vendor_id","vendortype":"vendor_type"
    },
    "paramTypeConfig":{"checkamtr":"rangeid","checkamt":"range","chkdate":"range","captprj":"like","vendornm":"like",
        "contnum":"like","bdgcodenm":"like","expdoc":"like","syear":"le","scalyear":"le",
        "budname":"like","comline":"like","entcontnum":"like","scomline":"le",
        "entcontnum_exact":"eqignorecase","comline_exact":"eqignorecase","budname_exact":"eqignorecase"},
    "dataset": "checkbook:spending_transactions_all",
    "preProcessConfiguration":"
        $template = '';
        $smnid = _getRequestParamValue('smnid');
        switch($smnid) {
            case 22:
                $template = 'spending_exp_category_summary';
            break;
            case 23:
            case 501:
                $template = 'spending_agency_summary';
            break;
            case 26:
                $template = 'spending_vendor_summary';
            break;
            case 20:
                $template = 'spending_contract_summary';
            break;
            case 29:
                $template = 'spending_dept_summary';
            break;
        }
        $node->widgetConfig->summaryView->template = $template;
        $node->widgetConfig->template = $template;
    ",
    "columns": [
        "agency.agency.agency_name",
        "expenditure_object.expenditure_object.original_expenditure_object_name",
        "vendor.vendor.legal_name",
        "department.department.department_name",
        "document_id.document_id",
    //    "purpose",
        "check_amount_sum"
    ],
    "derivedColumns": {
        "formatted_check_amount_sum": {
            "type": "expression2",
            "expression": "custom_number_formatter_format($row['check_amount_sum'],2,'$')"
        },
        "formatted_total_contract_amount_sum": {
            "type": "expression2",
            "expression": "custom_number_formatter_format($row['check_amount'],2,'$')"
        }
    },
    "adjustParameters":"
        $cat = $parameters['spending_category_id'];
        if(isset($parameters['ctx.ctx.vendor_id'])  ||  isset($parameters['ctx.ctx.document_agency_id'])  ||  isset($parameters['ctx.ctx.award_method_id'])  || isset($parameters['ctx.ctx.award_size_id'])  ||  isset($parameters['ctx.ctx.industry_type_id']) ){
            $year = $parameters['check_eft_issued_nyc_year_id'];
            $calyear = $parameters['calendar_fiscal_year_id'];
            if(isset($year)){
                $parameters['ctx.ctx.fiscal_year_id'] = $year;
                $parameters['ctx.ctx.type_of_year'] = 'B';
            }else if(isset($calyear )){
                $parameters['ctx.ctx.fiscal_year_id'] = $calyear ;
                $parameters['ctx.ctx.type_of_year'] = 'C';
            }
        }

        if(function_exists('_checkbook_project_adjust_mwbe_spending_parameter_filters')){
            $parameters = _checkbook_project_adjust_mwbe_spending_parameter_filters($node, $parameters);
        }

        $adjustedParameters = $parameters;
        if(function_exists('_checkbook_project_applyParameterFilters')){
              $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        return $adjustedParameters;
    "
}