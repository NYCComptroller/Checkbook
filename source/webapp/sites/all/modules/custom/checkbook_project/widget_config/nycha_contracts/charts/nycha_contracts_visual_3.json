{
  "widgetType": "highcharts",
  "widgetDatahandler": "highcharts",
  "no_results_content":"No Results Found",
  "header":"
  $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
  $header .= ChartUtil::generateWidgetGridViewLink($node);
  return $header;
  ",
  "gridConfig":{
    "template":"chart_grid_view",
    "domain":"contracts",
    "html_class":"chart-grid-view-table three-columns",
    "sortColumn":0,
    "table_columns": [
      {
        "labelAlias": "Year",
        "columnType": "text"
      },
      {
        "labelAlias": "Agreement<br>Type",
        "columnType": "number"
      },
      {
        "labelAlias": "Number of <br>Contracts",
        "columnType": "number"
      }
    ]
  },
  "no_results_content":"No Results Found",
  "cleanURLParameters":["awdmethod","vendor","csize","industry","year"],
  "urlParamMap":{"year":"fiscal_year_id","awdmethod":"award_method_id","vendor":"vendor_id", "csize":"award_size_id","industry":"industry_type_id"},
  "widgetPreprocessJSON":"
  if(preg_match('/pending/',$_GET['q'])){
  $node->widgetConfig->urlParamMap = $node->widgetConfig->urlParamMapPending;
  $node->widgetConfig->defaultParameters = $node->widgetConfig->defaultParametersPending;
  $node->widgetConfig->cleanURLParameters = $node->widgetConfig->cleanURLParametersPending;
}",

"chartTitle":"Year Comparison by Agreement Types",
"widgetDataLoader":"
      $where_filters = array();
      $url = drupal_get_path_alias($_GET['q']);
      $year_id = RequestUtil::getRequestKeyValueFromURL('year', $url);
      $year_value = _getYearValueFromID($year_id);
      foreach($node->widgetConfig->requestParams as $param=>$value){
          if ($param == 'fiscal_year_id'){}
          else {$where_filters[] = _widget_build_sql_condition( $param, $value);}
      }
      if(count($where_filters) > 0){
        $where_filter = ' WHERE ' . implode(' AND ' , $where_filters);
      }
      $datasource = RequestUtilities::getRequestParamValue('datasource');
      $sql = 'select agreement_type_code, year,ct from
        (select agreement_type_code,(year+1899) as year,count(distinct contract_id) as ct
        from (select agreement_type_code,contract_id,generate_series(agreement_start_year_id,agreement_end_year_id) as year
        from all_agreement_transactions_by_release_by_line  '. $where_filter .')a
        group by agreement_type_code,year) b where year between 2010 AND '.$year_value;
      $node->data  = _checkbook_project_execute_sql($sql,'main',$datasource);
",
"widgetUpdateJSONConfig":"
      $series_previous_temp = array(array());
      $url = drupal_get_path_alias($_GET['q']);
      $year_id = RequestUtil::getRequestKeyValueFromURL('year', $url);
      $datasource = RequestUtil::getRequestKeyValueFromURL('datasource', $url);
      $sql = 'select year_value from ref_year where year_id between 111 and '.$year_id.' order by year_value asc';
      $categories = _checkbook_project_execute_sql($sql,'main',$datasource);
      $codes = array('PO','BA','PA');
      foreach($node->data as $row){
      $series_previous_temp[$row['agreement_type_code']][$row['year']] = (float)$row['ct'];
      foreach($categories as $category){
        if ($row['year'] == $category['year_value']){
        $node->widgetConfig->gridConfig->data[] = array($row['year'],$row['agreement_type_code'],$row['ct']);
      }
      $node->widgetConfig->chartConfig->xAxis->categories[] = $category['year_value'];
      }
      }
      $series_previous = array();
      foreach($codes as $code){
      $prev_series_obj = new stdClass();
        foreach($categories as $category){
           $series_previous[] = $series_previous_temp[$code][$category['year_value']] ;
         }
      $prev_series_obj->name = $code;
      $prev_series_obj->data = $series_previous;
      $node->widgetConfig->chartConfig->series[] = $prev_series_obj;
      unset($series_previous);
      }

",
"chartConfig" : {
"chart": {
"type": "area"
 },
  "colors":["#D78E35","#7DB7E5","#122E46"],
"legend": {"align": "left",  "verticalAlign": "bottom", "layout": "horizontal",
"padding":1, "itemMarginTop": 3, "itemMarginBottom": 3},
"xAxis":{"labels":{"enabled":"true"}},
"yAxis": {"title": {"text": ""}} ,
"tooltip": {
"split":true,
"function":"splittooltip"
},
"plotOptions": {
"area": {
"stacking": "normal",
"lineColor": "#666666",
"lineWidth": 1,
"marker": {
"lineWidth": 1,
"lineColor": "#666666"
}
}
},

"title": {"text": ""}
}
}

<function>
splittooltip^^'formatter' :
function() {
  var s = [];
  s.push(this.x);
  this.points.forEach(function(point) {
  s.push('<b>' + point.series.name + '</b>: ' +Highcharts.numberFormat(point.y, 0, '.', ',') + ' Contracts');
  });
return s;
}
</function>

