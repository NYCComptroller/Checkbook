{
  "widgetType": "highcharts",
  "widgetDatahandler": "highcharts",
  "html_class":"",
  "header":"
    $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
    $header .= ChartUtil::generateWidgetGridViewLink($node);
    return $header;
  ",
  "gridConfig":{
    "template":"chart_grid_view",
    "domain":"contracts",
    "html_class":"chart-grid-view-table three-columns",
    "sortColumn":2,
    "table_columns": [
      {
        "labelAlias": "Vendor",
        "columnType": "text"
      },
      {
        "labelAlias": "Number of Contracts",
        "columnType": "number",
        "formatType": "number"
      },
      {
        "labelAlias": "Amount",
        "columnType": "number",
        "formatType": "amount"
      }
    ]
  },
  "no_results_content":"No Results Found",
  "cleanURLParameters":["awdmethod","vendor","csize","industry","year"],
  "urlParamMap":{"year":"fiscal_year_id","awdmethod":"award_method_id","vendor":"vendor_id", "csize":"award_size_id","industry":"industry_type_id"},
  "widgetPreprocessJSON":"
    if(preg_match('/pending/',$_GET['q'])){
      $node->widgetConfig->urlParamMap = $node->widgetConfig->urlParamMapPending;
      $node->widgetConfig->defaultParameters = $node->widgetConfig->defaultParametersPending;
      $node->widgetConfig->cleanURLParameters = $node->widgetConfig->cleanURLParametersPending;
    }",
  "chartTitle":"Fiscal Year Comparison By Agreement Types",
  "widgetDataLoader":"
      $where_filters = array();
      foreach($node->widgetConfig->requestParams as $param=>$value){
        if($param == 'fiscal_year_id'){
            $where_filters[] = '('. $value . ' BETWEEN agreement_start_year_id and agreement_end_year_id )';
        }else{
          $where_filters[] = _widget_build_sql_condition( $param, $value);
        }
      }
      if(count($where_filters) > 0){
        $where_filter = ' WHERE ' . implode(' AND ' , $where_filters);
      }
      $datasource = RequestUtilities::getRequestParamValue('datasource');

$sql = ' select agreement_type_code, release_approved_year,release_approved_year_id , max(release_total_amount) as total_amount, count(contract_id) as total_contracts from all_agreement_transactions  where release_approved_year_id between  113 and 120 group by agreement_type_code,release_approved_year_id,release_approved_year limit 40';
      $node->data  = _checkbook_project_execute_sql($sql,'main',$datasource);
  ",
"widgetUpdateJSONConfig":"
$series_previous_temp = array(array());

$categories = array('2012','2013','2014','2015','2016','2017','2018','2019');
$codes = array('BA','PO','PA');
$node->widgetConfig->chartConfig->xAxis->categories = $categories;
foreach($node->data as $row){
$series_previous_temp[$row['agreement_type_code']][$row['release_approved_year']] = (float)$row['total_contracts'];
}
$series_previous = array();
foreach($codes as $code){
$prev_series_obj = new stdClass();
  foreach($categories as $category){
     $series_previous[] = $series_previous_temp[$code][$category] ;
   }
$prev_series_obj->name = $code;
$prev_series_obj->data = $series_previous;
$node->widgetConfig->chartConfig->series[] = $prev_series_obj;
unset($series_previous);
}


",
  "chartConfig" : {
"chart": {
"type": "area"
 },
  "colors":["#D78E35","#7DB7E5","#122E46"],
"legend": {
"enabled": "true",
"align": "left",
"verticalAlign": "bottom",
"floating": "true",
"layout": "horizontal"
},

"tooltip": {
"split": "true",
"valueSuffix": " Contracts"
},
"plotOptions": {
"area": {
"stacking": "normal",
"lineColor": "#666666",
"lineWidth": 1,
"marker": {
"lineWidth": 1,
"lineColor": "#666666"
}
}
},

"title": {"text": ""}
}
}



