{
    "widgetType":"data_tables",
    "widgetSubType":"dataTableList",
    "stickyHeader":true,
    "cleanURLParameters":[
        "subvendor","vendortype","mwbe","doctype","contstatus","year","calyear","agency","vendor","curamtr","vendorcode","vendornm","vendornm_exact","contdesc","agrmnttype",
        "agencyh","contnum","contnum_exact","aptpin","pin","awdmethod","curamt","startdate","enddate","regdate","cindustry","csize","modamt","subcontstatus","subvendorstatus"
    ],
    "urlParamMap":{
        "agrmnttype":"agreement_type_id",
        "mwbe":"minority_type_id",
        "agency":"agency_id",
        "fvendor":"vendor_id",
        "vendor":"vendor_id",
        "vendorcode":"prime_sub_vendor_code",
        "vendornm_exact":"vendor_name",
        "vendornm":"vendor_name",
        "vendortype":"prime_sub_vendor_code_by_type",
        "curamtr":"maximum_contract_amount",
        "subvendor":"vendor_id",
        "contdesc":"description",
        "agencyh":"agency_history_id",
        "aptpin":"brd_awd_no",
        "pin":"tracking_number",
        "awdmethod":"award_method_id",
        "curamt":"maximum_contract_amount",
        "startdate":"effective_begin_date",
        "enddate":"effective_end_date",
        "regdate":"registered_date",
        "cindustry":"industry_type_id",
        "csize":"award_size_id",
        "modamt":"dollar_difference",
        "subcontstatus":"scntrc_status",
        "contstatus":"status_flag",
        "doctype":"document_code",
        "subvendorstatus":"aprv_sta",
        "contnum":"contract_number",
        "contnum_exact":"contract_number",
        "year":"year"
    },
    "allowRequestParams":["smnid","doctype"],
    "paramTypeConfig":{"vendornm_exact":"eqignorecase","curamtr":"rangeid","vendornm":"like","contdesc":"contains","contnum":"like","contnum_exact":"eqignorecase","aptpin":"like","pin":"like","curamt":"range",
        "startdate":"range","enddate":"range","regdate":"range","modamt":"ne"},
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "getTotalDataCount":true,
    "limit":"35",
    "noDataInitialLoad":true,
    "html_class":"initiative-table",
    "no_results_content":"No Results Found",
    "dataset":"checkbook:all_agreement_transactions_by_prime_vendor",
    "uniqueSortColumn":"agreement_id",
    "columns": [
        "agreement_id",
        "contract_number",
        "contract_original_agreement_id",
        "original_contract_amount",
        "agreement_type_name",
        "sub_contract_id",
        "master_agreement_yn",
        "master_contract_number",
        "master_agreement_id",
        "has_children",
        "has_mwbe_children",
        "document_version",
        "maximum_contract_amount",
        "dollar_difference",
        "percent_difference",
        "description",
        "scntrc_status",
        "scntrc_status_name",
        "prime_vendor_id",
        "prime_vendor_name",
        "prime_minority_type_id",
        "prime_minority_type_name",
        "sub_vendor_id",
        "sub_vendor_name",
        "sub_minority_type_id",
        "sub_minority_type_name",
        "aprv_sta",
        "aprv_sta_name",
        "agency_id",
        "agency_name",
        "award_method_name",
        "industry_type_name",
        "expenditure_object_names",
        "effective_begin_date",
        "effective_end_date",
        "registered_date",
        "tracking_number",
        "brd_awd_no",
        "document_code",
        "original_agreement_id",
        "rfed_amount"
    ],
    "preProcessConfiguration":"
        $doctype = _getRequestParamValue('doctype');
        $doctypes = isset($doctype) ? explode('~', $doctype) : array();
        $is_master_agreement = in_array('MA1', $doctypes) || in_array('MMA1', $doctypes);
        $node->is_master_agreement = $is_master_agreement;
        
        $smnid = $doctype = _getRequestParamValue('smnid');
        $node->show_difference = ($smnid == 480 || $smnid == 366 || $smnid == 722);
        
    ",
    "caption":"",
    "derivedColumns": {
        "child_contrats_link":{
            "type":"expression2",
            "expression":"ContractURLHelper::expenseContractsExpandLink($row, $node)"
        },
        "contract_link": {
            "type":"expression2",
            "expression":"ContractURLHelper::expenseContractsLink($row, $node, false, $row['contract_original_agreement_id'])"
        },
        "parent_contract_link": {
            "type":"expression2",
            "expression":"(($row['master_agreement_yn'] == 'Y') ? 'N/A' : ContractURLHelper::prepareExpenseContractLink($row, $node, true, $row['contract_original_agreement_id']))"
        },
        "parent_contract_export":{
            "type":"expression2",
            "expression":"(!($row['master_contract_number']) ? 'N/A' : $row['master_contract_number'])"
        },
        "formatted_original_amount": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['original_contract_amount'])"
        },
        "formatted_current_amount": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['maximum_contract_amount'])"
        },
        "formatted_spent_to_date": {
            "type":"expression2",
            "expression":"
            '<a href=\"/spending/transactions'
            .  ($row['master_agreement_yn'] == 'Y' ? '/magid/' : '/agid/') . $row['original_agreement_id']
            .  _checkbook_project_get_url_param_string(\"dashboard\") . _checkbook_project_get_url_param_string(\"mwbe\")
            .    '/year/'. _getFiscalYearID() .'/syear/'. _getFiscalYearID()
            .  '/newwindow\" class=\"new_window\">'. custom_number_formatter_basic_format($row['rfed_amount']) . '</a>'
            "
        },
        "spent_to_date_export": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['rfed_amount'])"
        },
        "agency_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['agency_name'],26)"
        },
        "agency_name_link": {
            "type":"expression2",
            "expression":" '<a href=\"/contracts_landing'
            ._checkbook_append_url_params()
            .  '/year/'._getFiscalYearID()
            .  '/yeartype/B'
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            . '/agency/' . $row['agency_id']
            .  '?expandBottomCont=true\">'. $row['agency_formatted'] . '</a>'  "
        },
        "purpose_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['description'],36)"
        },
        "expense_cat_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['expenditure_object_names'],36)"
        },
        "expense_cat": {
            "type":"expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expense_cat_formatted']"
        },
        "expense_cat_export": {
            "type":"expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expenditure_object_names']"
        },
        "award_method_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['award_method_name'],36)"
        },
        "contract_type_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['agreement_type_name'],36)"
        },
        "industry_name_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['industry_type_name'],36)"
        },
        "formatted_dollar_diff": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['dollar_difference'])"
        },
        "formatted_percent_diff": {
            "type":"expression2",
            "expression":"round($row['percent_difference'],2) . '%'"
        },
        "sub_contract_reference_id":{
            "type":"expression2",
            "expression":"(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2')))  ? (in_array($row['sub_contract_id'], array(NULL,'')) && $row['scntrc_status'] == 2) ? 'NOT PROVIDED' : (in_array($row['sub_contract_id'], array(NULL, '')) ? 'N/A' : $row['sub_contract_id']) : 'N/A'"
        },
        "prime_vendor_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['prime_vendor_name'],24)"
        },
        "prime_vendor_name_link": {
            "type": "expression2",
            "expression": " '<a href=\"/contracts_landing'
            . ContractUtil::get_contracts_vendor_link_by_mwbe_category($row)
            . '?expandBottomCont=true\">'. $row['prime_vendor_name_formatted'] . '</a>'  "
        },
        "subvendor_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['sub_vendor_name'],30)"
        },
        "subvendor_name": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_vendor_name'], array(NULL, ''))) ? 'NOT PROVIDED' : '<a href=\"/contracts_landing'  . ContractUtil::get_contracts_vendor_link_sub($row[sub_vendor_id],_getRequestParamValue('year'),_getRequestParamValue('yeartype'), null, $row[sub_minority_type_id]) .  '?expandBottomCont=true\">' .$row[subvendor_name_formatted]. '</a>') : 'N/A'"
        },
        "subvendor_name_export": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_vendor_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_vendor_name']) : 'N/A'"
        },
        "sub_mwbe_category_name": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_minority_type_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_minority_type_name'] ) : 'N/A'"
        },
        "sub_mwbe_category_name_export": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_minority_type_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_minority_type_name']) : 'N/A'"
        },
        "contract_includes_sub":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? $row['scntrc_status_name'] : 'N/A'"
        },
        "subvendor_status_pip":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? _get_tooltip_markup($row['aprv_sta_name'],36) : 'N/A'"
        },
        "subvendor_status_pip_export":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? $row['aprv_sta_name'] : 'N/A'"
        }
    },
    "skipCustomPadding":true,
    "table_columns": [
        {"label": "<div></div>","colLabel": "","column": "child_contrats_link","export":false},
        {"labelAlias": "contract_id","column": "contract_link","sortSourceColumn":"contract_number"},
        {"labelAlias":"contract_includes_sub","column":"contract_includes_sub","sortSourceColumn":"scntrc_status_name","exportColumn":"contract_includes_sub"},
        {"labelAlias":"sub_contract_reference_id","column":"sub_contract_reference_id","sortSourceColumn":"sub_contract_id","exportColumn":"sub_contract_reference_id"},
        {"label":"","column":"","export":false},
        {"labelAlias": "contract_purpose","column": "purpose_formatted","sortSourceColumn":"description","exportColumn":"description"},
        {"labelAlias": "version","column": "document_version"},
        {"label":"","column":"","export":false},
        {"labelAlias": "fms_doc_id","column":"parent_contract_link", "exportColumn":"parent_contract_export", "sortSourceColumn":"master_contract_number"},
        {"labelAlias": "current_amount","column": "formatted_current_amount","sortSourceColumn":"maximum_contract_amount","exportColumn":"maximum_contract_amount"},
        //10
        {"labelAlias": "original_amount","column": "formatted_original_amount","sortSourceColumn":"original_contract_amount","exportColumn":"original_contract_amount"},
        {"labelAlias": "spent_to_date","column": "formatted_spent_to_date","sortSourceColumn":"rfed_amount","exportColumn":"rfed_amount"},
        {"labelAlias": "dollar_diff","column": "formatted_dollar_diff","sortSourceColumn":"dollar_difference","visibility_flag":"show_difference"},
        {"labelAlias": "percent_diff","column": "formatted_percent_diff","sortSourceColumn":"percent_difference","visibility_flag":"show_difference"},
        {"label":"","column":"","export":false},
        {"labelAlias": "prime_vendor","column": "prime_vendor_name_link","sortSourceColumn":"prime_vendor_name","exportColumn":"prime_vendor_name"},
        {"labelAlias":"prime_mwbe_category","column":"prime_minority_type_name","sortSourceColumn":"prime_minority_type_name"},
        {"label":"","column":"","export":false},
        {"labelAlias":"sub_vendor_name","column":"subvendor_name","sortSourceColumn":"sub_vendor_name","exportColumn":"subvendor_name_export"},
        {"label":"","column":"","export":false},
        //20
        {"labelAlias":"sub_mwbe_category","column":"sub_mwbe_category_name","sortSourceColumn":"sub_minority_type_name","exportColumn":"sub_mwbe_category_name_export"},
        {"label":"","column":"","export":false},
        {"labelAlias":"subvendor_status_pip","column":"subvendor_status_pip","sortSourceColumn":"aprv_sta_name","exportColumn":"subvendor_status_pip_export"},
        {"label":"","column":"","export":false},
        {"labelAlias": "contract_agency","column": "agency_name_link","sortSourceColumn":"agency_name","exportColumn":"agency_name"},
        {"labelAlias": "contract_type","column": "contract_type_formatted","sortSourceColumn":"agreement_type_name","exportColumn":"agreement_type_name"},
        {"labelAlias": "award_method","column": "award_method_formatted","sortSourceColumn":"award_method_name","exportColumn":"award_method_name"},
        {"labelAlias": "expense_category","column": "expense_cat","sortSourceColumn":"expenditure_object_names","exportColumn":"expense_cat_export"},
        {"label":"","column":"","export":false},
        {"labelAlias": "contract_industry","column": "industry_name_formatted","sortSourceColumn":"industry_type_name","exportColumn":"industry_type_name"},
        //30
        {"labelAlias": "start_date","column": "effective_begin_date"},
        {"labelAlias": "end_date","column": "effective_end_date"},
        {"labelAlias": "reg_date","column": "registered_date"},
        {"label":"","column":"","export":false},
        {"labelAlias": "pin","column": "tracking_number"},
        {"labelAlias": "apt_pin","column": "brd_awd_no"}
    ],
    "adjustParameters":"
        $parameters = ContractUtil::adjustActiveContractParameterFilters($node, $parameters);
        if(function_exists('_checkbook_project_applyParameterFilters')){
            $parameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        return $parameters;
    ",
    "exportColumnSqlOverride":[
        {
            "column":"contract_includes_sub",
            "sourceColumn":"scntrc_status_name",
            "sql":"CASE WHEN document_code IN ('CT1', 'CTA1', 'CT2') 
                    THEN scntrc_status_name
                   ELSE 'N/A' END"
        },
        {
            "column":"sub_contract_reference_id",
            "sourceColumn":"sub_contract_id",
            "sql":" CASE WHEN document_code IN ('CT1', 'CTA1', 'CT2')
                    THEN (CASE WHEN ((sub_contract_id IS NULL OR sub_contract_id = '') AND scntrc_status = 2) THEN 'NOT PROVIDED' 
                               WHEN (sub_contract_id IS NULL OR sub_contract_id = '') THEN 'N/A'
                               ELSE sub_contract_id
                           END)
                    ELSE 'N/A' END"
        },
        {
            "column":"parent_contract_link",
            "sourceColumn":"master_contract_number",
            "sql":"CASE WHEN master_contract_number IS NULL THEN 'N/A' ELSE master_contract_number END"
        },
        {
            "column":"subvendor_name",
            "sourceColumn":"sub_vendor_name",
            "sql":"CASE WHEN document_code IN ('CT1', 'CTA1', 'CT2')
			THEN (CASE WHEN ((sub_vendor_name IS NULL OR sub_vendor_name = '') AND scntrc_status = 2) 
				THEN 'NOT PROVIDED' 
			     WHEN (sub_vendor_name IS NULL OR sub_vendor_name = '') 
			        THEN 'N/A'
                            ELSE sub_vendor_name
			END)
                   ELSE 'N/A' END"
        },
        {
            "column":"sub_mwbe_category",
            "sourceColumn":"sub_minority_type_name",
            "sql":"CASE WHEN document_code IN ('CT1', 'CTA1', 'CT2')
			THEN (CASE WHEN ((sub_minority_type_name IS NULL OR sub_minority_type_name = '') AND scntrc_status = 2) 
				THEN 'NOT PROVIDED' 
			     WHEN (sub_minority_type_name IS NULL OR sub_minority_type_name = '') 
			        THEN 'N/A'
                            ELSE sub_minority_type_name
			END)
                 ELSE 'N/A' END"
        },
        {
            "column":"subvendor_status_pip",
            "sourceColumn":"aprv_sta_name",
            "sql":"CASE WHEN document_code IN ('CT1', 'CTA1', 'CT2') 
			THEN aprv_sta_name
                    ELSE 'N/A'
                    END"
        }
    ],
    "adjustDataTableOptions":"
        $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;
        if($node->show_difference) {
            $adjustDataTableOptions->aaSorting[0][0] = 12;
        }
        if(!$node->is_master_agreement) {
            $adjustDataTableOptions->fnInitComplete = '##function () { new FixedColumns( oTable, {\"iLeftColumns\": 2,\"iLeftWidth\": 180} );}##';
        }
    ",
    "dataTableOptions":{
        "bRetrieve":true,
        "bServerSide":true,
        "bProcessing":true,
        "bFilter":false,
        "bPaginate":true,
        "iDisplayLength":35,
        "sPaginationType":"full_numbers",
        "sDom":"<pr><t><ip>",
        "oLanguage": {
            "sInfo":"Displaying transactions _START_ - _END_ of _TOTAL_",
            "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo":true,
        "aoColumns": [
        {"sClass":"expander","bSortable": false,"sWidth":"30px"},
        {"sClass":"text", "sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"sub-cont-status", "sWidth":"161px","asSorting": [ "asc","desc" ]},
        {"sClass":"number-center", "sWidth":"120px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text", "sWidth":"210px","asSorting": [ "asc","desc" ]},
        {"sClass":"vers-num", "sWidth":"75px","asSorting": [ "desc","asc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","bSortable": false, "sWidth":"155px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        //10
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_difference"},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_difference"},
        {"bSortable":false,"sWidth":"60px"},
        {"sClass":"text","sWidth":"180px","asSorting": [ "desc","asc" ]},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"130px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        //20
        {"sClass":"text","sWidth":"140px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"20px"},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"220px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"20px"},
        {"sClass":"text","sWidth":"220px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"125px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"125px","asSorting": [ "asc","desc" ]},
        //30
        {"sClass":"text","sWidth":"110px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"30px"},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]}
        ],
        "aaSorting":[[9,"desc"]],
        "sScrollX":"100%",
        "bScrollCollapse": true
    },
    "customJS":"jQuery('#dtl_expand').live( 'click',function () {
        var nTr = this.parentNode.parentNode.parentNode;
        if ( jQuery(this).attr('class').match('loader') ){return;}
        if ( jQuery(this).attr('class').match('expanded') ){
            jQuery(this).removeClass('expanded').addClass('collapsed');
            oTable.fnClose( nTr );
        }
        else{
            jQuery(this).removeClass('collapsed').addClass('loader');
            fnLoadChildRecords(nTr, jQuery(this));
        }} );
    ",
    "customExternalJS":"

        function prepareTableListFilterUrl() {
            var agencyIds = getNamedFilterCriteria('fagencyId');
            var oVendorIds = getNamedFilterCriteria('fvendorId');
            var oVendorNms = getNamedFilterCriteria('fvendorNm');
            var oVendorCodes = getNamedFilterCriteria('fvendorCode');
            var oContractNumber = getNamedFilterCriteria('fContractNumber');
            var oSubVendorStatus = getNamedFilterCriteria('fSubVendorStatus');
            var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');
            var oVendorType = getNamedFilterCriteria('fvendorType');
            var oCurAmount = getNamedFilterCriteria('fCurAmount');
            var oAwdMethod = getNamedFilterCriteria('fAwdMethodId');
            var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');
            var oSubContStatus = getNamedFilterCriteria('fSubContStatus');

            var cUrl = oTable.fnSettings().sAjaxSource;

            var cUrlArray = cUrl.split('/');

            cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
            cUrl = adjustUrlParameter(cUrl,'vendorcode',oVendorCodes);
            cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
            cUrl = adjustUrlParameter(cUrl,'contnum_exact',oContractNumber);
            cUrl = adjustUrlParameter(cUrl,'subvendorstatus',oSubVendorStatus);
            cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
            cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
            cUrl = adjustUrlParameter(cUrl,'curamtr',oCurAmount);
            cUrl = adjustUrlParameter(cUrl,'awdmethod',oAwdMethod);
            cUrl = adjustUrlParameter(cUrl,'cindustry',oIndustryType);
            cUrl = adjustUrlParameter(cUrl,'subcontstatus',oSubContStatus);

            return cUrl;
        }

        function fnLoadChildRecords (nTr, oElement)
        {
            var magid = jQuery(oElement).attr('magid');
            var year = jQuery(oElement).attr('year');
            var yeartype = jQuery(oElement).attr('yeartype');
            var mastercode = jQuery(oElement).attr('mastercode');
            var mwbe = jQuery(oElement).attr('mwbe');
            var dashboard = jQuery(oElement).attr('dashboard');
            var subcontstatus = jQuery(oElement).attr('subcontstatus');
            var subvendorstatus = jQuery(oElement).attr('subvendorstatus');
            var contstatus = jQuery(oElement).attr('contstatus');

            magid = (magid == null || magid.length == 0) ?  '0' : magid;

            var sUrl = '/dashboard_platform/data_tables/ajax_data/node/940/magid/'+magid;
            sUrl = sUrl + ( (contstatus == null || contstatus.length == 0) ?  '' : '/contstatus/'+contstatus);
            sUrl = sUrl + ( (mwbe == null || mwbe.length == 0) ?  '' : '/mwbe/'+mwbe);
            sUrl = sUrl + ( (dashboard == null || dashboard.length == 0) ?  '' : '/dashboard/'+dashboard);
            sUrl = sUrl + ( (subcontstatus == null || subcontstatus.length == 0) ?  '' : '/subcontstatus/'+subcontstatus);
            sUrl = sUrl + ( (subvendorstatus == null || subvendorstatus.length == 0) ?  '' : '/subvendorstatus/'+subvendorstatus);

            jQuery.ajax({
                url: sUrl,
                dataType: 'json',
                type: 'GET',
                success: function(results) {
                    if(eval(results['aaData']) && results['aaData'].length > 0) {
                        var data = results['aaData'];
                        var dataLen = results['aaData'].length;
                        var sOut = '<div class=\"sub-table-wrapper\"><table>';
                        var is_contract_modification = (smnid == 480 || smnid == 366);
                        for(i=0;i<dataLen;i++){
                            var row = data[i];

                            sOut += '<tr>';
                            //sOut += '<td class=\"text\"></td>';
                            sOut += '<td class=\"text\" style=\"width:150px\">'+ (row[1] == null ? '': row[1])+'</td>';
                            sOut += '<td class=\"sub-cont-status\"  style=\"width:161px\">'+ (row[2] == null ? '': row[2])+'</td>';
                            sOut += '<td class=\"number-center\"  style=\"width:120px\">'+ (row[3] == null ? '': row[3])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:50px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:210px\">'+ (row[4] == null ? '': row[4])+'</td>';
                            sOut += '<td class=\"vers-num\"  style=\"width:75px\">'+ (row[5] == null ? '': row[5])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:50px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:155px\">'+ (row[6] == null ? '': row[6])+'</td>';
                            sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[7] == null ? '': row[7])+'</td>';
                            //10
                            sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[8] == null ? '': row[8])+'</td>';
                            sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[9] == null ? '': row[9])+'</td>';
                            if(is_contract_modification) {
                                sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[25] == null ? '': row[25])+'</td>';
                                sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[26] == null ? '': row[26])+'</td>';
                            }
                            sOut += '<td class=\"text\" style=\"width:60px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:180px\">'+ (row[10] == null ? '': row[10])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:150px\">'+ (row[11] == null ? '': row[11])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:50px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:100px\">'+ (row[12] == null ? '': row[12])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:50px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:130px\">'+ (row[13] == null ? '': row[13])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:50px\"></td>';
                            //20
                            sOut += '<td class=\"text\"  style=\"width:140px\">'+ (row[14] == null ? '': row[14])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:20px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[15] == null ? '': row[15])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[16] == null ? '': row[16])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[17] == null ? '': row[17])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:220px\">'+ (row[18] == null ? '': row[18])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:20px\"></td>';
                            sOut += '<td class=\"text\"  style=\"width220px\">'+ (row[19] == null ? '': row[19])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:125px\">'+ (row[20] == null ? '': row[20])+'</td>';
                            sOut += '<td class=\"text\"  style=\"width:125px\">'+ (row[21] == null ? '': row[21])+'</td>';
                            //30
                            sOut += '<td class=\"text\"  style=\"width:110px\">'+ (row[22] == null ? '': row[22])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:30px\"></td>';
                            sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[23] == null ? '': row[23])+'</td>';
                            sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[24] == null ? '': row[24])+'</td>';
                            sOut += '<td style=\"width:10px\"></td>';
                            sOut += '</tr>';
                        }
                        sOut += '</table></div>';
                        oTable.fnOpen( nTr, sOut, 'childcontracts' );
                    }

                    jQuery(oElement).removeClass('loader').addClass('expanded');
                    if(jQuery.browser.msie && jQuery.browser.version == '7.0') {}
                    else {
                        jQuery('td.childcontracts div.sub-table-wrapper').jScrollPane({
                            verticalDragMinHeight: 10,
                            verticalDragMaxHeight: 10,
                            showArrows: true,
                            verticalArrowPositions: 'split'
                        });
                    }
                }
            });

            return '';
        }
    "
}
