{
  "widgetType": "data_tables",
  "widgetSubType": "dataTableList",
  "cleanURLParameters": [
    "bdgcodenm_exact",
    "expcategorynm_facet",
    "year",
    "expcategory",
    "expcategorynm",
    "bdgcode",
    "bdgcode_code",
    "bdgcodenm",
    "adpamt",
    "preamt",
    "encamt",
    "cshamt",
    "postamt",
    "acramt",
    "curamt",
    "curamtr"
  ],
  "urlParamMap": {
    "expcategorynm_facet": "expenditure_object_name",
    "vendor_facet": "vendor_name",
    "bdgcodenm_exact": "budget_code_name",
    "year": "budget_fiscal_year_id",
    "expcategory": "object_class_id",
    "expcategorynm": "object_class_name",
    "bdgcode_code": "budget_code",
    "bdgcode": "budget_code_id",
    "bdgcodenm": "budget_code_name",
    "adpamt": "adopted_amount",
    "preamt": "pre_encumbered_amount",
    "encamt": "encumbered_amount",
    "cshamt": "cash_expense_amount",
    "postamt": "post_closing_adjustment_amount",
    "acramt": "accrued_expense_amount",
    "curamt": "current_budget_amount",
    "curamtr": "current_budget_amount"
  },
  "paramTypeConfig": {
    "curamt": "range",
    "adpamt": "range",
    "preamt": "range",
    "encamt": "range",
    "cshamt": "range",
    "postamt": "range",
    "acramt": "range",
    "curamtr": "rangeid",
    "deptnm": "eqignorecase",
    "bdgcodenm": "eqignorecase",
    "expcategorynm": "eqignorecase",
    "bdgcodenm_exact": "eqignorecase"
  },
  "header":"
  $header = NULL;
  $header .= widget_data_tables_export_link($node);
  return $header;
  ",
  "useList":true,
  "getTotalDataCount": true,
  "limit": "35",
  "stickyHeader": true,
  "noDataInitialLoad": true,
  "html_class": "initiative-table",
  "no_results_content": "No Results Found",
  "dataset": "checkbook_nycha:budget",
  "columns": [
    "budget_fiscal_year_id",
    "expenditure_type_name",
    "budget_fiscal_year",
    "committed",
    "funds_available",
    "modified_budget"
  ],
  "caption": "",
  "derivedColumns": {
    "agency_name_formatted": {
      "expression": "_get_tooltip_markup($row['agency_name'], 30)"
    },
    "formatted_expense_category": {
      "expression": "_get_tooltip_markup($row['object_class_name'], 28)"
    },
    "budget_code_name_formatted": {
      "expression": "_get_tooltip_markup($row['budget_code_name'], 36)"
    },
    "formatted_current_budget_amount": {
      "expression": "custom_number_formatter_basic_format($row['current_budget_amount'])"
    },
    "formatted_adopted_amount": {
      "expression": "custom_number_formatter_basic_format($row['adopted_amount'])"
    },
    "formatted_pre_encumbered_amount": {
      "expression": "custom_number_formatter_basic_format($row['pre_encumbered_amount'])"
    },
    "formatted_encumbered_amount": {
      "expression": "custom_number_formatter_basic_format($row['encumbered_amount'])"
    },
    "formatted_cash_expense_amount": {
      "expression": "custom_number_formatter_basic_format($row['cash_expense_amount'])"
    },
    "formatted_post_closing_adjustment_amount": {
      "expression": "custom_number_formatter_basic_format($row['post_closing_adjustment_amount'])"
    },
    "formatted_accrued_expense_amount": {
      "expression": "custom_number_formatter_basic_format($row['accrued_expense_amount'])"
    },
    "formatted_remaining_amount": {
      "expression": "custom_number_formatter_basic_format($row['remaining_budget'])"
    },
    "formatted_committed_amount": {
      "expression": "custom_number_formatter_basic_format($row['total_expenditure_amount'])"
    }
  },
  "table_columns": [
    {
      "labelAlias": "fiscal_year",
      "column": "budget_fiscal_year"
    },
    {
      "labelAlias": "modified",
      "column": "modified_budget",
      "sortSourceColumn": "modified_budget"
    },
    {
      "labelAlias": "expense_category",
      "column": "expenditure_type_name",
      "sortSourceColumn": "expenditure_type_name"
    },
    {
      "labelAlias": "committed",
      "column": "committed",
      "sortSourceColumn": "committed"
    },
    {
      "labelAlias": "remaining",
      "column": "funds_available",
      "sortSourceColumn": "funds_available"
    },
    {
      "label": "",
      "column": ""
    }
  ],
  "adjustParameters":"
  if(function_exists('_checkbook_project_applyParameterFilters')){
  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
}
return $adjustedParameters;
",
"adjustDataTableOptions":"
$budgettype = RequestUtilities::getRequestParamValue('budgettype');
if(isset($budgettype)) {
$is_committed_expense = ($budgettype == 'committed');
$is_remaining_expense = ($budgettype == 'remaining');
}
",
"dataTableOptions":{
"bRetrieve": true,
"bServerSide": true,
"bProcessing":true,
"bFilter": false,
"iDisplayLength":35,
"bPaginate": true,
"sPaginationType":"full_numbers",
"bLengthChange": false,
"sDom":"<pr><t><ip>",
"oLanguage": {
"sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_"
},
"bInfo": true,
"aoColumns":[
{"sClass":"number","sWidth":"135px","asSorting": [ "desc","asc" ]},
{"sClass":"number pad-left","sWidth":"135px","asSorting": [ "desc","asc" ]},
{"sClass":"text pad-left", "sWidth":"135px","asSorting": [ "asc","desc" ]},
{"sClass":"number","sWidth":"135px","asSorting": [ "desc","asc" ]},
{"sClass":"number","sWidth":"135px","asSorting": [ "desc","asc" ]},
{"bSortable": true,"sWidth":"15px" }
],
"aaSorting":[[3,"desc"]],
"sScrollX": "100%",
"bScrollCollapse": false,
"fnInitComplete": "##function () { new FixedColumns( oTable, {
\"iLeftColumns\": 1,
\"iLeftWidth\": 196
} );}##"
},
"customExternalJS":"function prepareTableListFilterUrl(){
var oExpCategoryNms = getNamedFilterCriteria('fExpCategoryNm');
var oExpCategoryIds = getNamedFilterCriteria('fExpCategory');
var oCurAmount = getNamedFilterCriteria('fCurAmount');
var obudgetCodeId = getNamedFilterCriteria('fbdgcode');
var obudgetCodeName = getNamedFilterCriteria('fbdgcodenm');
var obudgetCode = getNamedFilterCriteria('fbdgcode_code');

var  cUrl = oTable.fnSettings().sAjaxSource;
cUrl = adjustUrlParameter(cUrl,'expcategorynm',oExpCategoryNms);
cUrl = adjustUrlParameter(cUrl,'expcategory',oExpCategoryIds);

cUrl = adjustUrlParameter(cUrl,'curamtr',oCurAmount);
cUrl = adjustUrlParameter(cUrl,'bdgcode',obudgetCodeId);
cUrl = adjustUrlParameter(cUrl,'bdgcodenm',obudgetCodeName);
cUrl = adjustUrlParameter(cUrl,'bdgcode_code',obudgetCode);

return cUrl;
}"
}
