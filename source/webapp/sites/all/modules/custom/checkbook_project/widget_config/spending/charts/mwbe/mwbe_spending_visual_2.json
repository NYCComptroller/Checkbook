{
"widgetType": "highcharts",
"widgetDatahandler": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateWidgetGridViewLink($node);
       return $header;
    ",
 "gridConfig":{
        "template":"chart_grid_view",
        "domain":"spending",
        "html_class":"chart-grid-view-table three-columns",
        "table_columns": [
            {
                  "labelAlias": "Year",
                  "columnType": "text"
             },
             {
                  "labelAlias": "Amount",
                  "columnType": "number",
                  "formatType": "amount"
             }
        ]
},
"no_results_content":"No Results Found",
"defaultParameters":{"type_of_year":"B"},
"cleanURLParameters":["yeartype","agency","vendor","category","industry"],
"urlParamMap":{"yeartype":"type_of_year","agency":"agency_id","vendor":"vendor_id","category":"spending_category_id","industry":"industry_type_id"},
"urlParamMapSubVendor":{"yeartype":"type_of_year","agency":"agency_id","vendor":"prime_vendor_id","category":"spending_category_id","industry":"industry_type_id"},
"chartTitle":"M/WBE Total Spending Share",
"widgetDataLoader":"
    
    $where_filters = array();
    foreach($node->widgetConfig->requestParams as $param=>$value){
        $where_filters[] = _widget_build_sql_condition(' a1.' . $param, $value);
    }
    
    if(count($where_filters) > 0){
        $where_filter = ' where ' . implode(' and ' , $where_filters);
    }
    
    $sql = 'select rm.minority_type_id, rm.minority_type_name ,year_value, sum(total_spending_amount) total_spending
    from {aggregateon_mwbe_spending_coa_entities} a1 
    join {ref_minority_type} rm on rm.minority_type_id = a1.minority_type_id
    join {ref_month} rmo on rmo.month_id =  a1.month_id
    join {ref_year} ry on a1.year_id = ry.year_id       
   ' . $where_filter . '
    group by rm.minority_type_id, rm.minority_type_name,year_value  ';
    
    $node->data  = _checkbook_project_execute_sql($sql);
    
    
    
    
 	$where_filters2 = array();
    foreach($node->widgetConfig->urlParamMapSubVendor as $param=>$key){
        $value = _getRequestParamValue($param) ;
    	if( $value != null && $value != ''){
    		$where_filters2[] = _widget_build_sql_condition(' a1.' . $key, _getRequestParamValue($param));
		}
    }
    
    if(count($where_filters2) > 0){
        $where_filter2 = ' where ' . implode(' and ' , $where_filters2);
    }
    

    
    $sql2 = 'select rm.minority_type_id, rm.minority_type_name ,year_value, sum(total_spending_amount) total_spending
    from {aggregateon_subven_spending_coa_entities} a1 
    join {ref_minority_type} rm on rm.minority_type_id = a1.minority_type_id
    join {ref_month} rmo on rmo.month_id =  a1.month_id
    join {ref_year} ry on a1.year_id = ry.year_id       
   ' . $where_filter2 . '
    group by rm.minority_type_id, rm.minority_type_name,year_value  ';
    $node->data_subven  = _checkbook_project_execute_sql($sql2);    
",
"widgetUpdateJSONConfig":"

	$series =  array();
	$non_mwbe_data = array();
	$year_id = _getRequestParamValue('year');
	$mwbe_page_cats = explode('~',_getRequestParamValue('mwbe'));
	$year = _getYearValueFromID($year_id);
	 foreach ($node->data as $row){
	 
	 	switch($row['minority_type_id']){
	 		case '2':
	 		if(in_array(2,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending'];
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending']; 
	 		break;
	 		case '3':
	 		if(in_array(3,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '4':
	 		if(in_array(4,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '5':
	 		if(in_array(5,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '9':
	 		if(in_array(9,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '7':
	 		$non_mwbe_data[$row['year_value']] = $row['total_spending']; 
	 		break;
	 	}	
	 }
	 
	 
	 foreach ($node->data_subven as $row){
	 
	 	switch($row['minority_type_id']){
	 		case '2':
	 		if(in_array(2,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending'];
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending']; 
	 		break;
	 		case '3':
	 		if(in_array(3,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '4':
	 		if(in_array(4,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '5':
	 		if(in_array(5,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;
	 		case '9':
	 		if(in_array(9,$mwbe_page_cats))
	 			$series[$row['year_value']]->y += $row['total_spending']; 
	 		$series[$row['year_value']]->mwbe_total += $row['total_spending'];
	 		break;	 		
	 	}	
	 }
	 
	 
	
	$i = 0;
	$categories = array();
	ksort($series);
	
	$series_new = array();
	$index = 0;
		
	foreach($series as $key=>$row){
		if($key <= $year && $key >= $year - 4){
			if(_getRequestParamValue('yeartype') == 'C'){
				 $year_display = 'CY ' . $key;
			}else{
				$year_display = 'FY ' . $key;
			}
	 		$tooltip_label = 
	 						'Year: ' . $year_display.  '<br/>' .
	 						'Amount: '. custom_number_formatter_format($series[$key]->y,2,'$')   . '<br/>' ; 
		
			$series_new[$index]->y = $series[$key]->y/($series[$key]->mwbe_total + $non_mwbe_data[$key] ) * 100;
			$series_new[$index]->tooltip_label = $tooltip_label;
			$series_new[$index]->custom_label = custom_number_formatter_format($series[$key]->y/($series[$key]->mwbe_total + $non_mwbe_data[$key] ) *100,1,null,'%') ; 
			$categories[] = $key ;
			$node->widgetConfig->gridConfig->data[] = array($year_display,$series[$key]->y );
			$index += 1; 	
		}	
	}
	
	
	$node->widgetConfig->chartTitle = MappingUtil::getCurrenEhtnicityName() .  ' Total Spending Share';
	$node->widgetConfig->chartConfig->series[0]->name = 'Fiscal Years';
	$node->widgetConfig->chartConfig->series[0]->type = 'column';
	$node->widgetConfig->chartConfig->series[0]->pointWidth = 80;
	$node->widgetConfig->chartConfig->series[0]->data = $series_new;
	$node->widgetConfig->chartConfig->xAxis->categories = $categories;

																		 
",
"chartConfig" : {
	"colors":["#7DB7E5"],
    "plotOptions": {
            "series": {
                "minPointLength":40 ,                
                "stacking": "normal",
                "dataLabels": {
                    "enabled": true,
                    "format": "{point.custom_label}",
                    "style": {
                		"color": "#FFFFFF",
                		"fontSize": "24px"
            		}
                }             
            }
    },
    "xAxis": {
        "categories": [],
        "labels": {"enabled": false}
    },
    "series": [
        {
            "name": "FY",
            "type": "column",
            "pointWidth": 50,
            "data": [
            		]
        }
    ],
    "title": {"text": ""},
    "yAxis": {
     	"min":0,
     	"minRange": 0.1,    
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    } ,
    "legend": {
        "enabled": false       
    },
    "tooltip":{"function":"tooltipformatter"}
    }
}


<function>
yAxisFormatter^^'formatter' : function(){return this.value + '%';}##
tooltipformatter^^'formatter' :
function() {return this.point.tooltip_label ;
}
</function>