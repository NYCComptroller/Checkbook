{
    "widgetType": "data_tables",
    "widgetSubType": "dataTableList",
    "stickyHeader":true,
    "cleanURLParameters":[
        "subvendor","vendortype","mwbe","doctype","contstatus","year","calyear","yeartype","agency","vendor","curamtr","vendornm","vendornm_exact","contdesc","agrmnttype",
        "agencyh","contnum","aptpin","pin","awdmethod","curamt","startdate","enddate","regdate","cindustry","csize","modamt","fvendor"
    ],
    "urlParamMap":{
        "vendortype":"vendor_type",
        "mwbe":"minority_type_id@checkbook:all_contracts_coa_aggregates",
        "doctype":"document_code@checkbook:ref_document_code",
        "contstatus":"status_flag@checkbook:all_contracts_coa_aggregates",
        "year":"fiscal_year_id@checkbook:all_contracts_coa_aggregates",
        "calyear":"fiscal_year_id@checkbook:all_contracts_coa_aggregates",
        "yeartype":"type_of_year@checkbook:all_contracts_coa_aggregates" ,
        "agency":"agency_id",
        "fvendor":"vendor_id",
        "vendor":"prime_vendor_id",
        "curamtr":"maximum_contract_amount",
        "vendornm":"vendor_name",
        "vendornm_exact":"vendor_name",
        "subvendor":"vendor_id",
        "contdesc":"description",
        "agrmnttype":"agreement_type_id",
        "agencyh":"agency_history_id",
        "contnum":"contract_number",
        "aptpin":"brd_awd_no",
        "pin":"tracking_number",
        "awdmethod":"award_method_id",
        "curamt":"maximum_contract_amount",
        "startdate":"effective_begin_date",
        "enddate":"effective_end_date",
        "regdate":"registered_date",
        "cindustry":"industry_type_id",
        "csize":"award_size_id",
        "modamt":"dollar_difference"
    },
    "allowRequestParams":["smnid"],
    "paramTypeConfig":{"vendornm_exact":"eqignorecase","curamtr":"rangeid","vendornm":"like","contdesc":"like","contnum":"like","aptpin":"like","pin":"like","curamt":"range",
        "startdate":"range","enddate":"range","regdate":"range","modamt":"ne"},
    "defaultParameters":{"status_flag@checkbook:all_contracts_coa_aggregates":"A"},
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "getTotalDataCount":true,
    "limit":"35",
    "noDataInitialLoad":true,
    "html_class": "initiative-table",
    "no_results_content":"No Results Found",
    "dataset": "checkbook:all_agreement_transactions",
    "uniqueSortColumn":"agreement_id",
    "columns": [
        "agreement_id",
        "prime_vendor_name",
        "sub_contract_id",
        "is_prime_or_sub",
        "minority_type_id",
        "minority_type_name",
        "master_contract_number",
        "master_agreement_id",
        "fms_commodity_line@checkbook:oge_contract_contract",
        "budget_name@checkbook:oge_contract_contract",
        "oge_contract_number@checkbook:oge_contract_contract",
        "fiscal_year_id@checkbook:all_contracts_coa_aggregates",
        "type_of_year@checkbook:all_contracts_coa_aggregates",
        "has_children",
        "has_mwbe_children",
        "contract_number",
        "contract_original_agreement_id",
        "description",
        "document_version",
        "original_contract_amount",
        "maximum_contract_amount",
        "spending_amount@checkbook:all_contracts_coa_aggregates",
        "vendor_name",
        "agency_name",
        "vendor_id",
        "agency_id",
        "agreement_type_name",
        "award_method_name",
        "expenditure_object_names",
        "effective_begin_date",
        "effective_end_date",
        "registered_date",
        "brd_awd_no",
        "tracking_number",
        "master_agreement_yn",
        "document_code@checkbook:ref_document_code",
        "industry_type_name",
        "dollar_difference",
        "percent_difference",
        "original_agreement_id@checkbook:all_contracts_coa_aggregates"
    ],
    "preProcessConfiguration":"
        $doctype = $node->widgetConfig->requestParams['document_code@checkbook:ref_document_code'];
        $doctypes = isset($doctype) ? explode('~', $doctype) : array();
        $smnid = _getRequestParamValue('smnid');

        $is_master_agreement = in_array('MA1', $doctypes) || in_array('MMA1', $doctypes);
        $is_contract_modification = $smnid == 480 || $smnid == 366 || $smnid == 722;
        $is_sub_vendors = $smnid == 721 || $smnid == 722;

        $show_dollar_difference = $is_contract_modification;
        $show_percent_difference = $is_contract_modification;
        $show_expense_category = !$is_sub_vendors;

        $node->show_expense_category = $show_expense_category;
        $node->show_dollar_difference = $show_dollar_difference;
        $node->show_percent_difference = $show_percent_difference;

        $node->is_master_agreement = $is_master_agreement;
        $node->is_contract_modification = $is_contract_modification;
    ",
    "columns_datasource":{
        "fms_commodity_line@checkbook:oge_contract_contract":"checkbook_oge",
        "oge_contract_number@checkbook:oge_contract_contract":"checkbook_oge",
        "budget_name@checkbook:oge_contract_contract":"checkbook_oge"
    },
    "caption":"",
    "derivedColumns": {
        "child_contrats_link":{
            "type": "expression2",
            "expression": "ContractURLHelper::prepareExpandLink($row, $node)"
        },
        "contract_link": {
            "type": "expression2",
            "expression": "ContractURLHelper::prepareExpenseContractLink($row, $node, false, $row['contract_original_agreement_id'])"
        },
        "parent_contract_link": {
            "type": "expression2",
            "expression": "(($row['master_agreement_yn'] == 'Y') ? 'N/A' : ContractURLHelper::prepareExpenseContractLink($row, $node, true, $row['contract_original_agreement_id']))"
        },
        "parent_contract_export":{
            "type": "expression2",
            "expression": "(($row['master_agreement_yn'] == 'Y') ? 'N/A' : $row['master_contract_number'])"
        },
        "formatted_original_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['original_contract_amount'])"
        },
        "formatted_current_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['maximum_contract_amount'])"
        },
        "formatted_spent_to_date": {
            "type": "expression2",
            "expression": "
            '<a href=\"/spending/transactions'
            .  ($row['master_agreement_yn'] == 'Y' ? '/magid/' : '/agid/') . $row['original_agreement_id@checkbook:all_contracts_coa_aggregates']
            .  _checkbook_project_get_url_param_string(\"dashboard\") . _checkbook_project_get_url_param_string(\"mwbe\")
            .  ( $row['type_of_year@checkbook:all_contracts_coa_aggregates'] == 'B' ? ('/year/'. $row['fiscal_year_id@checkbook:all_contracts_coa_aggregates'].'/syear/'. $row['fiscal_year_id@checkbook:all_contracts_coa_aggregates']) : ('/calyear/'.$row['fiscal_year_id@checkbook:all_contracts_coa_aggregates']. '/scalyear/'.$row['fiscal_year_id@checkbook:all_contracts_coa_aggregates']) )
            .  '/newwindow\" class=\"new_window\">'. custom_number_formatter_basic_format($row['spending_amount@checkbook:all_contracts_coa_aggregates']) . '</a>'
            "
        },
        "current_prime_minority_type_id": {
            "type": "expression2",
            "expression": "$row['minority_type_id']"
        },
        "vendor_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['vendor_name'],30)"
        },
        "vendor_name_link": {
            "type": "expression2",
            "expression": " '<a href=\"/contracts_landing'
            . ContractUtil::get_contracts_vendor_link_by_mwbe_category($row)
            . '?expandBottomCont=true\">'. $row['vendor_formatted'] . '</a>'  "
        },
        "agency_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agency_name'],26)"
        },
        "agency_name_link": {
            "type": "expression2",
            "expression": " '<a href=\"/contracts_landing'
            ._checkbook_append_url_params()
            .  (isset($row['fiscal_year_id@checkbook:all_contracts_coa_aggregates']) ? '/year/'.$row['fiscal_year_id@checkbook:all_contracts_coa_aggregates'] : '')
            .  (isset($row['type_of_year@checkbook:all_contracts_coa_aggregates']) ? '/yeartype/'.$row['type_of_year@checkbook:all_contracts_coa_aggregates'] : '')
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            . '/agency/' . $row['agency_id']
            .  '?expandBottomCont=true\">'. $row['agency_formatted'] . '</a>'  "
        },
        "purpose_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['description'],36)"
        },
        "expense_cat_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['expenditure_object_names'],36)"
        },
        "expense_cat": {
            "type": "expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expense_cat_formatted']"
        },
        "expense_cat_export": {
            "type": "expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expenditure_object_names']"
        },
        "award_method_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['award_method_name'],36)"
        },
        "contract_type_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agreement_type_name'],36)"
        },
        "industry_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['industry_type_name'],36)"
        },
        "formatted_dollar_diff": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['dollar_difference'])"
        },
        "formatted_percent_diff": {
            "type": "expression2",
            "expression": "round($row['percent_difference'],2) . '%'"
        },
        "mwbe_category_name_formatted": {
            "type":"expression2",
            "expression":"MappingUtil::getMinorityCategoryById($row['minority_type_id'])"
        },
        "mwbe_category_name": {
            "type": "expression2",
            "expression": "ContractUtil::get_mwbe_category_url($row['minority_type_id'], $row['is_prime_or_sub'])"
        },
        "is_sub_vendor": {
            "type":"expression2",
            "expression": "($row['is_prime_or_sub'] == 'P')?'No':'Yes'"
        },
        "associated_prime_vendor_name":{
            "type": "expression2",
            "expression": "($row['is_prime_or_sub'] == 'P') ? 'N/A' :  _get_tooltip_markup($row['prime_vendor_name'], 34)"
        },
        "associated_prime_vendor_name_export":{
            "type": "expression2",
            "expression": "($row['is_prime_or_sub'] == 'P') ? 'N/A' :  $row['prime_vendor_name']"
        }
    },
    "skipCustomPadding":true,
    "table_columns": [
        {"label": "<div></div>","colLabel": "","column": "child_contrats_link","export":false},
        {"labelAlias": "contract_id","column": "contract_link","sortSourceColumn":"contract_number"},
        {"labelAlias": "sub_contract_reference_id","column": "sub_contract_id"},
        {"label":"","column":"","export":false},
        {"labelAlias": "contract_purpose","column": "purpose_formatted","sortSourceColumn":"description"},
        {"labelAlias": "version","column": "document_version"},
        {"label":"","column":"","export":false},
        {"labelAlias": "fms_doc_id","column":"parent_contract_link", "exportColumn":"parent_contract_export", "sortSourceColumn":"master_contract_number"},
        {"labelAlias": "current_amount","column": "formatted_current_amount","sortSourceColumn":"maximum_contract_amount"},
        {"labelAlias": "original_amount","column": "formatted_original_amount","sortSourceColumn":"original_contract_amount"},
        {"labelAlias": "spent_to_date","column": "formatted_spent_to_date","sortSourceColumn":"spending_amount@checkbook:all_contracts_coa_aggregates"},
        {"labelAlias": "dollar_diff","column": "formatted_dollar_diff","sortSourceColumn":"dollar_difference","visibility_flag":"show_dollar_difference"},
        {"labelAlias": "percent_diff","column": "formatted_percent_diff","sortSourceColumn":"percent_difference","visibility_flag":"show_percent_difference"},
        {"label":"","column":"","export":false},
        {"labelAlias": "vendor_name","column": "vendor_name_link","sortSourceColumn":"vendor_name"},
        {"labelAlias":"is_sub_vendor","column":"is_sub_vendor","sortSourceColumn":"is_prime_or_sub","exportColumn":"is_sub_vendor"},
        {"label":"","column":"","export":false},
        {"labelAlias":"associated_prime_vendor","column":"associated_prime_vendor_name","sortSourceColumn":"prime_vendor_name","exportColumn":"associated_prime_vendor_name_export"},
        {"labelAlias": "contract_agency","column": "agency_name_link","sortSourceColumn":"agency_name"},
        {"labelAlias": "contract_type","column": "contract_type_formatted","sortSourceColumn":"agreement_type_name"},
        {"labelAlias": "award_method","column": "award_method_formatted","sortSourceColumn":"award_method_name"},
        {"labelAlias": "expense_category","column": "expense_cat","sortSourceColumn":"expenditure_object_names","visibility_flag":"show_expense_category","exportColumn":"expense_cat_export"},
        {"labelAlias": "contract_industry","column": "industry_name_formatted","sortSourceColumn":"industry_type_name"},
        {"labelAlias": "start_date","column": "effective_begin_date"},
        {"labelAlias": "end_date","column": "effective_end_date"},
        {"labelAlias": "reg_date","column": "registered_date"},
        {"label":"","column":"","export":false},
        {"labelAlias": "pin","column": "tracking_number"},
        {"labelAlias": "apt_pin","column": "brd_awd_no"},
        {"labelAlias":"mwbe_category","column":"mwbe_category_name","sortSourceColumn":"minority_type_id","exportColumn":"mwbe_category_name_formatted"}
    ],
    "exportColumnSqlOverride":[
        {
            "column":"mwbe_category_name",
            "sourceColumn":"minority_type_id",
            "sql":"
            case
            when minority_type_id = 2 then 'Black American'
            when minority_type_id = 3 then 'Hispanic American'
            when minority_type_id = 7 then 'Non-M/WBE'
            when minority_type_id = 9 then 'Women'
            when minority_type_id = 11 then 'Individuals and Others'
            else 'Asian American'
            end as minority_type_name
            "
        },
        {
            "column":"is_sub_vendor",
            "sourceColumn":"is_prime_or_sub",
            "sql":"case when is_prime_or_sub = 'P' then 'No' else 'Yes' end as vendor_type"
        },
        {
            "column":"associated_prime_vendor_name",
            "sourceColumn":"prime_vendor_name",
            "sql":"case when l1.is_prime_or_sub = 'P' then 'N/A' else prime_vendor_name end"
        },
        {
            "column":"expense_cat",
            "sourceColumn":"expenditure_object_names",
            "sql":"case when l1.is_prime_or_sub = 'S' then '' else expenditure_object_names end"
        }
    ],
    "adjustParameters":"
        if(isset($parameters['vendor_type'])){
            $parameters['vendor_type'] = MappingUtil::getVendorTypeValue($parameters['vendor_type']);
        }

        $dashboard = _getRequestParamValue('dashboard');
        $smnid = _getRequestParamValue('smnid');

        if($dashboard == 'ss' || $dashboard == 'sp' || $dashboard == 'ms') $parameters['is_prime_or_sub'] = 'S';
        else if($dashboard == 'mp' || ($dashboard == null && $smnid != null)) $parameters['is_prime_or_sub'] = 'P';
        else if($dashboard == null && $smnid == null) $parameters['is_prime_or_sub'] = array('P','S');

        if($smnid == 720) $parameters['is_prime_or_sub'] = 'S';

        if(function_exists('_checkbook_project_adjustContractParameterFilters')){
            _checkbook_project_adjustContractParameterFilters($node,$parameters,'active_registered');
        }

        if(function_exists('_checkbook_project_applyParameterFilters')){
            $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            return $adjustedParameters;
        }
        return $parameters;
    ",
    "adjustDataTableOptions":"
    $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;

    if($node->is_contract_modification) {
        $adjustDataTableOptions->aaSorting[0][0] = 11;
    }
    if(!$node->is_master_agreement) {
        $adjustDataTableOptions->fnInitComplete = '##function () { new FixedColumns( oTable, {
            \"iLeftColumns\": 2,
            \"iLeftWidth\": 210
        } );}##';
    }
    ",
    "dataTableOptions":{
    "bRetrieve": true,
    "bServerSide": true,
    "bProcessing":true,
    "bFilter": false,
    "bPaginate": true,
    "iDisplayLength":35,
    "sPaginationType":"full_numbers",
    "sDom":"<pr><t><ip>",
    "oLanguage": {
    "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
    "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
    },
    "bInfo": true,
    "aoColumns": [
        {"sClass":"expander","bSortable": false,"sWidth":"30px"},
        {"sClass":"text", "sWidth":"180px","asSorting": [ "asc","desc" ]},
        {"sClass":"number-center", "sWidth":"120px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text", "sWidth":"210px","asSorting": [ "asc","desc" ]},
        {"sClass":"vers-num", "sWidth":"75px","asSorting": [ "desc","asc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","bSortable": false, "sWidth":"155px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_dollar_difference"},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_percent_difference"},
        {"bSortable":false,"sWidth":"60px"},
        {"sClass":"text","sWidth":"180px","asSorting": [ "desc","asc" ]},
        {"sClass":"number-center","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"240px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"230px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"220px","asSorting": [ "asc","desc" ],"visibility_flag":"show_expense_category"},
        {"sClass":"text","sWidth":"220px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"125px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"125px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"110px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"30px"},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]}
    ],
    "aaSorting":[[8,"desc"]],
    "sScrollX": "100%",
    "bScrollCollapse": true
    }
    ,"customJS":"jQuery('#dtl_expand').live( 'click',function () {
    var nTr = this.parentNode.parentNode.parentNode;
    if ( jQuery(this).attr('class').match('loader') ){
    //ignore
    return;
    }

    if ( jQuery(this).attr('class').match('expanded') ){
    jQuery(this).removeClass('expanded').addClass('collapsed');
    oTable.fnClose( nTr );
    }else{
    jQuery(this).removeClass('collapsed').addClass('loader');
    fnLoadChildRecords(nTr, jQuery(this));
    }
    } );"
    ,"customExternalJS":"function prepareTableListFilterUrl(){

    var agencyIds = getNamedFilterCriteria('fagencyId');
    if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
    agencyIds = document.getElementById('fHideAgencyId').value;
    }
    var oVendorIds = getNamedFilterCriteria('fvendorId');
    var oVendorNms = getNamedFilterCriteria('fvendorNm');
    var oCurAmount = getNamedFilterCriteria('fCurAmount');
    var oAwdMethod = getNamedFilterCriteria('fAwdMethodId');
    var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');
    var oVendorType = getNamedFilterCriteria('fvendorType');
    var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');

    var  cUrl = oTable.fnSettings().sAjaxSource;
    cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
    cUrl = adjustUrlParameter(cUrl,'fvendor',oVendorIds);
    cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
    cUrl = adjustUrlParameter(cUrl,'curamtr',oCurAmount);
    cUrl = adjustUrlParameter(cUrl,'awdmethod',oAwdMethod);
    cUrl = adjustUrlParameter(cUrl,'cindustry',oIndustryType);
    cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
    cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
    return cUrl;
    }

    function fnLoadChildRecords (nTr, oElement)
    {
    var magid = jQuery(oElement).attr('magid');
    var year = jQuery(oElement).attr('year');
    var calyear = jQuery(oElement).attr('calyear');
    var yeartype = jQuery(oElement).attr('yeartype');
    var contstatus = jQuery(oElement).attr('contstatus');
    var mastercode = jQuery(oElement).attr('mastercode');
    var mwbe = jQuery(oElement).attr('mwbe');
    var dashboard = jQuery(oElement).attr('dashboard');

    magid = (magid == null || magid.length == 0) ?  '0' : magid;

    var sUrl = '/dashboard_platform/data_tables/ajax_data/node/'+ (mastercode == 'MA1' ? '666' : '665') +'/magid/'+magid+'/contstatus/A';
    sUrl = sUrl + ( (contstatus == null || contstatus.length == 0) ?  '' : '/contstatus/'+contstatus);
    sUrl = sUrl + ( (mwbe == null || mwbe.length == 0) ?  '' : '/mwbe/'+mwbe);
    sUrl = sUrl + ( (dashboard == null || dashboard.length == 0) ?  '' : '/dashboard/'+dashboard);

    var smnid = jQuery(oElement).attr('smnid');

    jQuery.ajax({
    url: sUrl,
    dataType: 'json',
    type: 'GET',
    success: function(results) {
    if(eval(results['aaData']) && results['aaData'].length > 0){
    var data = results['aaData'];
    var dataLen = results['aaData'].length;
    var sOut = '<div class=\"sub-table-wrapper\"><table>';
    for(i=0;i<dataLen;i++){
    var row = data[i];

    var is_contract_modification = smnid == 480 || smnid == 366;


    sOut += '<tr>';
    sOut += '<td class=\"text\" style=\"width:180px\">'+ (row[1] == null ? '': row[1])+'</td>';
    sOut += '<td class=\"number-center\" style=\"width:120px\">'+ (row[2] == null ? '': row[2])+'</td>';
    sOut += '<td style=\"width:50px\"></td>';
    sOut += '<td class=\"text\"  style=\"width:210px\">'+ (row[3] == null ? '': row[3])+'</td>';
    sOut += '<td class=\"vers-num\"  style=\"width:75px\">'+ (row[4] == null ? '': row[4])+'</td>';
    sOut += '<td style=\"width:50px\"></td>';
    sOut += '<td class=\"text\"  style=\"width:155px\">'+ (row[5] == null ? '': row[5])+'</td>';
    sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[6] == null ? '': row[6])+'</td>';
    sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[7] == null ? '': row[7])+'</td>';
    sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[8] == null ? '': row[8])+'</td>';
    if(is_contract_modification) {
        sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[9] == null ? '': row[9])+'</td>';
        sOut += '<td class=\"number\"  style=\"width:140px\">'+ (row[10] == null ? '': row[10])+'</td>';
    }
    sOut += '<td style=\"width:60px\"></td>';
    sOut += '<td class=\"text\"  style=\"width:180px\">'+ (row[11] == null ? '': row[11])+'</td>';
    sOut += '<td class=\"number-center\"  style=\"width:100px\">'+ (row[12] == null ? '': row[12])+'</td>';
    sOut += '<td style=\"width:50px\"></td>';
    sOut += '<td class=\"text\"  style=\"width:240px\">'+ (row[13] == null ? '': row[13])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[14] == null ? '': row[14])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[15] == null ? '': row[15])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:230px\">'+ (row[16] == null ? '': row[16])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:220px\">'+ (row[17] == null ? '': row[17])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:220px\">'+ (row[18] == null ? '': row[18])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:125px\">'+ (row[19] == null ? '': row[19])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:125px\">'+ (row[20] == null ? '': row[20])+'</td>';
    sOut += '<td class=\"text\"  style=\"width:110px\">'+ (row[21] == null ? '': row[21])+'</td>';
    sOut += '<td style=\"width:30px\"></td>';
    sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[22] == null ? '': row[22])+'</td>';
    sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[23] == null ? '': row[23])+'</td>';
    sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[24] == null ? '': row[24])+'</td>';
    sOut += '<td style=\"width:10px\"></td>';
    sOut += '</tr>';
    }
    sOut += '</table></div>';
    oTable.fnOpen( nTr, sOut, 'childcontracts' );
    }

    jQuery(oElement).removeClass('loader').addClass('expanded');
    if(jQuery.browser.msie && jQuery.browser.version == '7.0'){
    //do nothing
    } else {
    jQuery('td.childcontracts div.sub-table-wrapper').jScrollPane({
    verticalDragMinHeight: 10,
    verticalDragMaxHeight: 10,
    showArrows: true,
    verticalArrowPositions: 'split'
    });
    }
    }
    });

    return '';
    }
    "
}