{
"widgetType": "highcharts",
"widgetDatahandler": "highcharts",
"footer":"
if(SpendingUtil::_show_mwbe_custom_legend()){
	echo SpendingUtil::getMWBENYCLegend(_getRequestParamValue('year'), _getRequestParamValue('yeartype'));
}	
	 
",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateWidgetGridViewLink($node);
       return $header;
    ",
 "gridConfig":{
        "template":"chart_grid_view",
        "domain":"spending",
        "html_class":"chart-grid-view-table three-columns",
        "sortColumn":2,
        "table_columns": [
             {
                  "labelAlias": "Prime Vendor",
                  "columnType": "text"
             },
             {
                  "labelAlias": "M/WBE Share",
                  "columnType": "number"             
             },
             {
                  "labelAlias": "M/WBE Spending",
                  "columnType": "number",
                  "formatType": "amount"
             },
             {
                  "labelAlias": "Non M/WBE",
                  "columnType": "number",
                  "formatType": "amount"
             }             
        ]
},
"no_results_content":"No Results Found",
"defaultParameters":{"type_of_year":"B"},
"cleanURLParameters":["yeartype","agency","vendor","category","year"],
"urlParamMap":{"year":"year_id","yeartype":"type_of_year","agency":"agency_id","vendor":"vendor_id","category":"spending_category_id"},
"urlParamMapSubVendor":{"year":"year_id","yeartype":"type_of_year","agency":"agency_id","vendor":"prime_vendor_id","category":"spending_category_id"},
"chartTitle":"Top Ten Prime Vendors by M/WBE Spending",
"widgetDataLoader":"
    
    $where_filters = array();
    foreach($node->widgetConfig->requestParams as $param=>$value){
        $where_filters[] = _widget_build_sql_condition(' a1.' . $param, $value);
    }
    
    if(count($where_filters) > 0){
        $where_filter = ' where ' . implode(' and ' , $where_filters);
    }
 
	$mwbe_filter = _getRequestParamValue('mwbe');
    $sort_column = 8;
	switch($mwbe_filter){
		case '4~5' :
			$sort_column = 3;
			break;
		case '2' :
			$sort_column = 4;
			break;
		case '9' :
			$sort_column = 5;
			break;
		case '3' :
			$sort_column = 6;
			break;
		case '11' :
			$sort_column = 7;
			break;
		case '7' :
			$sort_column = 9;
			break;		
		
	}
     
    
    $sql1 = 'select legal_name , a1.vendor_id,
 	SUM(
       CASE 
            WHEN minority_type_id = 4 THEN total_spending_amount
            WHEN minority_type_id = 5 THEN total_spending_amount            
            ELSE 0
	END) aa_mwbe,
	SUM(
       CASE 
            WHEN minority_type_id = 2 THEN total_spending_amount            
            ELSE 0
	END) ba_mwbe,
	SUM(
       CASE 
            WHEN minority_type_id = 9 THEN total_spending_amount            
            ELSE 0
	END) w_mwbe,	
	SUM(
       CASE 
            WHEN minority_type_id = 3 THEN total_spending_amount            
            ELSE 0
	END) ha_mwbe,  
	SUM(
       CASE 
            WHEN minority_type_id = 11 THEN total_spending_amount            
            ELSE 0
	END) io_nonmwbe,	  
	SUM(
       CASE WHEN minority_type_id = 2 THEN total_spending_amount
            WHEN minority_type_id = 3 THEN total_spending_amount
            WHEN minority_type_id = 4 THEN total_spending_amount
            WHEN minority_type_id = 5 THEN total_spending_amount
             WHEN minority_type_id = 9 THEN total_spending_amount
            ELSE 0
	END) total_mwbe,
		SUM(
       CASE 
             WHEN minority_type_id = 7 THEN total_spending_amount
            ELSE 0
	END) total_non_mwbe
	from aggregateon_mwbe_spending_coa_entities a1     
    join vendor ra on ra.vendor_id =  a1.vendor_id  
   ' . $where_filter . '
        group by  legal_name, a1.vendor_id' ;
//    order by ' . $sort_column . ' desc limit 10';
    
    
    
    $where_filters2 = array();
		foreach($node->widgetConfig->urlParamMapSubVendor as $param=>$key){
			$value = _getRequestParamValue($param) ;
			if( $value != null && $value != ''){
				$where_filters2[] = _widget_build_sql_condition(' a1.' . $key, _getRequestParamValue($param));
			}
		}
	
	
	if(count($where_filters2) > 0){
			$where_filter2 = ' where ' . implode(' and ' , $where_filters2);
	}
    
    $sql2 = 'select legal_name , a1.prime_vendor_id vendor_id,
 	SUM(
       CASE 
            WHEN minority_type_id = 4 THEN total_spending_amount
            WHEN minority_type_id = 5 THEN total_spending_amount            
            ELSE 0
	END) aa_mwbe,
	SUM(
       CASE 
            WHEN minority_type_id = 2 THEN total_spending_amount            
            ELSE 0
	END) ba_mwbe,
	SUM(
       CASE 
            WHEN minority_type_id = 9 THEN total_spending_amount            
            ELSE 0
	END) w_mwbe,	
	SUM(
       CASE 
            WHEN minority_type_id = 3 THEN total_spending_amount            
            ELSE 0
	END) ha_mwbe,  
	SUM(
       CASE 
            WHEN minority_type_id = 11 THEN total_spending_amount            
            ELSE 0
	END) io_nonmwbe,	  
	SUM(
       CASE WHEN minority_type_id = 2 THEN total_spending_amount
            WHEN minority_type_id = 3 THEN total_spending_amount
            WHEN minority_type_id = 4 THEN total_spending_amount
            WHEN minority_type_id = 5 THEN total_spending_amount
             WHEN minority_type_id = 9 THEN total_spending_amount
            ELSE 0
	END) total_mwbe,
		SUM(
       CASE 
             WHEN minority_type_id = 7 THEN total_spending_amount
            ELSE 0
	END) total_non_mwbe
	from aggregateon_subven_spending_coa_entities a1     
    join vendor ra on ra.vendor_id =  a1.prime_vendor_id  
   ' . $where_filter2 . '
        group by  legal_name, a1.prime_vendor_id
   ';
   
   
   if(_getRequestParamValue('vendor') > 0 || _getRequestParamValue('mwbe') == '7' || _getRequestParamValue('mwbe') == '11'  ){
   	$sql = $sql1 . '  
   			order by ' . $sort_column . ' desc limit 10';
   			;
   }else{
   	$sql = ' select s1.vendor_id, s1.legal_name,
   			s1.aa_mwbe + coalesce(s2.aa_mwbe,0) aa_mwbe,
   			s1.ba_mwbe + coalesce(s2.ba_mwbe,0) ba_mwbe,
   			s1.w_mwbe + coalesce(s2.w_mwbe,0) w_mwbe,
   			s1.ha_mwbe + coalesce( s2.ha_mwbe,0) ha_mwbe,
   			s1.io_nonmwbe + coalesce(s2.io_nonmwbe,0) io_nonmwbe,
   			s1.total_mwbe + coalesce(s2.total_mwbe,0) total_mwbe ,
   			s1.total_non_mwbe  				 
   			from ( ' . $sql1 . ' ) s1  left join 
   			 ( '  . $sql2 . ' ) s2 on s1.vendor_id = s2.vendor_id  
   			order by ' . $sort_column . ' desc limit 10';
   			;
   	}		
    $node->data  = _checkbook_project_execute_sql($sql);
    
",
"widgetUpdateJSONConfig":"
	
	$series_new = array();
	
	$mwbe_filter = _getRequestParamValue('mwbe');
	
	$amount_column = 'total_mwbe';
	switch($mwbe_filter){
		case '4~5' :
			$amount_column = 'aa_mwbe';
			break;
		case '2' :
			$amount_column = 'ba_mwbe';
			break;
		case '3' :
			$amount_column = 'ha_mwbe';
			break;
		case '9' :
			$amount_column = 'w_mwbe';
			break;
		case '11' :
			$amount_column = 'io_nonmwbe';
			break;	
		case '7' :
			$amount_column = 'total_non_mwbe';
			break;			
	}
	
	$mwbe_filter = _getRequestParamValue('mwbe');
	if($mwbe_filter =='4~5' || $mwbe_filter =='2' || $mwbe_filter =='3' || $mwbe_filter =='9' ){			
		$node->widgetConfig->chartTitle = MappingUtil::getCurrenEhtnicityName()  . ' Top Ten Prime Vendors Spending';
	}else{
		$node->widgetConfig->chartTitle = 'Top Ten Prime Vendors by ' . MappingUtil::getCurrenEhtnicityName() .' Spending';		
	}
		
	$index = 0;
	if(_getRequestParamValue('vendor') > 0 || _getRequestParamValue('mwbe') == '7' || _getRequestParamValue('mwbe') == '11'){
		unset($node->widgetConfig->gridConfig->table_columns[3]);
		unset($node->widgetConfig->gridConfig->table_columns[1]);
		$node->widgetConfig->gridConfig->table_columns = array_values($node->widgetConfig->gridConfig->table_columns);
	}
		
	$index = 0;
	foreach($node->data as $row){
	
		if(_getRequestParamValue('vendor') > 0 || _getRequestParamValue('mwbe') == '7' || _getRequestParamValue('mwbe') == '11'){
		 		$tooltip_label = 
	 						'Prime Vendor: ' . $row['legal_name'].  '<br/>' .
	 						MappingUtil::getCurrenEhtnicityName() . ' Spending: ' . custom_number_formatter_format( $row[$amount_column],2,'$').  '<br/>' 
	 						;
				$node->widgetConfig->gridConfig->data[] = array($row['legal_name'],
														 $row[$amount_column]
														);
	
		}else{
			 		$tooltip_label = 
	 						'Prime Vendor: ' . $row['legal_name'].  '<br/>' .
	 						MappingUtil::getCurrenEhtnicityName() .' Share: ' . custom_number_formatter_format($row[$amount_column]/($row['total_mwbe'] + $row['total_non_mwbe'] ) *100 ,1,null, '%').  '<br/>' .
	 						MappingUtil::getCurrenEhtnicityName() . ' Spending: ' . custom_number_formatter_format( $row[$amount_column],2,'$').  '<br/>' .
	 						'Non-M/WBE: ' . custom_number_formatter_format( $row['total_non_mwbe'],2,'$').  '<br/>' 
	 						;
				$node->widgetConfig->gridConfig->data[] = array($row['legal_name'],
														custom_number_formatter_format($row[$amount_column]/($row['total_mwbe'] + $row['total_non_mwbe'] ) *100 ,1,null, '%'),
														 $row[$amount_column],
														 $row['total_non_mwbe']
														);
	 						
		}
 

			$link= CustomURLHelper::prepareUrl('spending_landing', SpendingUtil::$landingPageParams, array('expandBottomCont'=>'true'), array('vendor'=>$row['vendor_id']) );	 						
			$series_new[$index]->url = $link;


			$series_new[$index]->y = (float)$row[$amount_column];
			$series_new[$index]->tooltip_label = $tooltip_label;
			$index += 1;
	}

	$node->widgetConfig->chartConfig->series[0]->name = 'Fiscal Years';
	$node->widgetConfig->chartConfig->series[0]->type = 'column';
	$node->widgetConfig->chartConfig->series[0]->pointWidth = 30;
	$node->widgetConfig->chartConfig->series[0]->data = $series_new;
	
	if(SpendingUtil::_show_mwbe_custom_legend()&& count($node->data) > 0){
		$node->widgetConfig->html_class = 'chart-left';
	}
	
	
",
"chartConfig" : {
	"colors":["#7DB7E5"],
	"chart" : {"width":750},
    "plotOptions": {
            "series": {
                "cursor": "pointer"   ,            
                "stacking": "normal",
                "dataLabels": {
                    "enabled": false
                },
                "point": {"events": {"function": "clickEvent"}}                             
            }
    },
    "xAxis": {
        "categories": [0,1,2,3,4,5,6,7,8,9],
        "labels": {"enabled": false}
    },
    "series": [
        {
            "name": "FY",
            "type": "column",
            "pointWidth": 50,
            "data": []
        }
    ],
    "title": {"text": ""},
    "yAxis": {
     	"min":0,
     	"minRange": 0.1,    
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    } ,
    "legend": {
        "enabled": false       
    },
    "tooltip":{"function":"tooltipformatter"}
    }
}


<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' :
function() {return this.point.tooltip_label ;
}
##clickEvent^^"click": function(){ location.href = Drupal.settings.basePath+this.options.url;}
</function>