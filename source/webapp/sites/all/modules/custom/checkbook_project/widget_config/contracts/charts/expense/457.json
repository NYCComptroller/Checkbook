{
"widgetType": "highcharts",
"header":"
    $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>';
    $header .= ChartUtil::generateGridViewLink($node);
    return $header;
",
"gridConfig":{
   "template":"highchart_contracts_pending_agency_vendor",
   "html_class":"chart-grid-view-table three-columns",
   "table_columns": [
        {
            "labelAlias": "contract_agency",
            "column": "document_agency_name_document_agency_name"
        },
        {
            "labelAlias": "no_of_contracts",
            "column": "total_contracts"
        },
        {
            "labelAlias": "current_amount",
            "column": "total_contract_amount"
        }
   ]
},
"derivedColumns":{
    "agency_formatted":{
        "type":"expression2",
        "expression":"html_entity_decode($row[\"document_agency_short_name_document_agency_short_name\"],ENT_QUOTES);"
    }
},
"datasets":[
    {"name":"agency_short","column":"agency_formatted","type":"string","isArray":true}
],
"model":{
        "join":{
            "method": "LeftOuter",
            "columns": ["document_agency_id_document_agency_id"]
        },
        "series":[
            {
                "dataset": "checkbook:pending_contracts",
                "columns": ["document_agency_id.document_agency_id","document_agency_name.document_agency_name",
                            "document_agency_short_name.document_agency_short_name","total_contract_amount"],
                "defaultParameters":{"latest_flag":"Y"},
                "orderBy": "-total_contract_amount"

            },
            {
                "dataset": "checkbook:pending_contracts",
                "columns": ["document_agency_id.document_agency_id","total_contracts"]
            }
        ]
    },

"defaultParameters":{"document_code.document_code.document_code":"MMA1~MA1~MAR~CT1~CTA1~CTR"},
"adjustParameters":"
            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
"cleanURLParameters":["vendor","agency","awdmethod","csize","cindustry"],
"urlParamMap":{"cindustry":"industry_type_id","vendor":"vendor.vendor","agency":"document_agency_id.document_agency_id","awdmethod":"award_method_id","csize":"award_size.award_size"},
"transformationPHP": "
    $data = array();
    $categories=array();
    $nodeData =  array();
    foreach ($node->data as $row){
        if($row['total_contract_amount'] != 0 && count($data) < 10){
           $link= CustomURLHelper::prepareUrl('contracts_pending_exp_landing', ContractURLHelper::$landingPageParams, array('expandBottomCont'=>'true'), array('agency'=>$row['document_agency_id_document_agency_id']) );
           $categories[]=html_entity_decode($row['document_agency_short_name_document_agency_short_name'],ENT_QUOTES);
           $data[] = (object)array('total_contracts'=>$row['total_contracts'],'y'=>$row['total_contract_amount'],'url'=>$link,'name'=>strtoupper(html_entity_decode($row['document_agency_name_document_agency_name'],ENT_QUOTES)));
           $nodeData[] =  $row;
        }
    }
    $node->data  = $nodeData;
    if(count($data) == 0)
        $node->data = array();
    $node->widgetConfig->chartConfig->series[0]->data = $data;
    $node->widgetConfig->chartConfig->xAxis->categories = $categories;
    $node->widgetConfig->chartConfig->series[0]->name = 'Contract Amount';
    $node->widgetConfig->chartTitle = _checkbook_project_getChartTitle('contracts','Top Ten Agencies','by');

    return $node->data;
",
"chartConfig": {
    "chart": {"defaultSeriesType": "column"},
    "colors":["#7DB7E5"],
    "legend": {
        "enabled": false,
        "align": "left",
        "verticalAlign": "bottom",
        "floating": "true",
        "layout": "horizontal"
    },
    "xAxis": {
        "title": {"text": ""},
       "categories":{"ds":"agency_short"}
    },
    "yAxis": {
        "title": {"text": ""},
        "labels":{"function":"yAxisFormatter"}
    },
    "tooltip": {
        "function": "agencyTooltip"
    },
    "title": {"text": ""},
    "plotOptions": {
        "column": {
            "pointWidth":30
        },
        "series": {
            "cursor": "pointer",
            "point": {
                "events": {
                    "function": "clickEvent"
                }
            }
        }
    },
    "series": [],
    "title":{"text":""}
}
}
<function>yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
agencyTooltip^^"formatter": function(){
    return 'Contracting Agency: '+ this.point.name+'<br>Number of Contracts: '+Highcharts.numberFormat(this.point.total_contracts,0)+'<br/>Amount: '+abbrNum(this.y,2,'$')}##
clickEvent^^"click": function(){
    location.href = Drupal.settings.basePath+this.url; }
</function>
