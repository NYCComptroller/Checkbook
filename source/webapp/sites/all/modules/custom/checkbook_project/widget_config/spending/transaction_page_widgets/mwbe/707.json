{
    "widgetType":"data_tables",
    "widgetSubType":"dataTableList",
    "cleanURLParameters":[
        "deptnm","expcategorynm","year","calyear","yeartype","status","agency","vendor","expcategory","category",
        "checkamtr","dept","syear","scalyear","magid","agid","cvendor","cagency","awdmethod","csize","cindustry",
        "doctype","month","industry","mwbe","contnum","vendortype","fvendor","bdgcode", "pscert"],
    "urlParamMap":{
        "deptnm":"disb_department_short_name","expcategorynm":"disb_expenditure_object_name","year":"disb_fiscal_year_id",
        "calyear":"disb_fiscal_year_id","yeartype":"type_of_year","status":"status_flag","agency":"disb_agency_id",
        "vendor":"disb_vendor_id","expcategory":"disb_expenditure_object_id","category":"disb_spending_category_id",
        "checkamtr":"disb_check_amount","dept":"disb_department_id","syear":"disb_fiscal_year_id",
        "scalyear":"disb_fiscal_year_id","magid":"disb_master_agreement_id","agid":"disb_agreement_id",
        "cvendor":"prime_vendor_id","cagency":"document_agency_id","awdmethod":"award_method_id","csize":"award_size_id",
        "cindustry":"industry_type_id","doctype":"document_code@checkbook:ref_document_code",
        "month":"disb_check_eft_issued_cal_month_id",
        "mwbe":"disb_minority_type_id","industry":"industry_type_id","contnum":"disb_contract_number",
        "fvendor":"disb_vendor_id","vendortype":"disb_vendor_type","bdgcode":"budget_name_code","pscert":"is_women_owned"},
    "paramTypeConfig":{"doctype":"in","checkamtr":"rangeid","syear":"le","scalyear":"le","deptnm":"eqignorecase","expcategorynm":"eqignorecase"},
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "stickyHeader":true,
    "getTotalDataCount":true,
    "limit":"20",
    "noDataInitialLoad":true,
    "html_class":"initiative-table",
    "no_results_content":"No Results Found",
    "dataset":"checkbook:contracts_all_spending_transactions",
    "uniqueSortColumn":"disbursement_line_item_id",
    "columns": [
        "disb_disbursement_number",
        "disb_vendor_name",
        "disb_check_eft_issued_date",
        "disb_agency_name",
        "disb_department_short_name",
        "disb_check_amount",
        "disb_expenditure_object_name",
        "disb_budget_name",
        "disb_contract_number",
        "disb_purpose",
        "disb_reporting_code",
        "disb_spending_category_name",
        "disb_agency_id",
        "disb_vendor_id",
        "disb_expenditure_object_id",
        "disb_department_id",
        "disb_spending_category_id",
        "disb_agreement_id",
        "document_code@checkbook:ref_document_code",
        "disb_minority_type_id",
        "disb_vendor_type",
        "disb_sub_contract_id",
        "legal_name@checkbook:prime_vendor",
        "industry_type_id",
        "industry_type_name@checkbook:industry_type",
        "is_women_owned",
        "is_emerging",
        "budget_name_code"
    ],
    "caption":"",
    "derivedColumns": {
        "associated_prime_vendor_name":{
            "expression":"(preg_match('/S/', $row['disb_vendor_type'])) ? _get_tooltip_markup($row['legal_name@checkbook:prime_vendor'], 34) : 'N/A'"
        },
        "is_sub_vendor": {
            "expression":"(preg_match('/S/', $row['disb_vendor_type'])) ? 'Yes' : 'No'"
        },
        "agency_name_formatted":{
            "expression":"_get_tooltip_markup($row['disb_agency_name'], 30)"
        },
        "agency_name_link": {
            "expression":" RequestUtil::isNewWindow() ? $row['agency_name_formatted']  : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string() . _checkbook_append_url_params() . _checkbook_project_get_url_param_string('category') . '/agency/'. $row['disb_agency_id']. '?expandBottomCont=true>'. $row['agency_name_formatted'] .'</a>') "
        },
        "agency_param":{
            "expression":"(_checkbook_check_isEDCPage()? _checkbook_project_get_url_param_string(\"agency\") :'')"
        },
        "payee_name_formatted":{
            "expression": "_get_tooltip_markup($row['disb_vendor_name'], 50)"
        },
        "payee_name_export":{
            "expression": "$row['disb_vendor_name']"
        },
        "payee_name_link": {
            "expression": " RequestUtil::isNewWindow() ||  $row['disb_spending_category_id']==2 ?  $row['payee_name_formatted'] : ('<a href=\"' . SpendingUtil::getPrimeVendorNameLinkUrl($node,$row) . '?expandBottomCont=true' . '\">'. $row['payee_name_formatted'] .'</a>') "
        },
        "formatted_check_amount": {
            "expression":"custom_number_formatter_basic_format($row['disb_check_amount'])"
        },
        "contract_number_link_actual": {
            "expression":"($row['disb_spending_category_name'] == 'Payroll' ||  $row['disb_spending_category_name'] == 'Others') ? 'n/a' : $row['disb_contract_number']"
        },
        "contract_number_link": {
            "expression":"ContractURLHelper::prepareSpendingContractTransactionsLink($row, $node)"
        },
        "fms_document_link": {
            "expression":"($row['disb_spending_category_name'] == 'Payroll' ||  $row['disb_spending_category_name'] == 'Others') ? 'n/a' : '' "
        },
        "purpose_formatted":{
            "expression":"_get_tooltip_markup($row['disb_purpose'], 30)"
        },
        "contract_purpose_text":{
            "expression":"($row['disb_spending_category_name'] == 'Payroll' ||  $row['disb_spending_category_name'] == 'Others') ? 'n/a' : $row['purpose_formatted']"
        },
        "budget_name_formatted":{
            "expression":"_get_tooltip_markup($row['oge_budget_name'], 36)"
        },
        "mwbe_category_name": {
            "expression":"MappingUtil::getMinorityCategoryById($row['disb_minority_type_id'])"
        },
        "sub_contract_reference_id_formatted": {
            "expression":"$row['disb_sub_contract_id'] == null ? 'N/A' : $row['disb_sub_contract_id']"
        },
        "document_id_formatted": {
            "expression":"$row['disb_disbursement_number'] == null ? 'N/A' : $row['disb_disbursement_number']"
        },
        "industry_name_formatted": {
            "expression": "_get_tooltip_markup($row['industry_type_name@checkbook:industry_type'],36)"
        }
    },
    "table_columns": [
        {"labelAlias":"document_id","column":"document_id_formatted","sortSourceColumn":"disb_disbursement_number","exportColumn":"document_id_formatted"},
        {"labelAlias":"payee_name","column":"payee_name_link","sortSourceColumn":"disb_vendor_name"},
        {"labelAlias":"is_sub_vendor","column":"is_sub_vendor","sortSourceColumn":"disb_vendor_type","exportColumn":"is_sub_vendor"},
        {"labelAlias":"associated_prime_vendor","column":"associated_prime_vendor_name","sortSourceColumn":"legal_name@checkbook:prime_vendor","exportColumn":"associated_prime_vendor_name"},
        {"labelAlias":"issue_date","column":"disb_check_eft_issued_date"},
        {"labelAlias":"agency_name","column":"agency_name_link","sortSourceColumn":"disb_agency_name"},
        {"labelAlias":"dept_name","column":"disb_department_short_name"},
        {"labelAlias":"check_amount","column":"formatted_check_amount","sortSourceColumn":"disb_check_amount"},
        {"label":"","column":"","export":false},
        {"labelAlias":"expense_category","column":"disb_expenditure_object_name"},
        {"labelAlias":"industry_name","column":"industry_name_formatted","sortSourceColumn":"industry_type_name@checkbook:industry_type"},
        {"labelAlias":"contract_id","column":"contract_number_link","sortSourceColumn":"disb_contract_number"},
        {"labelAlias":"sub_contract_reference_id","column":"sub_contract_reference_id_formatted","sortSourceColumn":"disb_sub_contract_id","exportColumn":"sub_contract_reference_id_formatted"},
        {"labelAlias":"contract_purpose","column":"contract_purpose_text","sortSourceColumn":"disb_purpose"},
        {"labelAlias":"capital_project","column":"disb_reporting_code"},
        {"labelAlias":"spending_category","column":"disb_spending_category_name"},
        {"labelAlias":"mwbe_category","column":"mwbe_category_name","sortSourceColumn":"disb_minority_type_id","exportColumn":"mwbe_category_name"},
        {"labelAlias": "woman_owned_business","column":"is_women_owned"},
        {"labelAlias": "emerging_business","column":"is_emerging"},
        {"labelAlias":"budget_code","column":"budget_name_code"}
    ],
    "exportColumnSqlOverride":[
        {
            "column":"mwbe_category_name",
            "sourceColumn":"disb_minority_type_id",
            "sql":"
                case
                when disb_minority_type_id = 2 then 'Black American'
                when disb_minority_type_id = 3 then 'Hispanic American'
                when disb_minority_type_id = 6 then 'Native American'
                when disb_minority_type_id = 7 then 'Non-M/WBE'
                when disb_minority_type_id = 9 then 'Women (Non-Minority)'
                when disb_minority_type_id = 11 then 'Individuals and Others'
                when disb_minority_type_id = 99 then 'Emerging (Non-Minority)'
                else 'Asian American'
                end as minority_type_name
            "
        },
        {
            "column":"is_sub_vendor",
            "sourceColumn":"disb_vendor_type",
            "sql":"case when is_prime_or_sub = 'P' then 'No' else 'Yes' end as disb_vendor"
        },
        {
            "column":"associated_prime_vendor_name",
            "sourceColumn":"legal_name",
            "sql":"case when is_prime_or_sub = 'S' then legal_name else 'N/A' end"
        },
        {
        "column":"sub_contract_reference_id_formatted",
        "sourceColumn":"disb_sub_contract_id",
        "sql":"case when disb_sub_contract_id IS NOT NULL then disb_sub_contract_id else 'N/A' end"
        }
    ],
    "adjustParameters":"

        if(isset($parameters['disb_vendor_type'])){
            $parameters['disb_vendor_type'] = MappingUtil::getVendorTypeValue($parameters['disb_vendor_type']);
        }
        $year = $parameters['disb_fiscal_year_id'];
        if(isset($year)){
            $parameters['fiscal_year_id'] = $year;
        }
        if(RequestUtilities::getRequestParamValue('dashboard') == null) {
            if(isset($parameters['disb_vendor_id']) && RequestUtilities::getRequestParamValue('fvendor') == null) {
                $parameters['prime_vendor_id'] = $parameters['disb_vendor_id'];
                unset($parameters['disb_vendor_id']);
            }
        }
        else {
            $parameters['is_prime_or_sub'] = 'P';
        }
        //Adjust Certification parameters
        $parameters = ContractUtil::adjustCertificationFacetParameters($node,$parameters);
        $adjustedParameters = $parameters;
        if(function_exists('_checkbook_project_applyParameterFilters')){
            $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        return $adjustedParameters;
    ",
    "adjustDataTableOptions":"
              $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;

              $rpp = RequestUtilities::getRequestParamValue('rpp');
                 if(is_numeric($rpp) ){
                        $adjustDataTableOptions->iDisplayLength = (int)$rpp;
                 }
    ",
    "dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "iDisplayLength":20,
        "bPaginate": true,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo":"Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aoColumns":[
            {"sClass":"text","sWidth":"170px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"190px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"100px","bSortable": false,"asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"170px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"200px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"90px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"135px","asSorting":["desc","asc"]},
            {"bSortable":false,"sWidth":"20px"},
            {"sClass":"text pad-left","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","bSortable": false,"asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"110px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"120px","asSorting": [ "asc","desc" ]}
        ],
        "aaSorting":[[7,"desc"]],
        "sScrollX":"100%",
        "bScrollCollapse": false,
        "fnInitComplete":"##function () { new FixedColumns( oTable, {
        \"iLeftColumns\": 1,
        \"iLeftWidth\": 170
        } );}##"
    },
    "customExternalJS":"function prepareTableListFilterUrl(){
        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
            agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oVendorNms = getNamedFilterCriteria('fvendorNm');
        var oVendorType = getNamedFilterCriteria('fvendorType');
        var oCategoryIds = getNamedFilterCriteria('fCategoryNm');
        var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
        var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
        var oDeptIds = getNamedFilterCriteria('fdeptNm');
        var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');
        var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');
        var oPrimeSubCert = getNamedFilterCriteria('fPrimeSubCert');
         var oBudgetCode = getNamedFilterCriteria('fBudgetCode');

        var  cUrl = oTable.fnSettings().sAjaxSource;
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'fvendor',oVendorIds);
        cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
        cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
        cUrl = adjustUrlParameter(cUrl,'expcategorynm',oCategoryIds);
        cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
        cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
        cUrl = adjustUrlParameter(cUrl,'deptnm',oDeptIds);
        cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
        cUrl = adjustUrlParameter(cUrl,'industry',oIndustryType);
        cUrl = adjustUrlParameter(cUrl,'pscert',oPrimeSubCert);
        cUrl = adjustUrlParameter(cUrl,'bdgcode',oBudgetCode);

           return cUrl;
    }"
}
