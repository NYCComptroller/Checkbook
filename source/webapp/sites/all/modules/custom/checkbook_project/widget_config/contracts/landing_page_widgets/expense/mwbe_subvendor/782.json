{
    "widgetType": "data_tables",
    "widgetSubType":"ajaxSimple",
    "no_results_content":"No Results Found",
    "getTotalDataCount":true,
    "defaultParameters":{"type_of_year":"B","document_code.document_code.document_code":"CTA1~CT1","dollar_difference":"0","status_flag":"A"},
    "cleanURLParameters":["mwbe","year","calyear","agency","yeartype","vendor","status","agid","cagency","cvendor",
        "subvendor","csize","cindustry","awdmethod"],
    "urlParamMap":{"mwbe":"minority_type_id","calyear":"fiscal_year_id","year":"fiscal_year_id","agency":"agency_id",
        "yeartype":"type_of_year","vendor":"prime_vendor_id","status":"status_flag","subvendor":"vendor_id",
        "agid":"original_agreement.original_agreement","cagency":"agency_id","cvendor":"prime_vendor_id",
        "csize":"award_size_id","cindustry":"industry_type_id","awdmethod":"award_method_id"},
    "dataset": "checkbook:subven_contracts_coa_aggregates",
    "noDataInitialLoad":true,
    "columns": ["sub_contract_number.sub_contract_number.original_agreement_id","agency.agency","vendor.vendor","contract_purpose.contract_purpose","contract_number.contract_number",
        "agency.agency.agency_short_name","subvendor.subvendor.legal_name","original_amount_sum","current_amount_sum",
        "yeartype.yeartype","dollar_difference","percent_difference","spending_amount_sum",
        "original_agreement.original_agreement","document_code.document_code.document_code",
        "agency.agency.agency_name","subvendor.subvendor"],
    "defaultParamTypeConfig":{"dollar_difference":"ne"},
    "adjustParameters":"
    $adjustedParameters = $parameters;
if(function_exists('_checkbook_project_applyParameterFilters')){
$adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
}
//showing 'No matching records found' message in OGE (Replacing the document code with some random text)
if(_checkbook_check_isEDCPage()){
foreach($adjustedParameters['document_code.document_code.document_code'] as $key=>$value)
{
$adjustedParameters['document_code.document_code.document_code'][$key] = 'abc';
}
}
return $adjustedParameters;
",
"limit":5,
"enableExpand":true,
"derivedColumns": {
"agency_name_formatted": {
"type": "expression2",
"expression": "_get_tooltip_markup($row['agency_agency_agency_name'],25)"
},
"subvendor_name_formatted": {
"type": "expression2",
"expression": "_get_tooltip_markup($row['subvendor_subvendor_legal_name'],40)"
},
"agency_name_link": {
"type": "expression2",
"expression": "'<a href=\"/contracts_landing' .  _checkbook_project_get_url_param_string(\"status\")  .   _checkbook_project_get_year_url_param_string() . _checkbook_append_url_params() .'/agency/' . $row[agency_agency] .  '?expandBottomCont=true\">' .$row[agency_name_formatted]. '</a>'"
},
"subvendor_name_link": {
"type": "expression2",
"expression": "'<a href=\"/contracts_landing'  . _checkbook_project_get_url_param_string(\"agency\") .  _checkbook_project_get_url_param_string(\"status\") . _checkbook_append_url_params() .  _checkbook_project_get_url_param_string(\"cindustry\") .  _checkbook_project_get_url_param_string(\"csize\")  . _checkbook_project_get_url_param_string(\"awdmethod\") . _checkbook_project_get_url_param_string(\"vendor\") .   _checkbook_project_get_year_url_param_string()  .   '/subvendor/' .$row[subvendor_subvendor].  '?expandBottomCont=true\">' .$row[subvendor_name_formatted]. '</a>'"
} ,
"vendor_name_formatted": {
"type": "expression2",
"expression": "_get_tooltip_markup($row['vendor_vendor_legal_name'],32)"
},
"vendor_name_link": {
"type": "expression2",
"expression": "'<a href=\"/contracts_landing'  . _checkbook_project_get_url_param_string(\"agency\") .  _checkbook_project_get_url_param_string(\"status\") . _checkbook_append_url_params() .  _checkbook_project_get_url_param_string(\"cindustry\") .  _checkbook_project_get_url_param_string(\"csize\") ._checkbook_project_get_url_param_string(\"svendor\")  . _checkbook_project_get_url_param_string(\"awdmethod\") .   _checkbook_project_get_year_url_param_string()  .   '/vendor/' .$row[vendor_vendor].  '?expandBottomCont=true\">' .$row[vendor_name_formatted]. '</a>'"
} ,
"contract_link": {
"type": "expression2",
"expression": "'<a class=\"bottomContainerReload\" href=\"/panel_html/contract_transactions/contract_details/agid/' .$row[sub_contract_number_sub_contract_number_original_agreement_id]  .  '/doctype/'   . $row[document_code_document_code_document_code]  . _checkbook_append_url_params()  . '\">' . $row['contract_number_contract_number'] . '</a>'"
} ,
"spent_amount_link": {
"type": "expression2",
"expression": "'<a class=\"new_window\" href=\"/contract/spending/transactions/agid/' .$row[original_agreement_original_agreement] .   _checkbook_project_get_url_param_string(\"status\") .  ContractURLHelper::_checkbook_project_spending_get_year_url_param_string()  . _checkbook_append_url_params() . '/smnid/' . $node->nid .  '/newwindow\">' . '$' . custom_number_formatter_format($row['spending_amount_sum'],2). '</a>'"
} ,
"formatted_original_amount_sum": {
"type": "expression2",
"expression": " '$' . custom_number_formatter_format($row['original_amount_sum'],2)"
},
"formatted_total_current_amount_sum": {
"type": "expression2",
"expression": " '$' . custom_number_formatter_format($row['current_amount_sum'],2)"
},
"formatted_dollar_diff": {
"type": "expression2",
"expression": " custom_number_formatter_format($row['dollar_difference'],2,'$')"
},
"formatted_percent_diff": {
"type": "expression2",
"expression": "round($row['percent_difference'],2) . '%'"
},
"purpose_formatted": {
"type": "expression2",
"expression": "_get_tooltip_markup($row['contract_purpose_contract_purpose'],26)"
}
},
"disableViewAll":true,
"header":"
$node->widgetConfig->getData=false;
load_widget_data($node);
if($node->totalDataCount > 4) $count = '<span class=\"hideOnExpand\">5 </span>';
$header='<div class=\"tableHeader\"><h2>Top ' . $count . 'Contract Amount Modifications</h2><span class=\"contCount\"> Number of Contract Modifications:  ' . number_format($node->totalDataCount) . '</span></div>';
return $header;
",
"footer":"
$url = '/panel_html/contract_details/contract/transactions/contcat/expense'. _checkbook_project_get_url_param_string('status','contstatus');
$url .= _checkbook_project_get_url_param_string('agency');
$url .= _checkbook_project_get_url_param_string('vendor');
$url .= _checkbook_project_get_url_param_string('awdmethod');
$url .= _checkbook_project_get_url_param_string('csize');
$url .= _checkbook_project_get_url_param_string('cindustry');
$url .= _checkbook_project_get_year_url_param_string();
$url .= _checkbook_append_url_params();
$url .= '/smnid/' .  $node->nid;
$url .= '/doctype/CTA1~CT1';
$url .= '/modamt/0';
$footer = '';
if($node->totalDataCount > 0)
$footer = \"<a class='show-details bottomContainerReload' href='$url'>Details >></a>\";
else
$footer = \"<a class='show-details bottomContainerReload' href='$url' style='display:none;'>Details >></a>\";
return $footer;
",
"summaryView":{
"template":"contract_summary_expense_contract_modification",
"templateTitle":"Sub Contract Amount Modification Spending Transactions"
},
"widgetTitle":"Sub Contract Amount Modifications",
"table_title":"",
"table_columns": [
{
"labelAlias": "contract_id",
"column": "contract_link"
},
{
"labelAlias": "contract_purpose",
"column": "purpose_formatted"
},
{
"labelAlias": "contract_agency",
"column": "agency_name_link",
"sortSourceColumn":"agency.agency.agency_short_name"
},
{
"labelAlias": "prime_vendor",
"column": "vendor_name_link",
"sortSourceColumn":"vendor.vendor.legal_name"
},
{
"labelAlias": "current_amount",
"column": "formatted_total_current_amount_sum",
"sortSourceColumn":"current_amount_sum"
},
{
"labelAlias": "original_amount",
"column": "formatted_original_amount_sum",
"sortSourceColumn":"original_amount_sum"
},
{
"labelAlias": "spent_to_date",
"column": "spent_amount_link",
"sortSourceColumn":"spending_amount_sum"
},
{
"labelAlias": "dollar_diff",
"column": "formatted_dollar_diff",
"sortSourceColumn":"dollar_difference"
},
{
"labelAlias": "percent_diff",
"column": "formatted_percent_diff",
"sortSourceColumn":"percent_difference"
},
{
"label": "",
"column": ""
}
],
"dataTableOptions":{
"aoColumns": [
{ "bSortable": false, "sWidth":"150px","sClass":"text" },
{ "bSortable": false, "sWidth":"132px","sClass":"text"  },
{ "bSortable": false, "sWidth":"118px","sClass":"text"  },
{ "bSortable": false, "sWidth":"90px","sClass":"text" },
{ "bSortable": true, "sWidth":"79px", "sClass":"number"  ,"asSorting": [ "desc" ,"asc" ]},
{ "bSortable": true, "sWidth":"78px", "sClass":"number"  ,"asSorting": [ "desc" ,"asc" ]},
{ "bSortable": true, "sWidth":"90px","sClass":"number" ,"asSorting": [ "desc","asc"  ]},
{ "bSortable": true, "sWidth":"93px", "sClass":"number" ,"asSorting": [ "desc","asc"  ]},
{ "bSortable": true, "sWidth":"93px", "sClass":"number" ,"asSorting": [ "desc","asc"  ]},
{ "bSortable": false,"sWidth":"15px" }
] ,
"bServerSide": true,
"bFilter": false,
"bPaginate": false,
"bProcessing":true,
"bLengthChange": false,
"bInfo": false,
"bAutoWidth": false,
"aaSorting": [[ 7, "desc" ]],
"fnServerParams": "##function ( aoData ) {
reloadExpandCollapseWidget(this,aoData);
}##",
"oLanguage":{
"sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
}
}
}