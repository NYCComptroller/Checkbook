{
  "widgetType": "highcharts",
  "widgetSubType": "highstock",
  "html_class": "thumbnail",
  "header":"
    print '<h2 class=\"chart-title\">Personal Income</h2>
      <div class=\"featured-trends-filter\" id=\"personal-income-filter\">
      <div class=\"filter-container\">
      <input type=\"text\" class=\"chartdatefrom\" maxlength=\"4\" size=\"4\">
      <label> to </label>
      <input type=\"text\" class=\"chartdateto\" maxlength=\"4\" size=\"4\"></div>
      <input type=\"submit\" value=\"Filter\" class=\"chartfilter\" name=\"3\" />
      </div>';",
  "footer":"
    print '<div class=\"detail-page-links\">
      <a class=\"show-detail-link\" href=\"/featuredtrends/node/353\">Show Details for Personal Income</a>
      </div>';",
  "callback":"
    var axis = chart.xAxis[0].getExtremes();
    var max = Number(Highcharts.dateFormat('%Y',axis.max));
    var min = max-9;
    chart.xAxis[0].setExtremes(Date.UTC(min, 0), Date.UTC(max, 1), true);
    jQuery('#personal-income-filter .chartdatefrom').val(min);
    jQuery('#personal-income-filter .chartdateto').val(max);
  ",
  "dataset": "checkbook:trends_personal_income",
  "orderBy": "fiscal_year.fiscal_year",
  "defaultParameters": {"display_yn":"Y"},
  "paramTypeConfig": { "fiscal_year.fiscal_year": "range"},
  "columns": ["fiscal_year.fiscal_year", "income_or_population"],
  "derivedColumns": {
    "fiscal_year_date": {"expression": "$row['fiscal_year'] . '-1-1'"},
    "fiscal_year_utc": {"expression": "strtotime($row['fiscal_year_fiscal_year'] . '-1-1') * 1000"},
    "income_color": {"expression":"($row['income_or_population'] == 0) ? '#C4C4C4' : '#FFDE15'"},
    "mod_amount":{ "expression":"$row['income_or_population'] * 1000"}
  },
  "datasets": [
    {
      "name": "amount",
      "columns": [
        {"name": "x", "value": "fiscal_year_utc"},
        {"name": "y", "value": "mod_amount"},
        {"name":"color", "value":"income_color"}
      ],
      "isArray": true,
      "type":"string"
    }
  ],
  "chartConfig": {
    "chart": {
        "height": 600,
        "width": 940,
        "spacingTop": 0,
        "spacingRight": 0,
        "spacingLeft": 0,
        "spacingBottom": 30,
        "backgroundColor":"rgba(255,255,255,0)",
        "margin": [ 50, 50, 50, 80]
    },
    "plotOptions": {
      "series":{
        "minPointLength": 100,
        "dataLabels": {
          "enabled": true,
          "function": "dataLabelFormatter",
          "rotation": -90,
          "inside": true,
          "y": -2,
          "style": {"fontSize": "9px" }
        }
      }
    },
    "title": {
      "style": {"fontSize": "16px" },
      "margin": 0
    },
    "xAxis": {
      "minRange": 31557600000,//Axis minRange prevents zooming in too far - set to 1year
      "tickInterval": 31557600000,//Interval of one year is expressed as 365 * 24 * 3600 * 1000
      "labels": {
        "enabled":true,
        "style": {"fontSize":"11px"}
      },
      "events":{
        "function":"numbers"
      }
    },
    "series": [
      {
        "name": "Tax Revenue Amount",
        "type": "column",
        "data": { "ds": "amount"}
      }
    ],
    "yAxis": {
      "opposite":false,
      "lineWidth": 1,
      "gridLineWidth": 0,
      "startOnTick": true,
      "title": {
        "text": "",
        "style": {"fontSize": "16px"},
        "offset": 60
      },
      "labels": {
        "align": "right",
        "x": -2,
        "rotation": 0,
        "function": "yaxisformatter",
        "style": {"fontSize": "11px"}
      }
    },
    "legend": {
        "enabled": false
    },
    "tooltip": {
        "crosshairs":false,
        "function": "tooltipformatter"
    },
    "scrollbar": {
        "enabled": true
    },
    "navigator": {
        "enabled": true,
        "xAxis":{"labels":{"enabled":true}}
    },
    "rangeSelector": {
      "enabled": false
    },
    "linkOptions": [
      {"text": "<a class=\"show-detail-link\" href=\"/featuredtrends/node/353\">Show Details for Personal Income Tax Revenues</a>"}
    ]
  }
}
<function>
yaxisformatter^^'formatter' : function() {
    return yAxisLabelFormatter(this);
}##
tooltipformatter^^'formatter' : function() {
  return this.points[0].series.name + ': ' + abbrNum(this.y, 2, '$');
}##
dataLabelFormatter^^'formatter':function(){
  if (this.y === 0){
    return "Data Not Available";
  } else {
    return null;
  }
}##
numbers^^"setExtremes": function(event){

if(Number(Highcharts.dateFormat('%Y',this.chart.xAxis[0].getExtremes().dataMin)) != Number(Highcharts.dateFormat('%Y',event.min))){
  jQuery('#personal-income-filter .chartdatefrom').val(Number(Highcharts.dateFormat('%Y',event.min)) + 1);
} else {
  jQuery('#personal-income-filter .chartdatefrom').val(Number(Highcharts.dateFormat('%Y',event.min)));
}
  jQuery('#personal-income-filter .chartdateto').val(Highcharts.dateFormat('%Y',event.max));
}
</function>
