{
"widgetType": "data_tables",
"widgetSubType": "dataTableList",
"cleanURLParameters":["year","empnm","agencyh","payfq","paydate","baseamt","overamt","otheramt","grossamt","totalgrosspay","salamt","salamttype","agency"],
"urlParamMap":{"year":"fiscal_year_id","empnm":"civil_service_title","agencyh":"agency_history_id","payfq":"pay_frequency","paydate":"pay_date","baseamt":"base_pay","overamt":"overtime_pay","otheramt":"other_payments","grossamt":"gross_pay","totalgrosspay":"gross_pay_ytd","salamt":"annual_salary","salamttype":"amount_basis_id","agency":"agency_id"},
"paramTypeConfig":{"empnm":"like","paydate":"range","baseamt":"range","overamt":"range","otheramt":"range","grossamt":"range","totalgrosspay":"range","salamt":"range"},
"header":"
	$header = NULL;
	$header .= widget_data_tables_export_link($node);
	return $header;
",
"useList":true,
"getTotalDataCount":true,
"limit":"10",
"noDataInitialLoad":true,
"html_class": "initiative-table",
"no_results_content":"No Results Found",
"dataset": "checkbook:payroll",
"columns": ["employee_number","civil_service_title","pay_frequency","pay_date","annual_salary","gross_pay","base_pay","other_payments","overtime_pay","gross_pay_ytd","fiscal_year_id","agency_id","employee_id","agency_name","amount_basis_id","salaried_amount","non_salaried_amount"],
"additionalSelectColumns":["amount_basis_id"],
"caption":"",
"derivedColumns": {
       "employee_name_formatted": {
              "type": "expression2",
              "expression": "_get_tooltip_markup($row['civil_service_title'],30)"
       },
       "agency_name_formatted": {
              "type": "expression2",
              "expression": "_get_tooltip_markup($row['agency_name'],30)"
       },
       "employee_name_link": {
		"type": "expression2",
                "expression": "'<a href=/payroll/yeartype/B/year/' . $row[fiscal_year_id] . '?expandBottomContURL=/panel_html/payroll_employee_transactions/payroll/employee/transactions/xyz/'. $row[employee_id] . '/year/' . $row[fiscal_year_id] . '/yeartype/B' . '>'. $row[employee_name_formatted] .'</a>'"
	},
        "agency_name_link": {
		"type": "expression2",
                "expression": "'<a href=/payroll/agency/'. $row[agency_id] . '/yeartype/B/year/' . $row[fiscal_year_id] . '>'. $row[agency_name_formatted] .'</a>'"
	},
        "formatted_salary_amount": {
	      "type": "expression2",
	      "expression": " $row['amount_basis_id'] === 1 ? custom_number_formatter_basic_format($row['salaried_amount'])  : '-'  "
	},
	"formatted_non_salary_amount": {
	      "type": "expression2",
              "expression": " $row['amount_basis_id'] === 1 ? '-' : custom_number_formatter_basic_format($row['non_salaried_amount'])"
	},
        "export_salary_amount": {
	      "type": "expression2",
	      "expression": " $row['amount_basis_id'] === 1 ? $row['salaried_amount']  : NULL "
	},
	"export_non_salary_amount": {
	      "type": "expression2",
              "expression": " $row['amount_basis_id'] === 1? NULL : $row['non_salaried_amount']"
	},
       "formatted_gross_pay_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['gross_pay'])"
	},
	"formatted_base_pay_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['base_pay'])"
	},
	"formatted_other_payments_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['other_payments'])"
	},
	"formatted_overtime_pay_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['overtime_pay'])"
	},
	"formatted_gross_pay_ytd_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['gross_pay_ytd'])"
	}
},
"table_columns": [
            {"labelAlias": "title","column": "employee_name_link","sortSourceColumn": "civil_service_title"},
            {"labelAlias": "agency_name","column": "agency_name_link","sortSourceColumn": "agency_name"},
	        {"labelAlias": "pay_frequency","column": "pay_frequency"},
	        {"labelAlias": "pay_date","column": "pay_date"},
            {"labelAlias": "annual_salary","column": "formatted_salary_amount","sortSourceColumn": "salaried_amount","exportColumn":"export_salary_amount"},
            {"labelAlias": "hourly_rate","column": "formatted_non_salary_amount","sortSourceColumn": "non_salaried_amount","exportColumn":"export_non_salary_amount"},
            {"labelAlias": "gross_pay","column": "formatted_gross_pay_amount","sortSourceColumn": "gross_pay"},
            {"labelAlias": "base_pay","column": "formatted_base_pay_amount","sortSourceColumn": "base_pay"},
            {"labelAlias": "other_pays","column": "formatted_other_payments_amount","sortSourceColumn": "other_payments"},
            {"labelAlias": "overtime_pay","column": "formatted_overtime_pay_amount","sortSourceColumn": "overtime_pay"},
            {"labelAlias": "gross_pay_ytd","column": "formatted_gross_pay_ytd_amount","sortSourceColumn": "gross_pay_ytd"}
	  ],
"adjustParameters":"

            $sortingCol = $_REQUEST['iSortCol_0'];
            if($sortingCol == 4){//annual sal
                   array_unshift($config->orderBy, 'amount_basis_id');
           }else if($sortingCol == 5){//hourly rate
                array_unshift($config->orderBy, '-amount_basis_id');
           }

            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
"dataTableOptions":{
         "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "iDisplayLength":10,
        "bPaginate": true,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aaSorting":[[6,"desc"]],
        "sScrollX": "100%",
         "aoColumns": [
                {"sClass":"text", "sWidth":"135px","asSorting": [ "asc","desc" ]},
		        {"sClass":"text", "sWidth":"135px","asSorting": [ "asc","desc" ]},
                {"sClass":"text", "sWidth":"75px","asSorting": [ "asc","desc" ]},
                {"sClass":"text", "sWidth":"75px","asSorting": [ "asc","desc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number","sWidth":"75px","asSorting": [ "desc","asc" ]},
                {"sClass":"number endCol","sWidth":"100px","asSorting": [ "desc","asc" ]}

        ]
}
}