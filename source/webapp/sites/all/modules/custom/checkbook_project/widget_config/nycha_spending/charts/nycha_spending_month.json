{
  "widgetType": "highcharts",
  "header":"
  $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
  $header .= ChartUtil::generateWidgetGridViewLink($node);
  return $header;
  ",
  "gridConfig":{
    "template":"highchart_spending_fy_grid_view",
    "html_class":"chart-grid-view-table three-columns",
    "table_columns": [
      {
        "labelAlias": "month",
        "column": "month_month_month_name",
        "sortColumn":"sort_order"
      },
      {
        "colLabel": "$node->widgetConfig->chartConfig->series[0]->name",
        "column": "previous_spending",
        "eval":true
      },
      {
        "colLabel": "$node->widgetConfig->chartConfig->series[1]->name",
        "column": "current_spending",
        "eval":true
      }
    ]
  },
  "no_results_content":"No Results Found",
  "cleanURLParameters":["vendor","category","year"],
  "urlParamMap":{"vendor":"vendor_id","category":"spending_category_id","year":"issue_date_year_id"},
  "widgetDataLoader":"
    $year_id = RequestUtilities::getRequestParamValue('year');
    $prev_year_id = $year_id-1;
    $datasource = RequestUtilities::getRequestParamValue('datasource');
    $where_filters = array();
    foreach($node->widgetConfig->requestParams as $param=>$value){
      if($param == 'issue_date_year_id'){
      $where_filters[] = $param .' BETWEEN '. $prev_year_id . ' AND '. $year_id;
      }else{
      $where_filters[] = _widget_build_sql_condition( $param, $value);
      }
    }
    if(count($where_filters) > 0){
      $where_filter = ' WHERE ' . implode(' AND ' , $where_filters);
    }
   $sql = 'SELECT issue_date_year,issue_date_year_id,month_number,month_name, SUM(total_spending) AS spent_amount
           from aggregation_spending_month '. $where_filter .
           ' group by issue_date_year,month_number,month_name ,issue_date_year_id ORDER BY month_number ';
   $node->data  = _checkbook_project_execute_sql($sql,'main',$datasource);
   ",
  "widgetUpdateJSONConfig":"
   $series_previous_temp = array(array());
  $year_id = RequestUtilities::getRequestParamValue('year');
  $prev_year_id = $year_id-1;
  $datasource = RequestUtilities::getRequestParamValue('datasource');
  $categories = array('1','2','3','4','5','6','7','8','9','10','11','12');
  $months = array('January', 'February', 'March', 'April', 'May', 'June', 'July ', 'August', 'September', 'October', 'November', 'December');
  $codes = array($prev_year_id,$year_id);
  $categoryName = NychaSpendingUtil::getCategoryName();
  $node->widgetConfig->chartTitle = $categoryName.' Spending by Month';
    foreach($node->data as $row){
      if ($row['issue_date_year_id'] == $year_id){$curr_year = $row['issue_date_year'];}
      if ($row['issue_date_year_id'] == $prev_year_id){$prev_year = $row['issue_date_year'];}
      $series_previous_temp[$row['issue_date_year_id']][$row['month_number']] = (float)$row['spent_amount'];
    }
  $series_previous = array();
  foreach($codes as $code){
    $prev_series_obj = new stdClass();
      foreach($categories as $category){
          if ($code == $year_id){$codeyear = $curr_year ;}
          if ($code == $prev_year_id){$codeyear = $prev_year ;}
          $issue_date= $codeyear.'-'.$category.'-01~'.$codeyear.'-'.$category.'-31';
          $dynamic_parameter = '/issue_date/' . $issue_date;
          $url = $_GET['q'].'?expandBottomContURL='.NYCHASpendingUrlService::ytdSpendingUrl($dynamic_parameter, 'ytd_issue_date');
          $series_previous[] = (object)array('y'=>$series_previous_temp[$code][$category], 'url'=>$url, 'name'=>'FY '.$code);
    }
  if ($code == $year_id){$code = $curr_year ;}
  if ($code == $prev_year_id){$code = $prev_year ;}
  $prev_series_obj->name = 'FY '.$code;
  $prev_series_obj->data = $series_previous;
  $node->widgetConfig->chartConfig->series[] = $prev_series_obj;
  unset($series_previous);
  }
  $node->widgetConfig->chartConfig->xAxis->categories = $months;
  foreach($categories as $category){
    $node->widgetConfig->gridConfig->data[] = array(
    'month_month_month_value'=>$category-1,
    'month_month_month_name'=>$months[$category-1],
    'current_spending'=>$series_previous_temp[$year_id][$category],
    'current_check_amount_sum'=>$series_previous_temp[$year_id][$category],
    'current_month_month'=>$category-1,
    'previous_spending'=>$series_previous_temp[$prev_year_id][$category],
    'previous_check_amount_sum'=>$series_previous_temp[$prev_year_id][$category],
    'previous_month_month'=>$category-1
    );
  }
  if (isset($node->widgetConfig->gridConfig->data)){
  unset($node->data);
  $node->data = $node->widgetConfig->gridConfig->data;
  return $node->data;
  }

",
  "chartConfig" : {
  "chart": {
  "type": "column"
    },
  "colors":["#D78E35","#7DB7E5","#122E46"],
  "legend": {"align": "left",  "verticalAlign": "bottom", "layout": "horizontal",
  "padding":1, "itemMarginTop": 3, "itemMarginBottom": 3},
  "xAxis":{"labels":{"enabled":false}},
  "yAxis": {"title": {"text": ""}} ,
  "plotOptions": {
  "area": {
  "stacking": "normal",
  "lineColor": "#666666",
  "lineWidth": 1,
  "marker": {
  "lineWidth": 1,
  "lineColor": "#666666"
    }
  },
  "series": {
  "cursor": "pointer",
  "point": {"events": {"function": "clickEvent"}}
  }
  },
  "title": {"text": ""},
"tooltip": {
"enabled": true,
"shared": false,
"crosshairs": false,
"function": "tooltipformatter"
}
}
  }
<function>
yaxisformatter^^'formatter' : function() {
return yAxisLabelFormatter(this);
}##
tooltipformatter^^'formatter' : function() {return 'Month: ' +this.x +'<br>Amount:  '+abbrNum(this.y,2,'$');}
##clickEvent^^"click": function(){ location.href = Drupal.settings.basePath+this.options.url;}
</function>
