{
    "widgetType":"data_tables",
    "widgetSubType":"dataTableList",
    "cleanURLParameters":["doctype", "contstatus", "year", "calyear", "yeartype", "agency", "vendor", "curamtr", "vendornm", "contdesc", "agrmnttypecode", "agencyh", "contnum", "aptpin", "pin",
        "awdmethod", "curamt", "startdate", "enddate", "regdate", "cindustry", "csize", "modamt", "entcontnum_exact", "entcontnum", "comline_exact", "comline", "budname_exact", "budname"],
    "urlParamMap":{
        "doctype":"document_code@checkbook:ref_document_code",
        "contstatus":"status_flag",
        "year":"fiscal_year_id",
        "calyear":"fiscal_year_id",
        "yeartype":"type_of_year",
        "agency":"agency_id",
        "vendor":"vendor_id",
        "curamtr":"maximum_contract_amount",
        "vendornm":"vendor_name",
        "contdesc":"description",
        "agrmnttypecode":"agreement_type_code",
        "agencyh":"agency_history_id",
        "contnum":"contract_number",
        "aptpin":"brd_awd_no",
        "pin":"tracking_number",
        "awdmethod":"award_method_id",
        "curamt":"maximum_contract_amount",
        "startdate":"effective_begin_date",
        "enddate":"effective_end_date",
        "regdate":"registered_date",
        "cindustry":"industry_type_id",
        "csize":"award_size_id",
        "modamt":"dollar_difference",
        "entcontnum_exact":"oge_contract_number",
        "entcontnum":"oge_contract_number",
        "comline_exact":"fms_commodity_line",
        "comline":"fms_commodity_line",
        "budname_exact":"budget_name",
        "budname":"budget_name"
    },
    "allowRequestParams":["smnid"],
    "paramTypeConfig":{
        "budname":"like",
        "entcontnum":"like",
        "comline":"like",
        "entcontnum_exact":"eqignorecase",
        "comline_exact":"eqignorecase",
        "budname_exact":"eqignorecase",
        "curamtr":"rangeid",
        "vendornm":"like",
        "contdesc":"like",
        "contnum":"like",
        "aptpin":"like",
        "pin":"like",
        "curamt":"range",
        "startdate":"range",
        "enddate":"range",
        "regdate":"range",
        "modamt":"ne"
    },
    "defaultParameters":{
        "status_flag":"A",
        "is_vendor_flag":"N",
        "type_of_year":"B",
        "if_for_all_years":"N"
    },
    "header":"
    $header = NULL;
$header .= widget_data_tables_export_link($node);
return $header;
",
"useList":true,
"getTotalDataCount":true,
"limit":"35",
"noDataInitialLoad":true,
"html_class": "initiative-table",
"no_results_content":"No Results Found",
"dataset": "checkbook:agreement_snapshot_oge",
"columns": ["fms_commodity_line","budget_name","oge_contract_number",
"fiscal_year_id",
"type_of_year", "has_children","contract_number",
"original_agreement_id","description","original_contract_amount",
"maximum_contract_amount","spending_amount_disb",
"vendor_name","agency_name","vendor_id","agency_id","agreement_type_name","award_method_name",
"expenditure_object_names","effective_begin_date","effective_end_date","registered_date","brd_awd_no",
"tracking_number","master_agreement_yn","document_code@checkbook:ref_document_code","agency_name@checkbook:agency","legal_name@checkbook:vendor",
"industry_type_name","dollar_difference","percent_difference","master_contract_number","master_agreement_id"],
"caption":"",
"derivedColumns": {
        "child_contrats_link":{
            "type": "expression2",
            "expression": " ($row['has_children'] == 'Y') ? '<span id=dtl_expand class=\"toggler collapsed\"  magid=\"' . $row['original_agreement_id'] . '\" '
            . ( _getRequestParamValue('datasource') != '' ?  ('datasource=\"' . _getRequestParamValue('datasource') . '\"' ) : '')
            . ( _getRequestParamValue('smnid') != '' ?  ('smnid=\"' . _getRequestParamValue('smnid') . '\"' ) : '')
            . ( _getRequestParamValue('year') != '' ?  ('year=\"' . _getRequestParamValue('year') . '\"' ) : '')
            . ( _getRequestParamValue('calyear') != '' ?  ('calyear=\"' . _getRequestParamValue('calyear') . '\"' ) : '')
            . ( _getRequestParamValue('yeartype') != '' ?  ('yeartype=\"' . _getRequestParamValue('yeartype') . '\"' ) : '')
            . ( _getRequestParamValue('contstatus') != '' ?  ('contstatus=\"' . _getRequestParamValue('contstatus') . '\"' ) : '')
            . ('mastercode=\"' . $row['document_code@checkbook:ref_document_code'] . '\"' )
            . '></span>' : '' "
        },
        "contract_link": {
            "type": "expression2",
            "expression": "ContractURLHelper::prepareExpenseContractLink($row, $node)"
        },
        "parent_contract_link": {
            "type": "expression2",
            "expression": "(($row['has_children'] == 'Y') ? 'N/A' : ContractURLHelper::prepareExpenseContractLink($row, $node, true))"
        },
        "parent_contract_export":{
            "type": "expression2",
            "expression": "(($row['has_children'] == 'Y') ? 'N/A' : $row['master_contract_number'])"
        },
        "formatted_original_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['original_contract_amount'])"
        },
        "formatted_current_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['maximum_contract_amount'])"
        },
        "formatted_spent_to_date": {
            "type": "expression2",
            "expression": "ContractURLHelper::_prepare_oge_contracts_spending_url($row, $node)"
        },
        "vendor_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['legal_name@checkbook:vendor'],30)"
        },
        "vendor_name_link": {
            "type": "expression2",
            "expression": "($row['has_children'] != 'Y') ? ('<a href=\"/contracts_landing'
            . _checkbook_append_url_params()
            .(_checkbook_check_isEDCPage() ? ('/agency/'. $row[agency_id]) :'')
            . _checkbook_project_get_url_param_string('agency')
            .  (isset($row['fiscal_year_id']) ? '/year/'.$row['fiscal_year_id'] : '')
            .  (isset($row['type_of_year']) ? '/yeartype/'.$row['type_of_year'] : '')
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            .  '/vendor/' . $row['vendor_id']
            .  '?expandBottomCont=true\">'. $row['vendor_formatted'] . '</a>') : $row['vendor_formatted'] "
        },
        "agency_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agency_name@checkbook:agency'],30)"
        },
        "agency_name_link": {
            "type": "expression2",
            "expression": "($row['has_children'] != 'Y') ? ('<a href=\"/contracts_landing'
            ._checkbook_append_url_params()
            .  (isset($row['fiscal_year_id']) ? '/year/'.$row['fiscal_year_id'] : '')
            .  (isset($row['type_of_year']) ? '/yeartype/'.$row['type_of_year'] : '')
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            . '/agency/' . $row['agency_id']
            .  '?expandBottomCont=true\">'. $row['agency_formatted'] . '</a>') : $row['agency_formatted']  "
        },
        "purpose_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['description'],36)"
        },
        "expense_cat_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['expenditure_object_names'],36)"
        },
        "award_method_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['award_method_name'],36)"
        },
        "contract_type_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agreement_type_name'],36)"
        },
        "industry_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['industry_type_name'],36)"
        },
        "formatted_dollar_diff": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['dollar_difference'])"
        },
        "formatted_percent_diff": {
            "type": "expression2",
            "expression": "round($row['percent_difference'],2) . '%'"
        },
        "budget_name_formatted":{
            "type": "expression2",
            "expression": "_get_tooltip_markup($row[budget_name], 36)"
        },
        "reg_date":{
            "type": "expression2",
            "expression": "(_checkbook_check_isEDCPage()? 'N/A' : 'N/A')"
        }
},
"table_columns": [
        {"label": "<div>&nbsp;</div>","colLabel": "","column": "child_contrats_link","export":false},
        {"labelAlias": "contract_id","column": "contract_link","sortSourceColumn":"contract_number"},
        {"labelAlias": "commodity_line", "datasource": "checkbook_oge","column": "fms_commodity_line"},
        {"labelAlias": "fms_doc_id","column":"parent_contract_link","sortSourceColumn":"master_contract_number","exportColumn":"parent_contract_export"},
        {"labelAlias": "contract_purpose","column": "purpose_formatted","sortSourceColumn":"description"},
        {"labelAlias": "current_amount","column": "formatted_current_amount","sortSourceColumn":"maximum_contract_amount"},
        {"labelAlias": "original_amount","column": "formatted_original_amount","sortSourceColumn":"original_contract_amount"},
        {"labelAlias": "spent_to_date","column": "formatted_spent_to_date","sortSourceColumn":"spending_amount_disb"},
        {"labelAlias": "prime_vendor","column": "vendor_name_link","sortSourceColumn":"legal_name@checkbook:vendor"},
        {"labelAlias": "contract_agency","column": "agency_name_link","sortSourceColumn":"agency_name@checkbook:agency"},
        {"labelAlias": "contract_type","column": "contract_type_formatted","sortSourceColumn":"agreement_type_name"},
        {"labelAlias": "award_method","column": "award_method_formatted","sortSourceColumn":"award_method_name"},
        {"labelAlias": "expense_category","column": "expense_cat_formatted","sortSourceColumn":"expenditure_object_names"},
        {"labelAlias": "contract_industry","column": "industry_name_formatted","sortSourceColumn":"industry_type_name"},
        {"labelAlias": "start_date","column": "effective_begin_date"},
        {"labelAlias": "end_date","column": "effective_end_date"},
        {"labelAlias": "pin","column": "tracking_number"},
        {"labelAlias": "apt_pin","column": "brd_awd_no"},
        {
        "labelAlias":"entity_contact_num",
        "datasource": "checkbook_oge",
        "column":"oge_contract_number"
        },
        {
        "labelAlias":"budget_name",
        "datasource": "checkbook_oge",
        "column":"budget_name_formatted",
        "sortSourceColumn":"budget_name"
        },
        {"label": "<div>&nbsp;</div>","colLabel": "","column": "","export":false}
],
"adjustParameters":"
        if(function_exists('_checkbook_project_adjustContractParameterFilters')){
        _checkbook_project_adjustContractParameterFilters($node,$parameters,'active_registered');
        }
        if(_getRequestParamValue('vendor') || _getRequestParamValue('vendornm')){
        $parameters['is_vendor_flag'] = 'Y';
        }
        if(!(_getRequestParamValue('year') || _getRequestParamValue('calyear'))){
        $parameters['latest_flag'] = 'Y';
        $parameters['if_for_all_years'] = 'Y';
        }
        if(function_exists('_checkbook_project_applyParameterFilters')){
        $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        return $adjustedParameters;
        }

        return $parameters;
",
"adjustDataTableOptions":"
        $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;

        $rpp = _getRequestParamValue('rpp');
        if(is_numeric($rpp) ){
        $adjustDataTableOptions->iDisplayLength = (int)$rpp;
        }

        $smnid = _getRequestParamValue('smnid');
        if(  !($smnid == 480 || $smnid == 366) ){
        foreach($node->widgetConfig->table_columns as $key => $table_column){
        if($table_column->labelAlias == 'dollar_diff' || $table_column->labelAlias == 'percent_diff'){
        unset($node->widgetConfig->table_columns[$key]);
        unset($adjustDataTableOptions->aoColumns[$key]);
        }
        }
        }
        if($smnid == 480 ||  $smnid == 366 ){
        $adjustDataTableOptions->aaSorting[0][0] = 8;
        }
        $node->widgetConfig->table_columns = array_values($node->widgetConfig->table_columns);
        $adjustDataTableOptions->aoColumns = array_values($adjustDataTableOptions->aoColumns);
        if((!preg_match('/MMA/',_getRequestParamValue('doctype')) and !preg_match('/MA/',_getRequestParamValue('doctype'))) || $smnid == 368 || $smnid == 367 || $smnid == 610 || $smnid == 631 || $smnid == 611 || $smnid == 612){
             $adjustDataTableOptions->fnInitComplete = '##function () { new FixedColumns( oTable, {
            \"iLeftColumns\": 2,
            \"iLeftWidth\": 196
            } );}##';
        }        
",
"dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "bPaginate": true,
        "iDisplayLength":35,
        "sPaginationType":"full_numbers",
        "sDom":"<pr><t><ip>",
        "oLanguage": {
        "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
        "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aoColumns": [
        {"sClass":"expander","bSortable": false,"sWidth":"10px"},
        {"sClass":"text-left-no-padding sort","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"number sort", "sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort", "sWidth":"210px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left no-sort","bSortable": false, "sWidth":"155px","asSorting": [ "asc","desc" ]},
        {"sClass":"number sort","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"number sort","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"number sort","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"text-left sort","sWidth":"200px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"170px","asSorting": [ "asc","desc" ]},
        {"sClass":"number sort","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"145px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"200px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"180px","asSorting": [ "asc","desc" ]},
        {"sClass":"text-left sort","sWidth":"140px","asSorting": [ "asc","desc" ]},
        {"sClass":"number sort","sWidth":"110px","asSorting": [ "desc","asc" ]},
        {"sClass":"text-left sort","sWidth":"155px","asSorting": [ "asc","desc" ]},
        {"bSortable": false,"sWidth":"10px"}
        ],
        "aaSorting":[[5,"desc"]],
        "sScrollX": "100%",
        "bScrollCollapse": true
},
"customJS":"jQuery('#dtl_expand').live( 'click',function () {
        var nTr = this.parentNode.parentNode.parentNode;
        if ( jQuery(this).attr('class').match('loader') ){
        //ignore
        return;
        }

        if ( jQuery(this).attr('class').match('expanded') ){
        jQuery(this).removeClass('expanded').addClass('collapsed');
        oTable.fnClose( nTr );
        }else{
        jQuery(this).removeClass('collapsed').addClass('loader');
        fnLoadChildRecords(nTr, jQuery(this));
        }
        } );",
"customExternalJS":"function prepareTableListFilterUrl(){

        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
        agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oCurAmount = getNamedFilterCriteria('fCurAmount');
        var oAwdMethod = getNamedFilterCriteria('fAwdMethodId');
        var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');

        var  cUrl = oTable.fnSettings().sAjaxSource;
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'vendor',oVendorIds);
        cUrl = adjustUrlParameter(cUrl,'curamtr',oCurAmount);
        cUrl = adjustUrlParameter(cUrl,'awdmethod',oAwdMethod);
        cUrl = adjustUrlParameter(cUrl,'cindustry',oIndustryType);

        //remove advance search param if narrow down search is present for amount
        //if(oCurAmount != null && oCurAmount.length > 0 ){
        //     cUrl = adjustUrlParameter(cUrl,'curamt','');
        // }

        return cUrl;
        }

        function fnLoadChildRecords (nTr, oElement)
        {
        var magid = jQuery(oElement).attr('magid');
        var year = jQuery(oElement).attr('year');
        var calyear = jQuery(oElement).attr('calyear');
        var yeartype = jQuery(oElement).attr('yeartype');
        var contstatus = jQuery(oElement).attr('contstatus');
        var mastercode = jQuery(oElement).attr('mastercode');

        //fallback for error
        magid = (magid == null || magid.length == 0) ?  '0' : magid;

        var sUrl = '/dashboard_platform/data_tables/ajax_data/node/'+ (mastercode == 'MA1' ? '641' : '642') +'/magid/'+magid+'/contstatus/A/datasource/checkbook_oge';
        sUrl = sUrl + ( (year == null || year.length == 0) ?  '' : '/year/'+year);
        sUrl = sUrl + ( (calyear == null || calyear.length == 0) ?  '' : '/calyear/'+calyear);
        sUrl = sUrl + ( (yeartype == null || yeartype.length == 0) ?  '' : '/yeartype/'+yeartype);
        sUrl = sUrl + ( (contstatus == null || contstatus.length == 0) ?  '' : '/contstatus/'+contstatus);

        var smnid = jQuery(oElement).attr('smnid');
        jQuery.ajax({
        url: sUrl,
        dataType: 'json',
        type: 'GET',
        success: function(results) {
        if(eval(results['aaData']) && results['aaData'].length > 0){
        var data = results['aaData'];
        var dataLen = results['aaData'].length;
        var sOut = '<div class=\"sub-table-wrapper\"><table>';
        for(i=0;i<dataLen;i++){
        var row = data[i];
        sOut += '<tr>';
        sOut += '<td style=\"width:10px;\">&nbsp;</td>';
        sOut += '<td class=\"text-left-no-padding\" style=\"width:150px\">'+ (row[1] == null ? '': row[1])+'</td>';
        var val = row[2];
        val = val.replace('<div >', '<div style=\"margin-right:28px\";>');
        sOut += '<td class=\"number sort\" style=\"width:100px;\">'+ (row[2] == null ? '': val)+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:210px\">'+ (row[3] == null ? '': row[3])+'&nbsp;&nbsp;</td>';
        sOut += '<td class=\"text-left no-sort\" style=\"width:155px\">'+ (row[4] == null ? '': row[4])+'</td>';
        sOut += '<td class=\"number sort\"  style=\"width:130px\">'+ (row[5] == null ? '': row[5])+'</td>';
        sOut += '<td class=\"number sort\"  style=\"width:130px\">'+ (row[6] == null ? '': row[6])+'</td>';
        sOut += '<td class=\"number sort\"  style=\"width:130px\">'+ (row[7] == null ? '': row[7])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:190px\">'+ (row[8] == null ? '': row[8])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:200px\">'+ (row[9] == null ? '': row[9])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:170px\">'+ (row[10] == null ? '': row[10])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:100px\">'+ (row[11] == null ? '': row[11])+'</td>';
        sOut += '<td class=\"number sort\"  style=\"width:145px\">'+ (row[12] == null ? '': row[12])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:150px\">'+ (row[13] == null ? '': row[13])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:200px\">'+ (row[14] == null ? '': row[14])+'</td>';
        sOut += '<td class=\"text-left sort\"  style=\"width:100px\">'+ (row[15] == null ? '': row[15])+'</td>';
        sOut += '<td class=\"text-left sort\" style=\"width:180px;\">'+ (row[16] == null ? '': row[16])+'</td>';
        sOut += '<td class=\"text-left sort\" style=\"width:140px;\">'+ (row[17] == null ? '': row[17])+'</td>';
        sOut += '<td class=\"number sort\" style=\"width:110px;\">'+ (row[18] == null ? '': row[18])+'</td>';
        sOut += '<td class=\"text-left sort\" style=\"width:155px;\">'+ (row[19] == null ? '': row[19])+'</td>';
        sOut += '<td>'+ '&nbsp;'+'</td>';
        sOut += '</tr>';
        }
        sOut += '</table></div>';
        oTable.fnOpen( nTr, sOut, 'childcontracts' );
        }
        jQuery(oElement).removeClass('loader').addClass('expanded');
        if(jQuery.browser.msie && jQuery.browser.version == '7.0'){
        //do nothing
        } else {
        jQuery('td.childcontracts div.sub-table-wrapper').jScrollPane({
        verticalDragMinHeight: 10,
        verticalDragMaxHeight: 10,
        showArrows: true,
        verticalArrowPositions: 'split'
        });
        }
        }
        });

        return '';
        }
"
}