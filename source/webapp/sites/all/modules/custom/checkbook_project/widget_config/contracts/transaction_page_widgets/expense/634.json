{
    "widgetType":"data_tables",
    "widgetSubType":"dataTableList",
    "cleanURLParameters":["doctype", "contstatus", "year", "calyear", "yeartype", "agency", "vendor", "curamtr", "vendornm","vendornm_exact", "contdesc", "agrmnttypecode", "agencyh", "contnum","contnum_exact", "aptpin", "pin",
        "awdmethod", "curamt", "startdate", "enddate", "regdate", "cindustry", "csize", "modamt", "entcontnum_exact", "entcontnum", "comline_exact", "comline", "budname_exact", "budname"],
    "urlParamMap":{
        "doctype":"document_code@checkbook:ref_document_code",
        "contstatus":"status_flag",
        "year":"fiscal_year_id",
        "calyear":"fiscal_year_id",
        "yeartype":"type_of_year",
        "agency":"agency_id",
        "vendor":"vendor_id",
        "vendornm_exact":"legal_name@checkbook:vendor",
        "vendornm":"legal_name@checkbook:vendor",
        "curamtr":"maximum_contract_amount",
        "contdesc":"description",
        "agrmnttypecode":"agreement_type_code",
        "agencyh":"agency_history_id",
        "contnum":"contract_number",
        "contnum_exact": "contract_number",
        "aptpin":"brd_awd_no",
        "pin":"tracking_number",
        "awdmethod":"award_method_id",
        "curamt":"maximum_contract_amount",
        "startdate":"effective_begin_date",
        "enddate":"effective_end_date",
        "regdate":"registered_date",
        "cindustry":"industry_type_id",
        "csize":"award_size_id",
        "modamt":"dollar_difference",
        "entcontnum_exact":"oge_contract_number",
        "entcontnum":"oge_contract_number",
        "comline_exact":"fms_commodity_line",
        "comline":"fms_commodity_line",
        "budname_exact":"budget_name",
        "budname":"budget_name"
    },
    "allowRequestParams":["smnid"],
    "paramTypeConfig":{
        "budname":"contains",
        "entcontnum":"like",
        "comline":"like",
        "entcontnum_exact":"eqignorecase",
        "comline_exact":"eqignorecase",
        "budname_exact":"eqignorecase",
        "curamtr":"rangeid",
        "vendornm":"like",
        "vendornm_exact":"eqignorecase",
        "contdesc":"contains",
        "contnum":"like",
        "contnum_exact":"eqignorecase",
        "aptpin":"like",
        "pin":"like",
        "curamt":"range",
        "startdate":"range",
        "enddate":"range",
        "regdate":"range",
        "modamt":"ne"
    },
    "defaultParameters":{
        "status_flag":"A",
        "is_vendor_flag":"N",
        "type_of_year":"B",
        "if_for_all_years":"N"
    },
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "getTotalDataCount":true,
    "limit":"35",
    "stickyHeader":true,
    "noDataInitialLoad":true,
    "html_class": "initiative-table",
    "no_results_content":"No Results Found",
    "dataset": "checkbook_oge:agreement_snapshot_oge",
    "uniqueSortColumn":["agreement_id","fiscal_year_id","fms_commodity_line"],
    "columns": [
        "agreement_id",
        "fms_commodity_line",
        "budget_name",
        "oge_contract_number",
        "fiscal_year_id",
        "type_of_year",
        "has_children",
        "contract_number",
        "original_agreement_id",
        "description",
        "original_contract_amount",
        "maximum_contract_amount",
        "spending_amount_disb",
        "vendor_name","agency_name",
        "vendor_id","agency_id",
        "agreement_type_name",
        "award_method_name",
        "expenditure_object_names",
        "effective_begin_date",
        "effective_end_date",
        "registered_date",
        "brd_awd_no",
        "tracking_number",
        "master_agreement_yn",
        "document_code@checkbook:ref_document_code",
        "agency_name@checkbook:agency",
        "legal_name@checkbook:vendor",
        "industry_type_name",
        "dollar_difference",
        "percent_difference",
        "master_contract_number",
        "master_agreement_id"
    ],
    "export_columns":["has_children"],
    "preProcessConfiguration":"
        $doctype = $node->widgetConfig->requestParams['document_code@checkbook:ref_document_code'];
        $doctypes = isset($doctype) ? explode('~', $doctype) : array();
        $smnid = RequestUtilities::getRequestParamValue('smnid');

        $is_master_agreement = in_array('MA1', $doctypes) || in_array('MMA1', $doctypes);
        $is_contract_modification = $smnid == 480 || $smnid == 366;

        $show_dollar_difference = $is_contract_modification;
        $show_percent_difference = $is_contract_modification;

        $node->show_dollar_difference = $show_dollar_difference;
        $node->show_percent_difference = $show_percent_difference;

        $node->is_master_agreement = $is_master_agreement;
        $node->is_contract_modification = $is_contract_modification;
    ",
    "caption":"",
    "derivedColumns": {
        "child_contrats_link":{
            "type": "expression2",
            "expression": " ($row['has_children'] == 'Y') ? '<span id=dtl_expand class=\"toggler collapsed\"  magid=\"' . $row['original_agreement_id'] . '\" '
            . ( RequestUtilities::getRequestParamValue('datasource') != '' ?  ('datasource=\"' . RequestUtilities::getRequestParamValue('datasource') . '\"' ) : '')
            . ( RequestUtilities::getRequestParamValue('smnid') != '' ?  ('smnid=\"' . RequestUtilities::getRequestParamValue('smnid') . '\"' ) : '')
            . ( RequestUtilities::getRequestParamValue('year') != '' ?  ('year=\"' . RequestUtilities::getRequestParamValue('year') . '\"' ) : '')
            . ( RequestUtilities::getRequestParamValue('calyear') != '' ?  ('calyear=\"' . RequestUtilities::getRequestParamValue('calyear') . '\"' ) : '')
            . ( RequestUtilities::getRequestParamValue('yeartype') != '' ?  ('yeartype=\"' . RequestUtilities::getRequestParamValue('yeartype') . '\"' ) : '')
            . ( RequestUtilities::getRequestParamValue('contstatus') != '' ?  ('contstatus=\"' . RequestUtilities::getRequestParamValue('contstatus') . '\"' ) : '')
            . ('mastercode=\"' . $row['document_code@checkbook:ref_document_code'] . '\"' )
            . '></span>' : '' "
        },
        "contract_link": {
            "type": "expression2",
            "expression": "ContractURLHelper::prepareExpenseContractLink($row, $node)"
        },
        "parent_contract_link": {
            "type": "expression2",
            "expression": "(($row['has_children'] == 'Y') ? 'N/A' : ContractURLHelper::prepareExpenseContractLink($row, $node, true))"
        },
        "parent_contract_export":{
            "type": "expression2",
            "expression": "(($row['has_children'] == 'Y') ? 'N/A' : $row['master_contract_number'])"
        },
        "formatted_original_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['original_contract_amount'])"
        },
        "formatted_current_amount": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['maximum_contract_amount'])"
        },
        "formatted_spent_to_date": {
            "type": "expression2",
            "expression": "ContractURLHelper::_prepare_oge_spent_to_date_url($row, $node)"
        },
        "vendor_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['vendor_name'],30)"
        },
        "vendor_name_link": {
            "type": "expression2",
            "expression": "($row['has_children'] != 'Y') ? ('<a href=\"/contracts_landing'
            . _checkbook_append_url_params()
            .(_checkbook_check_isEDCPage() ? ('/agency/'. $row['agency_id']) :'')
            . _checkbook_project_get_url_param_string('agency')
            .  (isset($row['fiscal_year_id']) ? '/year/'.$row['fiscal_year_id'] : '')
            .  (isset($row['type_of_year']) ? '/yeartype/'.$row['type_of_year'] : '')
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            .  '/vendor/' . $row['vendor_id']
            .  '?expandBottomCont=true\">'. $row['vendor_formatted'] . '</a>') : $row['vendor_formatted'] "
        },
        "agency_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agency_name'],30)"
        },
        "agency_name_link": {
            "type": "expression2",
            "expression": "($row['has_children'] != 'Y') ? ('<a href=\"/contracts_landing'
            ._checkbook_append_url_params()
            .  (isset($row['fiscal_year_id']) ? '/year/'.$row['fiscal_year_id'] : '')
            .  (isset($row['type_of_year']) ? '/yeartype/'.$row['type_of_year'] : '')
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            . '/agency/' . $row['agency_id']
            .  '?expandBottomCont=true\">'. $row['agency_formatted'] . '</a>') : $row['agency_formatted']  "
        },
        "purpose_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['description'],36)"
        },
        "expense_cat_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['expenditure_object_names'],36)"
        },
        "award_method_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['award_method_name'],36)"
        },
        "contract_type_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['agreement_type_name'],36)"
        },
        "industry_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['industry_type_name'],36)"
        },
        "formatted_dollar_diff": {
            "type": "expression2",
            "expression": "custom_number_formatter_basic_format($row['dollar_difference'])"
        },
        "formatted_percent_diff": {
            "type": "expression2",
            "expression": "round($row['percent_difference'],2) . '%'"
        },
        "budget_name_formatted":{
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['budget_name'], 36)"
        },
        "reg_date":{
            "type": "expression2",
            "expression": "(_checkbook_check_isEDCPage()? 'N/A' : 'N/A')"
        }
    },
    "skipCustomPadding":true,
    "table_columns": [
        {"label": "<div>&nbsp;</div>","colLabel": "","column": "child_contrats_link","export":false},
        {"labelAlias": "contract_id","column": "contract_link","sortSourceColumn":"contract_number"},
        {"labelAlias": "commodity_line", "datasource": "checkbook_oge","column": "fms_commodity_line"},
        {"label":"","column":"","export":false},
        {"labelAlias": "fms_doc_id","column":"parent_contract_link","sortSourceColumn":"master_contract_number","exportColumn":"parent_contract_export"},
        {"labelAlias": "contract_purpose","column": "purpose_formatted","sortSourceColumn":"description"},
        {"labelAlias": "current_amount","column": "formatted_current_amount","sortSourceColumn":"maximum_contract_amount"},
        {"labelAlias": "original_amount","column": "formatted_original_amount","sortSourceColumn":"original_contract_amount"},
        {"labelAlias": "spent_to_date","column": "formatted_spent_to_date","sortSourceColumn":"spending_amount_disb"},
        {"labelAlias": "dollar_diff","column": "formatted_dollar_diff","sortSourceColumn":"dollar_difference","visibility_flag":"show_dollar_difference"},
        {"labelAlias": "percent_diff","column": "formatted_percent_diff","sortSourceColumn":"percent_difference","visibility_flag":"show_percent_difference"},
        {"label":"","column":"","export":false},
        {"labelAlias": "prime_vendor","column": "vendor_name_link","sortSourceColumn":"vendor_name"},
        {"labelAlias": "contract_agency","column": "agency_name_link","sortSourceColumn":"agency_name"},
        {"label":"","column":"","export":false},
        {"labelAlias": "contract_type","column": "contract_type_formatted","sortSourceColumn":"agreement_type_name"},
        {"label":"","column":"","export":false},
        {"labelAlias": "award_method","column": "award_method_formatted","sortSourceColumn":"award_method_name"},
        {"labelAlias": "expense_category","column": "expense_cat_formatted","sortSourceColumn":"expenditure_object_names"},
        {"labelAlias": "contract_industry","column": "industry_name_formatted","sortSourceColumn":"industry_type_name"},
        {"labelAlias": "start_date","column": "effective_begin_date"},
        {"labelAlias": "end_date","column": "effective_end_date"},
        {"label":"","column":"","export":false},
        {"labelAlias": "pin","column": "tracking_number"},
        {"labelAlias": "apt_pin","column": "brd_awd_no"},
        {"labelAlias":"entity_contact_num","datasource": "checkbook_oge","column":"oge_contract_number"},
        {"label":"","column":"","export":false},
        {"labelAlias":"budget_name","datasource": "checkbook_oge","column":"budget_name_formatted","sortSourceColumn":"budget_name"}
    ],
    "adjustParameters":"
        if(function_exists('_checkbook_project_adjustContractParameterFilters')){
            _checkbook_project_adjustContractParameterFilters($node,$parameters,'active_registered');
        }
        if(RequestUtilities::getRequestParamValue('vendor') || RequestUtilities::getRequestParamValue('vendornm')){
            $parameters['is_vendor_flag'] = 'Y';
        }
        if(!(RequestUtilities::getRequestParamValue('year') || RequestUtilities::getRequestParamValue('calyear'))){
            $parameters['latest_flag'] = 'Y';
            $parameters['if_for_all_years'] = 'Y';
        }
        if(function_exists('_checkbook_project_applyParameterFilters')){
            $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            return $adjustedParameters;
        }

        return $parameters;
    ",
    "adjustDataTableOptions":"
        $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;
        if(!$node->is_master_agreement) {
            $adjustDataTableOptions->fnInitComplete = '##function () { new FixedColumns( oTable, {
            \"iLeftColumns\": 2,
            \"iLeftWidth\": 196
        } );}##';
    }
    ",
    "dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "bPaginate": true,
        "iDisplayLength":35,
        "sPaginationType":"full_numbers",
        "sDom":"<pr><t><ip>",
        "oLanguage": {
        "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
        "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
    },
    "bInfo": true,
    "aoColumns": [
        {"sClass":"expander","bSortable": false,"sWidth":"10px"},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"number-center", "sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text", "sWidth":"210px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","bSortable": false, "sWidth":"155px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"130px","asSorting": [ "desc","asc" ]},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_dollar_difference"},
        {"sClass":"number","sWidth":"140px","asSorting": [ "desc","asc" ],"visibility_flag":"show_percent_difference"},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"200px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"170px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"100px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"30px"},
        {"sClass":"text","sWidth":"145px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"200px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"bSortable":false,"sWidth":"50px"},
        {"sClass":"text","sWidth":"150px","asSorting": [ "asc","desc" ]},
        {"sClass":"text","sWidth":"120px","asSorting": [ "asc","desc" ]},
        {"sClass":"number","sWidth":"110px","asSorting": [ "desc","asc" ]},
        {"bSortable":false,"sWidth":"60px"},
        {"sClass":"text","sWidth":"180px","asSorting": [ "asc","desc" ]}
        ],
        "aaSorting":[[6,"desc"]],
        "sScrollX": "100%",
        "bScrollCollapse": true
    },
    "customJS":"jQuery('#dtl_expand').live( 'click',function () {
        var nTr = this.parentNode.parentNode.parentNode;
        if ( jQuery(this).attr('class').match('loader') ){
        //ignore
        return;
        }

        if ( jQuery(this).attr('class').match('expanded') ){
        jQuery(this).removeClass('expanded').addClass('collapsed');
        oTable.fnClose( nTr );
        }else{
        jQuery(this).removeClass('collapsed').addClass('loader');
        fnLoadChildRecords(nTr, jQuery(this));
        }
        } );",
    "customExternalJS":"function prepareTableListFilterUrl(){

        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
        agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oVendorNm = getNamedFilterCriteria('fvendorNm');
        var oCurAmount = getNamedFilterCriteria('fCurAmount');
        var oAwdMethod = getNamedFilterCriteria('fAwdMethodId');
        var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');

        var  cUrl = oTable.fnSettings().sAjaxSource;
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'vendor',oVendorIds);
        cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNm);
        cUrl = adjustUrlParameter(cUrl,'curamtr',oCurAmount);
        cUrl = adjustUrlParameter(cUrl,'awdmethod',oAwdMethod);
        cUrl = adjustUrlParameter(cUrl,'cindustry',oIndustryType);

        return cUrl;
        }

        function fnLoadChildRecords (nTr, oElement)
        {
        var magid = jQuery(oElement).attr('magid');
        var year = jQuery(oElement).attr('year');
        var calyear = jQuery(oElement).attr('calyear');
        var yeartype = jQuery(oElement).attr('yeartype');
        var contstatus = jQuery(oElement).attr('contstatus');
        var mastercode = jQuery(oElement).attr('mastercode');

        //fallback for error
        magid = (magid == null || magid.length == 0) ?  '0' : magid;

        var sUrl = '/dashboard_platform/data_tables/ajax_data/node/'+ (mastercode == 'MA1' ? '641' : '642') +'/magid/'+magid+'/contstatus/A/datasource/checkbook_oge';
        sUrl = sUrl + ( (year == null || year.length == 0) ?  '' : '/year/'+year);
        sUrl = sUrl + ( (calyear == null || calyear.length == 0) ?  '' : '/calyear/'+calyear);
        sUrl = sUrl + ( (yeartype == null || yeartype.length == 0) ?  '' : '/yeartype/'+yeartype);
        sUrl = sUrl + ( (contstatus == null || contstatus.length == 0) ?  '' : '/contstatus/'+contstatus);

        var smnid = jQuery(oElement).attr('smnid');
        jQuery.ajax({
        url: sUrl,
        dataType: 'json',
        type: 'GET',
        success: function(results) {
        if(eval(results['aaData']) && results['aaData'].length > 0){
        var data = results['aaData'];
        var dataLen = results['aaData'].length;
        var sOut = '<div class=\"sub-table-wrapper\"><table>';
        var is_contract_modification = smnid == 480 || smnid == 366;
        for(i=0;i<dataLen;i++){
            var row = data[i];
            sOut += '<tr>';
            sOut += '<td class=\"text\" style=\"width:150px\">'+ (row[1] == null ? '': row[1])+'</td>';
            sOut += '<td class=\"number-center\" style=\"width:100px;\">'+ (row[2] == null ? '': row[2])+'</td>';
            sOut += '<td style=\"width:50px\"></td>';
            sOut += '<td class=\"text\"  style=\"width:210px\">'+ (row[3] == null ? '': row[3])+'</td>';
            sOut += '<td class=\"text\"  style=\"width:155px\">'+ (row[4] == null ? '': row[4])+'</td>';
            sOut += '<td class=\"number\"  style=\"width:130px\">'+ (row[5] == null ? '': row[5])+'</td>';
            sOut += '<td class=\"number\"  style=\"width:130px\">'+ (row[6] == null ? '': row[6])+'</td>';
            sOut += '<td class=\"number\"  style=\"width:130px\">'+ (row[7] == null ? '': row[7])+'</td>';
            if(is_contract_modification) {
                sOut += '<td class=\"number\"  style=\"width:140px\">'+ '' +'</td>';
                sOut += '<td class=\"number\"  style=\"width:140px\">'+ '' +'</td>';
            }
            sOut += '<td style=\"width:50px\"></td>';
            sOut += '<td class=\"text\"  style=\"width:200px\">'+ (row[8] == null ? '': row[8])+'</td>';
            sOut += '<td class=\"text\"  style=\"width:170px\">'+ (row[9] == null ? '': row[9])+'</td>';
            sOut += '<td style=\"width:50px\"></td>';
            sOut += '<td class=\"text\"  style=\"width:100px\">'+ (row[10] == null ? '': row[10])+'</td>';
            sOut += '<td style=\"width:30px\"></td>';
            sOut += '<td class=\"text\"  style=\"width:145px\">'+ (row[11] == null ? '': row[11])+'</td>';

            sOut += '<td class=\"text\"  style=\"width:200px\">'+ (row[12] == null ? '': row[12])+'</td>';
            sOut += '<td class=\"text\"  style=\"width:150px\">'+ (row[13] == null ? '': row[13])+'</td>';
            sOut += '<td class=\"number\"  style=\"width:150px\">'+ (row[14] == null ? '': row[14])+'</td>';
            sOut += '<td class=\"number\"  style=\"width:150px\">'+ (row[15] == null ? '': row[15])+'</td>';
            sOut += '<td style=\"width:50px\"></td>';
            sOut += '<td class=\"text\" style=\"width:150px;\">'+ (row[16] == null ? '': row[16])+'</td>';
            sOut += '<td class=\"text\" style=\"width:120px;\">'+ (row[17] == null ? '': row[17])+'</td>';
            sOut += '<td class=\"number\" style=\"width:110px;\">'+ (row[18] == null ? '': row[18])+'</td>';
            sOut += '<td style=\"width:60px\"></td>';
            sOut += '<td class=\"text\" style=\"width:180px;\">'+ (row[19] == null ? '': row[19])+'</td>';
            sOut += '<td style=\"width:10px\"></td>';
            sOut += '</tr>';
        }
        sOut += '</table></div>';
        oTable.fnOpen( nTr, sOut, 'childcontracts' );
        }
        jQuery(oElement).removeClass('loader').addClass('expanded');
        if(jQuery.browser.msie && jQuery.browser.version == '7.0'){
        //do nothing
        } else {
        jQuery('td.childcontracts div.sub-table-wrapper').jScrollPane({
        verticalDragMinHeight: 10,
        verticalDragMaxHeight: 10,
        showArrows: true,
        verticalArrowPositions: 'split'
        });
        }
        }
        });

        return '';
        }
"
}
