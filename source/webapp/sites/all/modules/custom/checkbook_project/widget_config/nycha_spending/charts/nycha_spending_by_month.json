{
"widgetType": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateGridViewLink($node);
       return $header;
    ",
 "gridConfig":{
        "template":"highchart_spending_fy_grid_view",
        "html_class":"chart-grid-view-table three-columns",
        "table_columns": [
            {
                  "labelAlias": "month",
              "column": "month_month_month_name",
                  "sortColumn":"sort_order"
             },
            {
                  "colLabel": "$node->widgetConfig->chartConfig->series[0]->name",
              "column": "previous_spending",
                   "eval":true
            },
            {
                  "colLabel": "$node->widgetConfig->chartConfig->series[1]->name",
              "column": "current_spending",
                   "eval":true
            }
        ]
},
"no_results_content":"No Results Found",
"cleanURLParameters":["awdmethod","vendor","csize","industry","year"],
"urlParamMap":{"year":"fiscal_year_id","awdmethod":"award_method_id","vendor":"vendor_id", "csize":"award_size_id","industry":"industry_type_id"},
"widgetDataLoader":"
  $current_year_id = RequestUtilities::getRequestParamValue('year');
  $previous_year_id = $current_year_id -1;
  $where_filters = [];
    foreach($node->widgetConfig->requestParams as $param=>$value){
      if($param == 'fiscal_year_id'){
          $where_filters[] = 'issue_date_year_id BETWEEN '. $previous_year_id . ' AND ' .$current_year_id;
      }else{
$where_filters[] = _widget_build_sql_condition( $param, $value);
}
}

if(count($where_filters) > 0){
$where_filter = ' WHERE ' . implode(' AND ' , $where_filters);
}
$datasource = RequestUtilities::getRequestParamValue('datasource');
$sql = 'SELECT issue_date_year,issue_date_year_id,month_number,month_name, SUM(total_spending) AS spent_amount
        from aggregation_spending_month  '. $where_filter .
        ' group by issue_date_year,month_number,month_name ,issue_date_year_id
          ORDER BY month_number ';
$node->data  = _checkbook_project_execute_sql($sql,'main',$datasource);
",
"widgetUpdateJSONConfig":"
$series_new = array();
$current_year_id = RequestUtilities::getRequestParamValue('year');
$previous_year_id = $current_year_id -1;
$i=0;
foreach($node->data as $row){
  if ($row[month_name]== 'April'){
  $tooltip_label ='Month: ' . $row['month_name']. $row['issue_date_year_id'] .'<br/> Amount Spent: ' . custom_number_formatter_format($row['spent_amount'] ,2, '$').  '<br/>';
  $series_new[$i]->y = (float)$row['spent_amount'];
  $series_new[$i]->tooltip_label = $tooltip_label;
  }
$i++;
}

$node->widgetConfig->chartConfig->series[0]->name = 'Fiscal Years';
$node->widgetConfig->chartConfig->series[0]->type = 'column';
$node->widgetConfig->chartConfig->series[0]->pointWidth = 30;
$node->widgetConfig->chartConfig->series[0]->data = $series_new;
",
"chartConfig" : {
"colors":["#7DB7E5"],
"plotOptions": {
"series": {
"cursor": "pointer"   ,
"stacking": "normal",
"dataLabels": {
"enabled": false
}  ,
"point": {"events": {"function": "clickEvent"}}
}
},
"xAxis": {
"categories": [0,1,2,3,4,5,6,7,8,9],
"labels": {"enabled": false}
},
"series": [
{
"name": "FY",
"type": "column",
"pointWidth": 50,
"data": []
}
],
"title": {"text": ""},
"yAxis": {
"min":0,
"minRange": 0.1,
"startOnTick":true,
"title": {"text": ""},
"labels":{"rotation": 0,"function":"yAxisFormatter"}
} ,
"legend": {
"enabled": false
},
"tooltip":{"function":"tooltipformatter"}
}
}


<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' :
function() {return this.point.tooltip_label ;
}##
clickEvent^^"click": function(){location.href = Drupal.settings.basePath+this.url; }
</function>
