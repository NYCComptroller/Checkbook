{
"widgetType": "highcharts",
"header":"
    $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>';
    $header .= ChartUtil::generateGridViewLink($node);
    return $header;
",
"gridConfig":{
    "template":"highchart_contracts_pending_topamount_grid_view",
    "html_class":"chart-grid-view-table four-columns",
    "table_columns": [
        {
            "labelAlias": "contract_id",
            "column": "contract_number_contract_number"
        },
        {
            "labelAlias": "current_amount",
            "column": "total_revised_maximum_amount"
        },
        {
            "labelAlias": "vendor_name",
            "column": "vendor_legal_name_vendor_legal_name"
        },
        {
            "labelAlias": "agency_name",
            "column": "document_agency_name_document_agency_name"
        }
    ]
},
"no_results_content":"No Results Found",
"cleanURLParameters":["agency","vendor","awrdmthd","contnum","contcat","csize","cindustry"],
"defaultParameters":{"document_code.document_code.document_code":"RCT1","revised_maximum_amount":"0","latest_flag":"Y"},
"defaultParamTypeConfig":{"revised_maximum_amount":"ne"},
"adjustParameters":"
            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
"urlParamMap":{"cindustry":"industry_type_id","agency":"document_agency_id.document_agency_id","vendor":"vendor.vendor","contcat":"document_code@checkbook:ref_document_code","contnum":"contract_number.contract_number","awrdmthd":"award_method_id.award_method_id","csize":"award_size.award_size"},
"dataset": "checkbook:pending_contracts",
"columns":["pending_contract_number.pending_contract_number","document_version.document_version","version_number.version_number","contract_number.contract_number","document_agency_name.document_agency_name","document_agency_id.document_agency_id","vendor_legal_name.vendor_legal_name","vendor.vendor","total_revised_maximum_amount","original_agreement_id.original_agreement_id","document_code.document_code.document_code"],
"derivedColumns": {
    "agency_formatted": {
        "type": "expression2",
        "expression": "strtoupper(html_entity_decode($row[\"document_agency_name_document_agency_name\"], ENT_QUOTES))"
    },
    "vendor_formatted": {
        "type": "expression2",
        "expression": "strtoupper(html_entity_decode($row[\"vendor_legal_name_vendor_legal_name\"], ENT_QUOTES))"
    },
    "column_link":{
        "type":"expression2",
        "expression":"_pending_contracts_link_contract_details($row[contract_number_contract_number],$row[original_agreement_id_original_agreement_id],$row[document_code_document_code_document_code],$row[pending_contract_number_pending_contract_number],$row[document_version_document_version],'bar')"

    }
},
"limit": "10",
"orderBy":"-total_revised_maximum_amount",
"datasets" : [
          {"name": "contracts","type":"string","columns":[{"name":"y","url":"column_link","value":"total_revised_maximum_amount","agency":"agency_formatted","vendor":"vendor_formatted","contractnum":"contract_number_contract_number"}], "isArray":true,"allowNullValues":true}
],
"transformationPHP":"
$node->widgetConfig->chartTitle = _checkbook_project_getChartTitle('contracts','Top Ten Contracts','','contracts');
return $node->data;
",
"chartConfig" : {
    "chart" : {},
    "colors":["#7DB7E5"],
    "xAxis": {
        "title":{"text":""},
        "labels": {"enabled":false}
    },
    "series": [{
        "name": "Contract Amount",
        "type": "column",
        "pointWidth": 30,
        "data": {"ds":"contracts"}
    }],
    "title": {"text": ""},
    "plotOptions":{
        "series": {
            "cursor": "pointer",
            "point": {
                "events": {"function": "clickEvent"}
            }
        }
    },
    "yAxis": {
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0}
    } ,
    "legend": {
       "enabled": false,
       "align": "left",
       "verticalAlign": "bottom",
       "floating": "true",
       "layout": "horizontal"
    },
    "tooltip":{"function":"tooltipformatter"}
}
}


<function>
tooltipformatter^^'formatter' : function() {return  'Contract ID: ' + this.point.contractnum + '<br/>' + 'Vendor: ' + this.point.vendor  + '<br/>' + 'Agency: ' + this.point.agency+ '<br/>' + 'Amount: ' + abbrNum(this.y, 2, '$')  ;}
##clickEvent^^"click": function(){   if(this.url.length > 0) {location.href = Drupal.settings.basePath+this.url;} }
</function>
