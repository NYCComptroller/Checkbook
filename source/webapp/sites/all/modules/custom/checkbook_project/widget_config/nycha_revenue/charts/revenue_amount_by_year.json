{
  "widgetType":"highcharts",
  "widgetSubType":"highcharts",
  "header":"
    $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
    $header .= ChartUtil::generateWidgetGridViewLink($node);
    return $header;
  ",
  "gridConfig":{
    "template":"highchart_nycha_revenue_grid_view",
    "html_class":"chart-grid-view-table",
    "table_columns": [
      {
        "labelAlias": "fiscal_year",
        "column": "year_year",
        "sortColumn":"sort_order"
      },
      {
        "colLabel": "recognized",
        "column": "revenue_recognized_amount",
        "eval":true
      },
      {
        "colLabel": "remaining",
        "column": "revenue_funds_available",
        "eval":true
      }
    ]
  },
  "defaultParameters":{
    "year_id.year_id":119
  },
  "cleanURLParameters":[
    "year",
    "expcategory",
    "respcenter",
    "fundsrc",
    "program",
    "project"
  ],
  "urlParamMap":{
    "year":"year_id.year_id",
    "expcategory":"expenditure_type_id",
    "respcenter": "responsibility_center_id",
    "fundsrc": "funding_source_id",
    "program": "program_phase_id",
    "project": "gl_project_id"
  },
  "dataset":"checkbook_nycha:revenue",
  "columns":[
    "year.year",
    "revenue_recognized_amount",
    "revenue_funds_available"
  ],
  "transformationPHP":"
  $transactions_page = '/' . current_path()  . '?expandBottomContURL=/panel_html/nycha_budget_transactions/datasource/checkbook_nycha/widget/wt_year';
  $year = ($node->widgetConfig->requestParams['year_id.year_id']) ? '/year/' . $node->widgetConfig->requestParams['year_id.year_id'] : '';
$expcategory = ($node->widgetConfig->requestParams['expenditure_type_id']) ? '/expcategory/' . $node->widgetConfig->requestParams['expenditure_type_id'] : '';
$resp = ($node->widgetConfig->requestParams['responsibility_center_id']) ? '/respcenter/' . $node->widgetConfig->requestParams['responsibility_center_id'] : '';
$fundsrc = ($node->widgetConfig->requestParams['funding_source_id']) ? '/fundsrc/' . $node->widgetConfig->requestParams['funding_source_id'] : '';
$prog = ($node->widgetConfig->requestParams['program_phase_id']) ? '/program/' . $node->widgetConfig->requestParams['program_phase_id'] : '';
$proj = ($node->widgetConfig->requestParams['gl_project_id']) ? '/project/' . $node->widgetConfig->requestParams['gl_project_id'] : '';
$budget_committed = '/budgettype/committed';
$budget_remaining = '/budgettype/remaining';
$url_committed =  $transactions_page . $budget_committed . $year . $expcategory . $resp . $fundsrc . $proj . $prog;
$url_remaining =  $transactions_page . $budget_remaining . $year . $expcategory . $resp . $fundsrc . $proj . $prog;
$allZero = TRUE;
foreach ($node->data as $row){
if (abs($row['revenue_recognized_amount']) > 0){$allZero = FALSE;}
if (abs($row['revenue_funds_available']) > 0){$allZero = FALSE;}
$categories[] = $row['year_year'];
$url_committed = null;
$url_remaining = null;
$recognized_data[] = array('y' => $row['revenue_recognized_amount'], 'url' => $url_committed);
$remaining_data[] = array('y' => $row['revenue_funds_available'], 'url' => $url_remaining);
}
if($allZero){$node->totalDataCount = 0;}
$node->widgetConfig->chartTitle = 'Revenue';
$node->widgetConfig->chartConfig->xAxis->categories = $categories;
$node->widgetConfig->chartConfig->series = array(array('name' => 'Recognized', 'data' => $recognized_data), array('name' => 'Remaining', 'data' => $remaining_data));
return $node->data;
",
"chartConfig":{
"chart":{
"defaultSeriesType":"column"
},
"plotOptions":{
"series": {
"cursor": "pointer",
"point": {
"events": {
"function": "clickEvent"
}
}
},
"column":{
"minPointLength":3,
"pointWidth":150
}
},
"xAxis":{
"categories":[]
},
"yAxis":{
"title":{
"text":""
},
"labels":{
"function":"yAxisFormat"
}
},
"legend":{
"align":"left",
"verticalAlign":"bottom"
},
"title":{
"text":""
},
"series":[],
"tooltip":{
"stickyTracking":false,
"function":"formatTooltip"
}
}
}
<function>
formatTooltip^^"formatter":function(){return 'Year: ' + this.x + '<br>Amount: ' + abbrNum(this.y, 2, '$');}##
yAxisFormat^^"formatter":function(){return yAxisLabelFormatter(this);}##
clickEvent^^"click": function(){location.href = this.url;}
</function>
