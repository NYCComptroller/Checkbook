{
    "widgetType": "data_tables",
    "cleanURLParameters":["magid","contstatus"],
    "urlParamMap":{"magid":"master_agreement_id","contstatus":"status_flag"},
    "allowRequestParams":["year","yeartype"],
    "defaultParameters":{"master_agreement_id":-1},
    "useList":true,
    "getTotalDataCount":false,
    "dataset": "checkbook:all_agreement_transactions_by_prime_vendor",
    "limit":200,
    "orderBy":"-maximum_contract_amount",
    "columns": [
       "agreement_id",
        "contract_number",
        "contract_original_agreement_id",
        "original_contract_amount",
        "agreement_type_name",
        "sub_contract_id",
        "master_agreement_yn",
        "master_contract_number",
        "master_agreement_id",
        "has_children",
        "has_mwbe_children",
        "document_version",
        "maximum_contract_amount",
        "dollar_difference",
        "percent_difference",
        "description",
        "scntrc_status",
        "scntrc_status_name",
        "prime_vendor_id",
        "prime_vendor_name",
        "prime_minority_type_id",
        "prime_minority_type_name",
        "sub_vendor_id",
        "sub_vendor_name",
        "sub_minority_type_id",
        "sub_minority_type_name",
        "aprv_sta",
        "aprv_sta_name",
        "agency_id",
        "agency_name",
        "award_method_name",
        "industry_type_name",
        "expenditure_object_names",
        "effective_begin_date",
        "effective_end_date",
        "registered_date",
        "tracking_number",
        "brd_awd_no",
        "document_code",
        "original_agreement_id",
        "rfed_amount"
    ],
    "caption":"",
    "adjustParameters":"

        $year = !(_getRequestParamValue('year')) ? _getCurrentYearID() : _getRequestParamValue('year');
        $year_type = !(_getRequestParamValue('yeartype')) ? 'B' : _getRequestParamValue('yeartype');

        $node->year = $year;
        $node->year_type = $year_type;

        return ContractUtil::adjustActiveContractParameterFilters($node, $parameters);
    ",
    "derivedColumns": {
        "child_contrats_link":{
            "type":"expression2",
            "expression":"ContractURLHelper::expenseContractsExpandLink($row, $node)"
        },
        "contract_link": {
            "type":"expression2",
            "expression":"ContractURLHelper::expenseContractsLink($row, $node, false, $row['contract_original_agreement_id'])"
        },
        "parent_contract_link": {
            "type":"expression2",
            "expression":"(($row['master_agreement_yn'] == 'Y') ? 'N/A' : ContractURLHelper::prepareExpenseContractLink($row, $node, true, $row['contract_original_agreement_id']))"
        },
        "parent_contract_export":{
            "type":"expression2",
            "expression":"(!($row['master_contract_number']) ? 'N/A' : $row['master_contract_number'])"
        },
        "formatted_original_amount": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['original_contract_amount'])"
        },
        "formatted_current_amount": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['maximum_contract_amount'])"
        },
        "formatted_spent_to_date": {
            "type":"expression2",
            "expression":"
            '<a href=\"/spending/transactions'
            .  ($row['master_agreement_yn'] == 'Y' ? '/magid/' : '/agid/') . $row['original_agreement_id']
            .  _checkbook_project_get_url_param_string(\"dashboard\") . _checkbook_project_get_url_param_string(\"mwbe\")
            .    '/year/'. _getFiscalYearID() .'/syear/'. _getFiscalYearID()
            .  '/newwindow\" class=\"new_window\">'. custom_number_formatter_basic_format($row['rfed_amount']) . '</a>'
            "
        },
        "spent_to_date_export": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['rfed_amount'])"
        },
        "agency_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['agency_name'],26)"
        },
        "agency_name_link": {
            "type":"expression2",
            "expression":" '<a href=\"/contracts_landing'
            ._checkbook_append_url_params()
            .  '/year/'._getFiscalYearID()
            .  '/yeartype/B'
            .  _checkbook_project_get_url_param_string(\"contstatus\",\"status\")
            . '/agency/' . $row['agency_id']
            .  '?expandBottomCont=true\">'. $row['agency_formatted'] . '</a>'  "
        },
        "purpose_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['description'],36)"
        },
        "expense_cat_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['expenditure_object_names'],36)"
        },
        "expense_cat": {
            "type":"expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expense_cat_formatted']"
        },
        "expense_cat_export": {
            "type":"expression2",
            "expression":"($row['is_prime_or_sub'] == 'S') ? '' : $row['expenditure_object_names']"
        },
        "award_method_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['award_method_name'],36)"
        },
        "contract_type_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['agreement_type_name'],36)"
        },
        "industry_name_formatted": {
            "type":"expression2",
            "expression":"_get_tooltip_markup($row['industry_type_name'],36)"
        },
        "formatted_dollar_diff": {
            "type":"expression2",
            "expression":"custom_number_formatter_basic_format($row['dollar_difference'])"
        },
        "formatted_percent_diff": {
            "type":"expression2",
            "expression":"round($row['percent_difference'],2) . '%'"
        },
        "sub_contract_reference_id":{
            "type":"expression2",
            "expression":"(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2')))  ? (in_array($row['sub_contract_id'], array(NULL,'')) && $row['scntrc_status'] == 2) ? 'NOT PROVIDED' : (in_array($row['sub_contract_id'], array(NULL, '')) ? 'N/A' : $row['sub_contract_id']) : 'N/A'"
        },
        "prime_vendor_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['prime_vendor_name'],24)"
        },
        "prime_vendor_name_link": {
            "type": "expression2",
            "expression": " '<a href=\"/contracts_landing'
            . ContractUtil::get_contracts_vendor_link_by_mwbe_category($row)
            . '?expandBottomCont=true\">'. $row['prime_vendor_name_formatted'] . '</a>'  "
        },
        "subvendor_name_formatted": {
            "type": "expression2",
            "expression": "_get_tooltip_markup($row['sub_vendor_name'],30)"
        },
        "subvendor_name": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_vendor_name'], array(NULL, ''))) ? 'NOT PROVIDED' : '<a href=\"/contracts_landing'  . ContractUtil::get_contracts_vendor_link_sub($row[sub_vendor_id],_getRequestParamValue('year'),_getRequestParamValue('yeartype'), null, $row[sub_minority_type_id]) .  '?expandBottomCont=true\">' .$row[subvendor_name_formatted]. '</a>') : 'N/A'"
        },
        "subvendor_name_export": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_vendor_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_vendor_name']) : 'N/A'"
        },
        "sub_mwbe_category_name": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_minority_type_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_minority_type_name'] ) : 'N/A'"
        },
        "sub_mwbe_category_name_export": {
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? ((in_array($row['sub_minority_type_name'], array(NULL, ''))) ? 'NOT PROVIDED' : $row['sub_minority_type_name']) : 'N/A'"
        },
        "contract_includes_sub":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? $row['scntrc_status_name'] : 'N/A'"
        },
        "subvendor_status_pip":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? _get_tooltip_markup($row['aprv_sta_name'],36) : 'N/A'"
        },
        "subvendor_status_pip_export":{
            "type": "expression2",
            "expression": "(in_array($row['document_code'], array('CT1', 'CTA1', 'CT2'))) ? $row['aprv_sta_name'] : 'N/A'"
        }
    },
    "skipCustomPadding":true,
    "table_columns": [
        {"label": "&nbsp;","column": "child_contrats_link"},
        {"labelAlias":"contract_id","column":"contract_link","sortSourceColumn":"contract_number"},
        {"labelAlias":"contract_includes_sub","column":"contract_includes_sub","sortSourceColumn":"scntrc_status_name","exportColumn":"contract_includes_sub"},
        {"labelAlias":"sub_contract_reference_id","column":"sub_contract_reference_id","sortSourceColumn":"sub_contract_id","exportColumn":"sub_contract_reference_id"},
        {"labelAlias":"contract_purpose","column":"purpose_formatted","sortSourceColumn":"description"},
        {"labelAlias":"version","column":"document_version"},
        {"labelAlias": "fms_doc_id","column":"parent_contract_link", "exportColumn":"parent_contract_export", "sortSourceColumn":"master_contract_number"},
        {"labelAlias":"current_amount","column":"formatted_current_amount","sortSourceColumn":"maximum_contract_amount"},
        {"labelAlias":"original_amount","column":"formatted_original_amount","sortSourceColumn":"original_contract_amount"},
        {"labelAlias":"spent_to_date","column":"formatted_spent_to_date","sortSourceColumn":"rfed_amount"},
        //10
        {"labelAlias":"prime_vendor","column":"prime_vendor_name_link","sortSourceColumn":"prime_vendor_name"},
        {"labelAlias":"prime_mwbe_category","column":"prime_minority_type_name","sortSourceColumn":"prime_minority_type_name"},
        {"labelAlias":"sub_vendor_name","column":"subvendor_name","sortSourceColumn":"sub_vendor_name","exportColumn":"subvendor_name"},
        {"labelAlias":"sub_mwbe_category","column":"sub_mwbe_category_name","sortSourceColumn":"sub_minority_type_name","exportColumn":"sub_mwbe_category_name"},

        {"labelAlias":"subvendor_status_pip","column":"subvendor_status_pip","sortSourceColumn":"aprv_sta_name","exportColumn":"subvendor_status_pip_export"},
        {"labelAlias":"contract_agency","column":"agency_name_link","sortSourceColumn":"agency_name"},
        {"labelAlias":"contract_type","column":"contract_type_formatted","sortSourceColumn":"agreement_type_name"},
        {"labelAlias":"award_method","column":"award_method_formatted","sortSourceColumn":"award_method_name"},
        {"labelAlias":"expense_category","column":"expense_cat","sortSourceColumn":"expenditure_object_names","exportColumn":"expense_cat_export"},
        {"labelAlias":"contract_industry","column":"industry_name_formatted","sortSourceColumn":"industry_type_name"},
        // 20
        {"labelAlias":"start_date","column":"effective_begin_date"},
        {"labelAlias":"end_date","column":"effective_end_date"},
        {"labelAlias":"reg_date","column":"registered_date"},
        {"labelAlias":"pin","column":"tracking_number"},
        {"labelAlias":"apt_pin","column":"brd_awd_no"},
        {"labelAlias": "dollar_diff","column": "formatted_dollar_diff"},
        {"labelAlias": "percent_diff","column": "formatted_percent_diff"}
    ]
}