{
    "widgetType":"phpparser",
    "parentNid":652,
    "limit":100,
    "columns":["vendor.vendor", "vendor.vendor.legal_name", "txcount"],
    "orderBy":["-txcount" , "vendor.vendor.legal_name"], 
	"getTotalDataCount":true,    
	"facetPager":true,
    "filterName":"Vendor",
    "urlParameterName":"fvendor",
    "autocompleteParamName":"vendor_auto",    
    "autocompleteID":"fvendorId", 	
    "autocompleteField":"vendor_name",
    "maxSelect":5,
    "adjustParameters":"
	checkbook_faceted_search_adjust_param($node);
    if(function_exists('_checkbook_project_adjust_spending_parameter_filters')){
    	$parameters = _checkbook_project_adjust_spending_parameter_filters($node, $parameters);
    }
    //Set contract vendor id for Master Agreement spending transactions
    if(_checkbook_project_get_url_param_string('vendor') || _checkbook_project_get_url_param_string('cvendor')){
      $parameters['contract_vendor_id'] = $parameters['vendor_id'];
    }

    if(function_exists('_checkbook_project_applyParameterFilters')){
        $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
    }
    $adjustedParameters['vendor_id'][] = data_controller_get_operator_factory_instance()->initiateHandler(NotEmptyOperatorHandler::$OPERATOR__NAME);
    //Using child_contract_agency_id column in OGE domainO
    if(_checkbook_check_isEDCPage()){
        foreach($adjustedParameters as $key=>$value){
            if($key == 'master_child_contract_agency_id'){
               $adjustedParameters['contract_agency_id'] = $value;
               unset($adjustedParameters[$key]);
            }
        }
    }
    return $adjustedParameters;
    ",      
    "template":"individual_filter"
}