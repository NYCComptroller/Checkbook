{
"widgetType":"data_tables",
"widgetSubType":"dataTableList",
"cleanURLParameters":[
    "deptnm","expcategorynm","year","calyear","yeartype","status","agency","vendor","category",
    "checkamtr","dept","syear","scalyear","magid","agid","cvendor","cagency","awdmethod","csize","cindustry",
    "doctype","month","industry","mwbe","vendor","svendor","subvendor","csubvendor","vendortype","vendornm","contnum"
],
"urlParamMap":{
    "year":"disb_fiscal_year_id",
    "calyear":"disb_fiscal_year_id","yeartype":"type_of_year","status":"status_flag","agency":"disb_agency_id",
    "category":"disb_spending_category_id","checkamtr":"disb_check_amount","syear":"disb_fiscal_year_id",
    "scalyear":"disb_fiscal_year_id","magid":"master_agreement_id","agid":"disb_agreement_id",
    "cagency":"document_agency_id","awdmethod":"award_method_id","csize":"award_size_id",
    "cindustry":"industry_type_id","doctype":"document_code@checkbook:ref_document_code",
    "month":"disb_check_eft_issued_cal_month_id",
    "mwbe":"minority_type_id","industry":"industry_type_id",
    "cvendor":"prime_vendor_id","vendor":"prime_vendor_id","subvendor":"disb_vendor_id","csubvendor":"vendor_id","vendortype":"disb_vendor_type",
    "vendornm":"disb_vendor_name","vendor_facet":"disb_vendor_name","vendornm_exact":"disb_vendor_name",
    "contnum":"disb_contract_number"

},
"paramTypeConfig":{"checkamtr":"rangeid","syear":"le","scalyear":"le","deptnm":"eqignorecase","doctype":"in"},
"header":"
	$header = NULL;
	$header .= widget_data_tables_export_link($node);
	return $header;
",
"useList":true,
"stickyHeader":true,
"getTotalDataCount":true,
"limit":"20",
"noDataInitialLoad":true,
"html_class":"initiative-table",
"no_results_content":"No Results Found",
"dataset":"checkbook:contracts_subven_spending_transactions",
"uniqueSortColumn":"disbursement_line_item_id",
"columns": [
    "disb_disbursement_number",
    "disb_check_eft_issued_date",
    "disb_agency_name",
    "disb_check_amount",
    "disb_contract_number",
    "disb_purpose",
    "disb_reporting_code",
    "disb_spending_category_name",
    "disb_agency_id",
    "disb_vendor_id",
    "disb_vendor_name",
    "disb_sub_contract_id",
    "legal_name@checkbook:prime_vendor",
    "disb_spending_category_id",
    "disb_agreement_id",
    "document_code@checkbook:ref_document_code",
    "disb_minority_type_id",
    "disb_vendor_type",
    "disb_sub_contract_id",
    "industry_type_id",
    "industry_type_name@checkbook:industry_type",
    "is_women_owned",
    "is_emerging"
],
"caption":"",
"derivedColumns": {
    "associated_prime_vendor_name":{
        "expression":"_get_tooltip_markup($row['legal_name@checkbook:prime_vendor'], 34)"
    },
    "associated_prime_vendor_name_export":{
        "expression":"$row['legal_name@checkbook:prime_vendor']"
    },
    "vendor_type_calculated": {
        "expression":"(preg_match('/S/', $row['disb_vendor_type'])) ? 'Yes' : 'No'"
    },
    "is_sub_vendor": {
        "expression":"(preg_match('/S/', $row['disb_vendor_type'])) ? 'Yes' : 'No'"
    },
    "agency_name_formatted":{
        "expression":"_get_tooltip_markup($row['disb_agency_name'], 30)"
    },
    "agency_name_link": {
        "expression":" RequestUtil::isNewWindow() ? $row['agency_name_formatted']  : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string() . _checkbook_append_url_params() . _checkbook_project_get_url_param_string('category') . '/agency/'. $row['disb_agency_id']. '?expandBottomCont=true>'. $row['agency_name_formatted'] .'</a>') "
    },
    "agency_param":{
        "expression":"(_checkbook_check_isEDCPage()? _checkbook_project_get_url_param_string(\"agency\") :'')"
    },
    "payee_name_formatted":{
        "expression":" _get_tooltip_markup($row['disb_vendor_name'], 30)"
    },
    "payee_name_export":{
        "expression": "$row['disb_vendor_name']"
    },
    "payee_name_link": {
        "expression": " RequestUtil::isNewWindow() ||  $row['disb_spending_category_id']==2 ?  $row['payee_name_formatted'] : ('<a href=\"' . SpendingUtil::getPrimeVendorNameLinkUrl($node,$row) . '?expandBottomCont=true' . '\">'. $row['payee_name_formatted'] .'</a>') "
    },
    "formatted_check_amount": {
        "expression":"custom_number_formatter_basic_format($row['disb_check_amount'])"
    },
    "contract_number_link_actual": {
        "expression":"($row['disb_spending_category_name'] == 'Payroll' ||  $row['disb_spending_category_name'] == 'Others') ? 'n/a' : $row['disb_contract_number']"
    },
    "contract_number_link": {
        "expression":"ContractURLHelper::prepareSpendingContractTransactionsLink($row, $node)"
    },
    "purpose_formatted":{
        "expression":"_get_tooltip_markup($row['disb_purpose'], 30)"
    },
    "contract_purpose_text":{
        "expression":"($row['spending_category_name'] == 'Payroll' ||  $row['disb_spending_category_name'] == 'Others') ? 'n/a' : $row['purpose_formatted']"
    },
    "mwbe_category_name": {
        "expression":"MappingUtil::getMinorityCategoryById($row['disb_minority_type_id'])"
    },
    "industry_name_formatted": {
        "expression": "_get_tooltip_markup($row['industry_type_name@checkbook:industry_type'],36)"
    }
},
"table_columns": [
    {"labelAlias":"payee_name","column":"payee_name_link","sortSourceColumn":"disb_vendor_name","exportColumn":"payee_name_export"},
    {"labelAlias":"is_sub_vendor","column":"is_sub_vendor","sortSourceColumn":"disb_vendor_type","exportColumn":"is_sub_vendor"},
    {"label":"","column":"","export":false},
    {"labelAlias":"associated_prime_vendor","column":"associated_prime_vendor_name","sortSourceColumn":"legal_name@checkbook:prime_vendor","exportColumn":"associated_prime_vendor_name_export"},
    {"label":"","column":""},
    {"labelAlias":"issue_date","column":"disb_check_eft_issued_date"},
    {"labelAlias":"agency_name","column":"agency_name_link","sortSourceColumn":"disb_agency_name"},
    {"labelAlias":"check_amount","column":"formatted_check_amount","sortSourceColumn":"disb_check_amount"},
    {"label":"","column":""},
    {"labelAlias":"industry_name","column":"industry_name_formatted","sortSourceColumn":"industry_type_name@checkbook:industry_type"},
    {"labelAlias":"contract_id","column":"contract_number_link","sortSourceColumn":"disb_contract_number"},
    {"labelAlias":"sub_contract_reference_id","column":"disb_sub_contract_id","exportColumn":"disb_sub_contract_id"},
    {"labelAlias":"contract_purpose","column":"contract_purpose_text","sortSourceColumn":"disb_purpose"},
    {"labelAlias":"spending_category","column":"disb_spending_category_name"},
    {"label":"","column":""},
    {"labelAlias":"mwbe_category","column":"mwbe_category_name","sortSourceColumn":"disb_minority_type_id","exportColumn":"mwbe_category_name"},
    {"labelAlias": "woman_owned_business","column":"is_women_owned"},
    {"labelAlias": "emerging_business","column":"is_emerging"},
    {"label":"","column":""}
],
"exportColumnSqlOverride":[
    {
        "column":"mwbe_category_name",
        "sourceColumn":"disb_minority_type_id",
        "sql":"
            case
            when disb_minority_type_id = 2 then 'Black American'
            when disb_minority_type_id = 3 then 'Hispanic American'
            when disb_minority_type_id = 6 then 'Native'
            when disb_minority_type_id = 7 then 'Non-M/WBE'
            when disb_minority_type_id = 9 then 'Women'
            when disb_minority_type_id = 11 then 'Individuals and Others'
            when disb_minority_type_id = 99 then 'Emerging'
            else 'Asian American'
            end as minority_type_name
        "
    },
    {
      "column":"is_sub_vendor",
      "sourceColumn":"disb_vendor_type",
      "sql":"case when disb_vendor_type = 'P' then 'No' else 'Yes' end as is_sub_vendor"
    }
],
"adjustParameters":"

    $year = $parameters['disb_fiscal_year_id'];
    if(isset($year)) {
        $parameters['fiscal_year_id'] = $year;
    }

    if(isset($parameters['disb_vendor_type'])){
        $parameters['disb_vendor_type'] = MappingUtil::getVendorTypeValue($parameters['disb_vendor_type']);
    }

    $adjustedParameters = $parameters;
    if(function_exists('_checkbook_project_applyParameterFilters')){
        $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
    }
    return $adjustedParameters;
",
"adjustDataTableOptions":"
          $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;

          $rpp = RequestUtilities::getRequestParamValue('rpp');
             if(is_numeric($rpp) ){
                    $adjustDataTableOptions->iDisplayLength = (int)$rpp;
             }
",
"dataTableOptions":{
         "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "iDisplayLength":20,
        "bPaginate": true,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo":"Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
         "aoColumns":[
            {"sClass":"text","sWidth":"200px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"80px","asSorting":["asc","desc"]},
            {"sWidth":"20px","bSortable": false},
            {"sClass":"number","sWidth":"155px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"30px"},
            {"sClass":"text pad-left","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"200px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"130px","asSorting":["desc","asc"]},
            {"bSortable":false,"sWidth":"30px"},
            {"sClass":"text pad-left","sWidth":"150px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"150px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"110px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"200px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"30px"},
            {"sClass":"text","sWidth":"100px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"115px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"100px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"30px"}
        ],
         "aaSorting":[[7,"desc"]],
       		"sScrollX":"100%",

 		"bScrollCollapse": false,
        "fnInitComplete":"##function () { new FixedColumns( oTable, {
 		\"iLeftColumns\": 1,
		\"iLeftWidth\": 200
 	} );}##"
},
"customExternalJS":"function prepareTableListFilterUrl(){
    var agencyIds = getNamedFilterCriteria('fagencyId');
    if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
        agencyIds = document.getElementById('fHideAgencyId').value;
    }
    var oVendorIds = getNamedFilterCriteria('fvendorId');
    var oVendorNms = getNamedFilterCriteria('fvendorNm');
    var oCategoryIds = getNamedFilterCriteria('fCategoryNm');
    var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
    var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
    var oDeptIds = getNamedFilterCriteria('fdeptNm');
    var oVendorType = getNamedFilterCriteria('fvendorType');
    var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');
    var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');

    var  cUrl = oTable.fnSettings().sAjaxSource;
    cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
    cUrl = adjustUrlParameter(cUrl,'subvendor',oVendorIds);
    cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
    cUrl = adjustUrlParameter(cUrl,'expcategorynm',oCategoryIds);
    cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
    cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
    cUrl = adjustUrlParameter(cUrl,'deptnm',oDeptIds);
    cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
    cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
    cUrl = adjustUrlParameter(cUrl,'industry',oIndustryType);

       return cUrl;
    }"
}
