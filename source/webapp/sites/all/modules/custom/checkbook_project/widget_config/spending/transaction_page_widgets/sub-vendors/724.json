{
    "widgetType": "data_tables",
    "widgetSubType": "dataTableList",
    "cleanURLParameters":[
        "agency",
        "vendor",
        "expcategory",
        "category",
        "year",
        "yeartype",
        "syear",
        "calyear",
        "scalyear",
        "checkamt",
        "checkamtr",
        "contnum_exact",
        "contnum",
        "vendornm",
        "vendornm_exact",
        "expcategorynm",
        "mwbe",
        "agid",
        "magid"
    ],
    "urlParamMap":{
        "agency":"agency_id",
        "vendor":"vendor_id",
        "expcategory":"expenditure_object_id",
        "category":"spending_category_id",
        "year":"year_id",
        "yeartype":"year_type",
        "syear":"check_eft_issued_nyc_year_id",
        "calyear":"calendar_fiscal_year_id",
        "scalyear":"calendar_fiscal_year_id",
        "checkamt":"check_amount",
        "checkamtr":"check_amount",
        "contnum_exact":"reference_document_number",
        "contnum":"contnum.contnum",
        "vendornm":"vendor_name",
        "vendornm_exact":"vendor_name",
        "expcategorynm":"master_agreement_id",
        "mwbe":"minority_type_id",
        "agid":"agreement_id",
        "magid":"master_agreement_id"
    },
    "paramTypeConfig":{
        "year":"year_id",
        "syear":"le",
        "scalyear":"le",
        "checkamt":"range",
        "checkamtr":"rangeid",
        "contnum_exact":"eqignorecase",
        "contnum":"like",
        "vendornm":"like",
        "vendornm_exact":"eqignorecase",
        "expcategorynm":"eqignorecase"
    },
    "allowRequestParams":["dtsmnid","smnid"],
    "header":"$header = NULL;$header .= widget_data_tables_export_link($node);return $header;",
//    "useList":true,
    "stickyHeader":true,
    "getTotalDataCount":true,
    "limit":"35",
    "noDataInitialLoad":true,
    "html_class": "initiative-table transaction-table",
    "no_results_content":"No Results Found",
    "dataset": "checkbook:contracts_subven_spending_transactions",
    "columns": [
        "sub_vendor.sub_vendor",
        "sub_vendor.sub_vendor.legal_name",
        "issuedate.issuedate",
        "agency.agency",
        "agency.agency.agency_name",
        "contnum.contnum",
        "purpose.purpose",
        "category.category",
        "category.category.spending_category_name",
        "chkamt.chkamt",
        "minority_type.minority_type"
    ],
"derivedColumns": {
    "payee_name_formatted": {
        "type":"expression2",
        "expression":"_get_tooltip_markup($row['sub_vendor_sub_vendor_legal_name'],36)"
    },
    "payee_name_link": {
        "type":"expression2",
        "expression":"'<a href=\"' . SpendingUtil::getVendorNameLinkUrl($node,$row) . '\">' . $row[payee_name_formatted] . '</a>'"
    },
    "payee_name_link2": {
        "type":"expression2",
        "expression":"($row[sub_vendor_sub_vendor] == null )?$row['sub_vendor_sub_vendor_legal_name']:$row[payee_name_link]"
    },
    "is_sub_vendor_formatted": {
        "type":"expression2",
        "expression":"(true)?'Yes':'No'"
    },
    "issue_date_formatted":{
        "type": "expression2",
        "expression": "(_checkbook_check_isEDCPage()? 'N/A' : $row[issuedate_issuedate])"
    },
    "agency_name_formatted":{
        "type": "expression2",
        "expression": "_get_tooltip_markup($row[agency_agency_agency_name], 30)"
    },
    "agency_name_link": {
        "type": "expression2",
        "expression": " RequestUtil::isNewWindow() ? $row[agency_name_formatted]  : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string(false,false,false,true) . SpendingUtil::getDataSourceParams()  . _checkbook_project_get_url_param_string('category') . '/agency/'. $row[agency_agency_agency_name]. '?expandBottomCont=true>'. $row[agency_name_formatted] .'</a>') "
    },
    "formatted_check_amount": {
        "type": "expression2",
        "expression": "custom_number_formatter_basic_format($row['chkamt.chkamt'])"
    },
    "reference_document_number_export": {
        "type": "expression2",
        "expression": "($row[spending_category_name] == 'Payroll' ||  $row[spending_category_name] == 'Others') ? 'N/A' : $row[contnum_contnum]"
    } ,
    "reference_document_number_link": {
        "type": "expression2",
        "expression": "(ContractURLHelper::prepareSpendingContractLink($row, $node))?ContractURLHelper::prepareSpendingContractLink($row, $node):'N/A'"
    },
    "purpose_formatted":{
        "type": "expression2",
        "expression": "_get_tooltip_markup($row[purpose_purpose], 30)"
    },
    "contract_purpose_text":{
        "type": "expression2",
        "expression": "($row[category_category_spending_category_name] == 'Payroll' ||  $row[category_category_spending_category_name] == 'Others') ? 'N/A' : $row[purpose_formatted]"
    },
    "contract_purpose_export":{
        "type": "expression2",
        "expression": "($row[category_category_spending_category_name] == 'Payroll' ||  $row[category_category_spending_category_name] == 'Others') ? 'N/A' : $row[purpose_purpose]"
    },
    "mwbe_category_name": {
        "type":"expression2",
        "expression":"MappingUtil::getMinorityCategoryById($row[minority_type_minority_type])"
    }

//    "agency_param":{
//        "type": "expression2",
//        "expression": "(_checkbook_check_isEDCPage()? _checkbook_project_get_url_param_string(\"agency\") :'')"
//    }
//    "vendor_name_link": {
//        "type": "expression2",
//        "expression": " RequestUtil::isNewWindow() ||  $row[spending_category_id]==2 ?  $row[vendor_name_formatted] : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string(false,false,false,true) . SpendingUtil::getDataSourceParams() . $row['agency_param'] . _checkbook_project_get_url_param_string('category') . (_checkbook_check_isEDCPage() ? ('/agency/'. $row[agency_id]) :'') . '/vendor/'. $row[vendor_id] . '?expandBottomCont=true>'. $row[vendor_name_formatted] .'</a>') "
//    } ,



//    "fms_document_link": {
//        "type": "expression2",
//        "expression": "($row[spending_category_name] == 'Payroll' ||  $row[spending_category_name] == 'Others') ? 'N/A' : '' "
//    },
//    "purpose_formatted":{
//        "type": "expression2",
//        "expression": "_get_tooltip_markup($row[purpose], 30)"
//    },
//    "purpose_cy_formatted":{
//        "type": "expression2",
//        "expression": "_get_tooltip_markup($row[purpose_cy], 30)"
//    },
//    "contract_purpose_cy_text":{
//        "type": "expression2",
//        "expression": "($row[spending_category_name] == 'Payroll' ||  $row[spending_category_name] == 'Others') ? 'N/A' : $row[purpose_cy_formatted]"
//    },
//    "contract_purpose_cy_export":{
//        "type": "expression2",
//        "expression": "($row[spending_category_name] == 'Payroll' ||  $row[spending_category_name] == 'Others') ? 'N/A' : $row[purpose_cy]"
//    },

},
"table_columns": [
    {"labelAlias":"payee_name","column":"payee_name_link2","sortSourceColumn":"sub_vendor.sub_vendor.legal_name"},
    {"labelAlias":"is_sub_vendor","column":"is_sub_vendor_formatted","sortSourceColumn":"sub_vendor.sub_vendor","export":false},
    {"labelAlias":"issue_date","column":"issue_date_formatted","sortSourceColumn":"issuedate.issuedate","exportColumn":"issue_date_formatted"},
    {"labelAlias":"agency_name","column":"agency_name_link","sortSourceColumn":"agency.agency.agency_name"},
    {"labelAlias":"check_amount","column":"formatted_check_amount","sortSourceColumn":"chkamt.chkamt"},
    {"labelAlias":"contract_id","column":"reference_document_number_link","sortSourceColumn":"contnum.contnum","exportColumn":"reference_document_number_export"},
    {"labelAlias":"sub_contract_reference_id","column":"is_sub_vendor_formatted","sortSourceColumn":"sub_vendor.sub_vendor","export":false},
    {"labelAlias":"contract_purpose","column":"contract_purpose_text","sortSourceColumn":"purpose.purpose","exportColumn":"contract_purpose_export"},
    {"labelAlias":"spending_category","column":"category_category_spending_category_name","sortSourceColumn":"category.category"},
    {"labelAlias":"mwbe_category","column":"mwbe_category_name","sortSourceColumn":"minority_type.minority_type","exportColumn":"mwbe_category_name"}
],
"adjustParameters":"
    $yearType = $parameters['year_type'][0];
    $year = $parameters['year_id'][0];

    if(isset($yearType)){
        if($yearType == 'B')
        $parameters['check_eft_issued_nyc_year_id'] = $year;
        else if($yearType == 'C')
        $parameters['calendar_fiscal_year_id'] = $year;
    }

    unset($parameters['year_type']);
    unset($parameters['year_id']);

    if(!$node->is_mwbe) unset($parameters['minority_type_id']);

    $dtsmnid = _getRequestParamValue('dtsmnid');
    if($dtsmnid == 20) {//From spending landing page
        $data_controller_instance = data_controller_get_operator_factory_instance();
        $parameters['agreement_id'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
        $parameters['contract_number'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
    }

    $smnid = _getRequestParamValue('smnid');
    if($smnid == 371) { //From contracts landing page
        $minority_type_id = $parameters['minority_type_id'][0];
        if(isset($minority_type_id)) {
            $parameters['contract_minority_type_id'] = $minority_type_id;
            unset($parameters['minority_type_id']);
        }
    }

    $adjustedParameters = $parameters;
    if(function_exists('_checkbook_project_applyParameterFilters')){
        $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
    }
    return $adjustedParameters;
",
"dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "bPaginate": true,
         "iDisplayLength":35,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aoColumns":[
            {"sClass":"text","sWidth":"229px","bSortable": false},
            {"sClass":"text","sWidth":"150px","bSortable": false,"asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"90px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"number pad-left","sWidth":"135px","asSorting":["desc","asc"]},
            {"sClass":"text pad-left","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"150px","bSortable": false,"asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]}
],
        "aaSorting":[[4,"desc"]],
        "sScrollX": "100%",
		"bScrollCollapse": false,
        "fnInitComplete": "##function () { new FixedColumns( oTable, {
		\"iLeftColumns\": 1,
		\"iLeftWidth\": 229
	} );}##"
},
"customExternalJS":"function prepareTableListFilterUrl(){
    var agencyIds = getNamedFilterCriteria('fagencyId');
    if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
        agencyIds = document.getElementById('fHideAgencyId').value;
    }
    var oVendorIds = getNamedFilterCriteria('fvendorId');
    var oVendorNms = getNamedFilterCriteria('fvendorNm');
    var oCategoryIds = getNamedFilterCriteria('fCat' + 'egoryId');
    var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
    var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
    var oDeptIds = getNamedFilterCriteria('fdeptId');
    var oDeptNms = getNamedFilterCriteria('fdeptNm');
    var oSpendCategoryNms = getNamedFilterCriteria('fCategoryNm');
    var oMwbeVendorId = getNamedFilterCriteria('fmwbeVendorId');
    var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');

    var cUrl = oTable.fnSettings().sAjaxSource;

    var cUrlArray = cUrl.split('/');
    var dtsmnidNameIndex = jQuery.inArray('dtsmnid', cUrlArray);

    if (dtsmnidNameIndex != -1 && cUrlArray[(dtsmnidNameIndex+1)] == 20) {
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'vendor',oVendorIds);
    }
    else {
        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'vendor',oVendorIds);
    }
    cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
    cUrl = adjustUrlParameter(cUrl,'expcategory',oCategoryIds);
    cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
    cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
    cUrl = adjustUrlParameter(cUrl,'expcategorynm',oSpendCategoryNms);
    cUrl = adjustUrlParameter(cUrl,'mwbe_vendor',oMwbeVendorId);
    cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);

    return cUrl;
    }"
}