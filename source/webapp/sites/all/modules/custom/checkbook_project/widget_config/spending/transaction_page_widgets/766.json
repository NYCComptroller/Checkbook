{
    "widgetType": "data_tables",
    "widgetSubType": "dataTableList",
    "cleanURLParameters":[
      "vendornm_exact",
      "expdoc_exact",
      "captprj_exact",
      "contnum_exact",
      "agency",
      "deptnm_facet",
      "expcategorynm_facet",
      "mcagency",
      "agencyh",
      "year",
      "calyear",
      "mcvendor",
      "expcategory",
      "category",
      "checkamtr",
      "dept",
      "contnum",
      "checkamt",
      "chkdate",
      "fundcls",
      "bdgcodenm",
      "captprj",
      "expdoc",
      "vendornm",
      "deptnm",
      "expcategorynm",
      "syear",
      "scalyear",
      "magid",
      "agid",
      "cvendor",
      "cagency",
      "awdmethod",
      "status",
      "csize",
      "cindustry",
      "expcategorycode",
      "month",
      "industry",
      "mwbe",
      "vendor",
      "svendor",
      "subvendor",
      "vendortype",
      "fvendor"
    ],
    "urlParamMap":{
      "contnum_exact": "reference_document_number",
      "captprj_exact": "reporting_code",
      "expdoc_exact": "disbursement_number",
      "deptnm_facet": "department_name",
      "expcategorynm_facet": "expenditure_object_name",
      "vendor_facet": "vendor_name",
      "vendornm_exact": "vendor_name",
      "vendornm": "vendor_name",
      "year": "check_eft_issued_nyc_year_id",
      "calyear": "calendar_fiscal_year_id",
      "agency": "agency_id",
      "mcagency": "master_child_contract_agency_id",
      "agencyh": "agency_history_id",
      "mcvendor": "master_child_contract_vendor_id",
      "expcategory": "expenditure_object_id",
      "checkamtr": "check_amount",
      "dept": "department_code",
      "contnum": "reference_document_number",
      "checkamt": "check_amount",
      "chkdate": "check_eft_issued_date",
      "fundcls": "fund_class_id",
      "bdgcodenm": "budget_name",
      "captprj": "reporting_code",
      "category": "spending_category_id",
      "expdoc": "disbursement_number",
      "deptnm": "department_name",
      "expcategorynm": "expenditure_object_name",
      "syear": "check_eft_issued_nyc_year_id",
      "scalyear": "calendar_fiscal_year_id",
      "magid": "master_agreement_id",
      "agid": "agreement_id",
      "cvendor": "vendor_id@checkbook:contracts_spending_transactions",
      "cagency": "document_agency_id@checkbook:contracts_spending_transactions",
      "awdmethod": "award_method_id@checkbook:contracts_spending_transactions",
      "status": "status_flag@checkbook:contracts_spending_transactions",
      "csize": "award_size_id@checkbook:contracts_spending_transactions",
      "cindustry": "industry_type_id@checkbook:contracts_spending_transactions",
      "expcategorycode": "expenditure_object_code",
      "month": "check_eft_issued_cal_month_id",
      "mwbe": "minority_type_id",
      "industry": "industry_type_id",
      "vendor": "prime_vendor_id",
      "svendor": "prime_vendor_id",
      "subvendor": "vendor_id",
      "vendortype": "vendor_type",
      "fvendor": "vendor_name"
    },
    "paramTypeConfig":{
      "vendornm_exact": "eqignorecase",
      "expdoc_exact": "eqignorecase",
      "captprj_exact": "eqignorecase",
      "contnum_exact": "eqignorecase",
      "checkamtr": "rangeid",
      "checkamt": "range",
      "chkdate": "range",
      "captprj": "like",
      "contnum": "like",
      "bdgcodenm": "contains",
      "expdoc": "like",
      "syear": "le",
      "scalyear": "le",
      "deptnm": "eqignorecase",
      "expcategorynm": "eqignorecase",
      "vendornm": "like"
    },
    "allowRequestParams":["dtsmnid","smnid"],
    "header":"
        $header = NULL;
        $header .= widget_data_tables_export_link($node);
        return $header;
    ",
    "useList":true,
    "stickyHeader":true,
    "getTotalDataCount":true,
    "limit":"35",
    "noDataInitialLoad":true,
    "html_class": "initiative-table transaction-table",
    "no_results_content":"No Results Found",
    "dataset": "checkbook:spending_transactions_all",
    "uniqueSortColumn":"disbursement_line_item_id",
    "columns": [
        "disbursement_number",
        "agency_id",
        "vendor_id",
        "vendor_name",
        "vendor_type",
        "legal_name@checkbook:sub_vendor",
        "prime_vendor_id",
        "legal_name@checkbook:prime_vendor",
        "check_eft_issued_date",
        "agency_name",
        "department_name",
        "department_short_name",
        "check_amount",
        "expenditure_object_name",
        "budget_name",
        "reference_document_number",
        "purpose",
        "purpose_cy",
        "reporting_code",
        "spending_category_name",
        "expenditure_object_id",
        "department_id",
        "spending_category_id",
        "agreement_id",
        "reference_document_code",
        "sub_contract_id",
        "industry_type_id",
        "industry_type_name",
        "minority_type_id",
        "is_prime_or_sub",
        "original_agreement_id@checkbook:sub_vendor_agid"
    ],
    "derivedColumns": {
        "associated_prime_vendor_name":{
            "expression":"(preg_match('/S/', $row['vendor_type'])) ? _get_tooltip_markup($row['legal_name@checkbook:prime_vendor'], 34) : 'N/A'"
        },
        "associated_prime_vendor_name_export":{
            "expression":"(preg_match('/S/', $row['vendor_type'])) ? $row['legal_name@checkbook:prime_vendor'] : 'N/A'"
        },
        "is_sub_vendor": {
            "expression":"(preg_match('/S/', $row['vendor_type'])) ? 'Yes' : 'No'"
        },
        "disbursement_number_derived":{
            "expression": "($row['spending_category_name']=='Payroll' || $row['disbursement_number'] == '')?'N/A':$row['disbursement_number']"
        },
        "agency_name_formatted":{
            "expression": "_get_tooltip_markup($row['agency_name'], 40)"
        },
        "agency_name_link": {
            "expression": " RequestUtil::isNewWindow() ? $row['agency_name_formatted']  : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string(false,false,false,true) . SpendingUtil::getDataSourceParams()  . _checkbook_project_get_url_param_string('category') . '/agency/'. $row['agency_id']. '?expandBottomCont=true>'. $row['agency_name_formatted'] .'</a>') "
        },
        "payee_name_formatted":{
            "expression": "_get_tooltip_markup($row['vendor_name'], 34)"
        },
        "payee_name_export":{
            "expression": "$row['vendor_name']"
        },
        "payee_name_link": {
            "expression": " RequestUtil::isNewWindow() ||  $row['spending_category_id']==2 ?  $row['payee_name_formatted'] : ('<a href=\"' . SpendingUtil::getPayeeNameLinkUrl($node,$row) . '?expandBottomCont=true' . '\">'. $row['payee_name_formatted'] .'</a>') "
        },
        "issue_date_formatted":{
            "expression": "(_checkbook_check_isEDCPage()? 'N/A' : $row['check_eft_issued_date'])"
        },
        "formatted_check_amount": {
            "expression": "custom_number_formatter_basic_format($row['check_amount'])"
        },
        "reference_document_number_export": {
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['reference_document_number']"
        },
        "sub_vendor_reference_document_number_link":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : '<a class=\"new_window\" href=\"' . SpendingUtil::getSubContractNumberLinkUrl($node,$row) . '\">'  . $row['reference_document_number'] . '</a>'"
        },
        "prime_vendor_reference_document_number_link": {
            "expression": "(ContractURLHelper::prepareSpendingContractLink($row, $node))?ContractURLHelper::prepareSpendingContractLink($row, $node):'N/A'"
        },
        "reference_document_number_link_logic": {
            "expression": "(preg_match('/S/', $row['vendor_type'])) ? $row['sub_vendor_reference_document_number_link'] : $row['prime_vendor_reference_document_number_link']"
        },
        "reference_document_number_link":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['reference_document_number_link_logic']"
        },
        "purpose_formatted":{
            "expression": "_get_tooltip_markup($row['purpose'], 30)"
        },
        "contract_purpose_text":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['purpose_formatted']"
        },
        "contract_purpose_export":{
            "expression": "($row['spending_category_name'] == 'Payroll' ||  $row['spending_category_name'] == 'Others') ? 'N/A' : $row['purpose']"
        },
        "expense_cat_formatted":{
            "expression": "_get_tooltip_markup($row['expenditure_object_name'],40)"
        },
        "dept_name_formatted":{
            "expression": "_get_tooltip_markup($row['department_name'],40)"
        },
        "mwbe_category_name_formatted": {
            "expression":"MappingUtil::getMinorityCategoryById($row['minority_type_id'])"
        },
        "mwbe_category_name": {
            "expression": " RequestUtil::isNewWindow() || !MappingUtil::isMWBECertified(array($row['minority_type_id'])) ? $row['mwbe_category_name_formatted']  : ('<a href=' . SpendingUtil::getAdvancedSearchMWBECategoryLinkUrl($node, $row) . '>'. $row['mwbe_category_name_formatted'] .'</a>') "
        },
        "industry_name_formatted": {
            "expression": "_get_tooltip_markup($row['industry_type_name'],36)"
        }
    },
    "table_columns": [
      {
        "labelAlias": "document_id",
        "column": "disbursement_number_derived",
        "sortSourceColumn": "disbursement_number",
        "exportColumn": "disbursement_number_derived"
      },
      {
        "labelAlias": "payee_name",
        "column": "payee_name_link",
        "sortSourceColumn": "vendor_name",
        "exportColumn": "payee_name_export"
      },
      {
        "labelAlias": "is_sub_vendor",
        "column": "is_sub_vendor",
        "sortSourceColumn": "vendor_type",
        "exportColumn": "is_sub_vendor"
      },
      {
        "label": "",
        "column": "",
        "export": false
      },
      {
        "labelAlias": "associated_prime_vendor",
        "column": "associated_prime_vendor_name",
        "sortSourceColumn": "legal_name@checkbook:prime_vendor",
        "exportColumn": "associated_prime_vendor_name_export"
      },
      {
        "labelAlias": "issue_date",
        "column": "issue_date_formatted",
        "sortSourceColumn": "check_eft_issued_date",
        "headerClass": "issuedate",
        "exportColumn": "issue_date_formatted"
      },
      {
        "labelAlias": "agency_name",
        "column": "agency_name_link",
        "sortSourceColumn": "agency_name"
      },
      {
        "labelAlias": "dept_name",
        "column": "dept_name_formatted",
        "sortSourceColumn": "department_name"
      },
      {
        "labelAlias": "check_amount",
        "column": "formatted_check_amount",
        "sortSourceColumn": "check_amount",
        "headerClass": "centrig"
      },
      {
        "label": "",
        "column": "",
        "export": false
      },
      {
        "labelAlias": "expense_category",
        "column": "expense_cat_formatted",
        "sortSourceColumn": "expenditure_object_name"
      },
      {
        "labelAlias": "industry_name",
        "column": "industry_name_formatted",
        "sortSourceColumn": "industry_type_name"
      },
      {
        "labelAlias": "contract_id",
        "column": "reference_document_number_link",
        "sortSourceColumn": "reference_document_number",
        "exportColumn": "reference_document_number_export"
      },
      {
        "labelAlias": "sub_contract_reference_id",
        "column": "sub_contract_id",
        "exportColumn": "sub_contract_id"
      },
      {
        "label": "",
        "column": "",
        "export": false
      },
      {
        "labelAlias": "contract_purpose",
        "column": "contract_purpose_text",
        "sortSourceColumn": "purpose",
        "exportColumn": "contract_purpose_export"
      },
      {
        "labelAlias": "capital_project",
        "column": "reporting_code"
      },
      {
        "labelAlias": "spending_category",
        "column": "spending_category_name"
      },
      {
        "labelAlias": "mwbe_category",
        "column": "mwbe_category_name",
        "sortSourceColumn": "minority_type_id",
        "exportColumn": "mwbe_category_name_formatted"
      },
      {
        "label": "",
        "column": "",
        "export": false
      }
    ],
    "exportColumnSqlOverride":[
        {
            "column":"mwbe_category_name",
            "sourceColumn":"minority_type_id",
            "sql":"
                case
                when minority_type_id = 2 then 'Black American'
                when minority_type_id = 3 then 'Hispanic American'
                when minority_type_id = 7 then 'Non-M/WBE'
                when minority_type_id = 9 then 'Women'
                when minority_type_id = 11 then 'Individuals and Others'
                else 'Asian American'
                end as minority_type_name
                "
        },
        {
            "column":"is_sub_vendor",
            "sourceColumn":"vendor_type",
            "sql":"case when vendor_type = 'P' or vendor_type = 'PM' then 'No' else 'Yes' end as is_sub_vendor"
        },
        {
            "column":"associated_prime_vendor_name",
            "sourceColumn":"legal_name",
            "sql":"case when vendor_type = 'P' or vendor_type = 'PM' then 'N/A' else legal_name end"
        },
        {
          "column":"disbursement_number_derived",
          "sourceColumn":"disbursement_number",
          "sql":"case when disbursement_number IS NULL then 'N/A' else disbursement_number end"
        },
        {
          "column":"reference_document_number_link",
          "sourceColumn":"reference_document_number",
          "sql":"case when reference_document_number IS NULL then 'N/A' else reference_document_number end"
        },
        {
          "column":"contract_purpose_text",
          "sourceColumn":"purpose",
          "sql":"case when spending_category_name IN ('Payroll','Others') then 'N/A' else purpose end"
        }
    ],
    "adjustParameters":"
        $subvendor = RequestUtilities::getRequestParamValue('subvendor');
        $mwbe = RequestUtilities::getRequestParamValue('mwbe');
        if(isset($subvendor)) {
            $data_controller_instance = data_controller_get_operator_factory_instance();
            $parameters['prime_vendor_id'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
            if($subvendor == all) {
                $parameters['vendor_id'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
            }
            $parameters['is_prime_or_sub'] = 'S';
        }
        else if(isset($mwbe)) {
            if(isset($parameters['prime_vendor_id'])) {
                $parameters['vendor_id'] = $parameters['prime_vendor_id'];
                unset($parameters['prime_vendor_id']);
            }
        }

        if(isset($parameters['vendor_type'])){
            $parameters['vendor_type'] = MappingUtil::getVendorTypeValue($parameters['vendor_type']);
        }

        $adjustedParameters = $parameters;
        if(function_exists('_checkbook_project_applyParameterFilters')){
            $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        return $adjustedParameters;
    ",
    "widgetPreprocessJSON":"_checkbook_project_adjust_vendor_facet_json($node);",
    "dataTableOptions":{
        "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "bPaginate": true,
         "iDisplayLength":35,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
        "aoColumns":[
            {"sClass":"text","sWidth":"196px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"229px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"50px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"50px"},
            {"sClass":"text","sWidth":"229px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"130px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"number pad-left","sWidth":"150px","asSorting":["desc","asc"]},
            {"bSortable":false,"sWidth":"50px"},
            {"sClass":"text pad-left","sWidth":"180px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"120px","asSorting":["asc","desc"]},
            {"sClass":"text pad-left","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"number","sWidth":"150px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"50px"},
            {"sClass":"text pad-left","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"165px","asSorting":["asc","desc"]},
            {"sClass":"text","sWidth":"150px","asSorting":["asc","desc"]},
            {"bSortable":false,"sWidth":"10px"}
        ],
        "aaSorting":[[8,"desc"]],
        "sScrollX": "100%",
		"bScrollCollapse": false,
        "fnInitComplete": "##function () { new FixedColumns( oTable, {
		\"iLeftColumns\": 1,
		\"iLeftWidth\": 196
	    } );}##"
    },
    "customExternalJS":"function prepareTableListFilterUrl(){
        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
            agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oVendorNms = getNamedFilterCriteria('fvendorNm');
        var oCategoryIds = getNamedFilterCriteria('fCat' + 'egoryId');
        var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
        var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
        var oDeptIds = getNamedFilterCriteria('fdeptId');
        var oDeptNms = getNamedFilterCriteria('fdeptNm');
        var oSpendCategoryNms = getNamedFilterCriteria('fCategoryNm');
        var oVendorType = getNamedFilterCriteria('fvendorType');
        var oMinorityTypeId = getNamedFilterCriteria('fminorityTypeId');
        var oIndustryType = getNamedFilterCriteria('fIndustryTypeId');

        var cUrl = oTable.fnSettings().sAjaxSource;

        var cUrlArray = cUrl.split('/');
        var dtsmnidNameIndex = jQuery.inArray('dtsmnid', cUrlArray);

        cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
        cUrl = adjustUrlParameter(cUrl,'vendornm_exact',oVendorNms);
        cUrl = adjustUrlParameter(cUrl,'expcategory',oCategoryIds);
        cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
        cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
        //Dept should never be included without agency
        if(agencyIds.length != 0) {
            cUrl = adjustUrlParameter(cUrl,'dept',oDeptIds);
            cUrl = adjustUrlParameter(cUrl,'deptnm',oDeptNms);
        }
        else {
            cUrl = adjustUrlParameter(cUrl,'dept',null);
            cUrl = adjustUrlParameter(cUrl,'deptnm',null);
        }
        cUrl = adjustUrlParameter(cUrl,'expcategorycode',oSpendCategoryNms);
        cUrl = adjustUrlParameter(cUrl,'vendortype',oVendorType);
        cUrl = adjustUrlParameter(cUrl,'mwbe',oMinorityTypeId);
        cUrl = adjustUrlParameter(cUrl,'industry',oIndustryType);
        return cUrl;
    }"
}
