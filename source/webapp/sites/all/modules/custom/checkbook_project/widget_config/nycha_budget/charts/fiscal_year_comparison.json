{
  "widgetType":"highcharts",
  "widgetSubType":"highcharts",
  "header":"
  $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
  $header .= ChartUtil::generateWidgetGridViewLink($node);
  return $header;
  ",
  "chartTitle": "Fiscal Year Comparisons",
  "gridConfig":{
    "template":"highchart_budget_grid_view",
    "html_class":"chart-grid-view-table",
    "table_columns": [
      {
        "labelAlias": "fiscal_year",
        "column": "year_year",
        "sortColumn":"sort_order"
      },
      {
        "colLabel": "committed",
        "column": "budget_committed",
        "eval":true
      },
      {
        "colLabel": "remaining",
        "column": "budget_remaining",
        "eval":true
      }
    ]
  },
  "dataset":"checkbook_nycha:budget",
  "columns":[
    "year.year",
    "year_id.year_id",
    "budget_committed",
    "budget_remaining"
  ],
  "orderBy":"year.year",
  "defaultParameters":{
    "year_id.year_id":114
  },
  "cleanURLParameters":[
    "year",
    "agency",
    "dept",
    "expcategory"
  ],
  "urlParamMap":{
    "year":"year_id.year_id",
    "agency":"agency_id.agency_id",
    "dept":"dept_code.dept_code",
    "expcategory":"object_class_id.object_class_id"
  },
  "adjustParameters":"
  $adjustedParameters = $parameters;
  if (count($adjustedParameters) > 0) {
  foreach ($adjustedParameters as $key => $value) {
  if ($key == 'year_id.year_id' && $value[0] <= 115 ){
  $year = $value[0];
$adjustedParameters[$key] = array(data_controller_get_operator_factory_instance()->initiateHandler(RangeOperatorHandler::$OPERATOR__NAME, 112, $year));
} else if ($key == 'year_id.year_id' && $value[0] > 115){
$end = $value[0];
$start = $end - 3;
$adjustedParameters[$key] = array(data_controller_get_operator_factory_instance()->initiateHandler(RangeOperatorHandler::$OPERATOR__NAME, $start, $end));
}
}
}
return $adjustedParameters;",
"transformationPHP":"
$transactions_page = '/' .  current_path()  . '?expandBottomContURL=/panel_html/budget_transactions';
$agency = ($node->widgetConfig->requestParams['agency_id.agency_id']) ? '/agency/' . $node->widgetConfig->requestParams['agency_id.agency_id'] : '';
$dept = ($node->widgetConfig->requestParams['dept_code.dept_code']) ? '/dept/' . $node->widgetConfig->requestParams['dept_code.dept_code'] : '';
$expcategory = ($node->widgetConfig->requestParams['object_class_id.object_class_id']) ? '/expcategory/' . $node->widgetConfig->requestParams['object_class_id.object_class_id'] : '';
$budget_committed = '/budgettype/committed';
$budget_remaining = '/budgettype/remaining';
$allZero = TRUE;
foreach ($node->data as $row){
if (abs($row['budget_committed']) > 0){$allZero = FALSE;}
if (abs($row['budget_remaining']) > 0){$allZero = FALSE;}
$categories[] = $row['year_year'];
$year = '/year/' . $row['year_id_year_id'];
$url_committed = $transactions_page . $budget_committed . $agency . $expcategory . $dept . $year;
$url_remaining = $transactions_page . $budget_remaining . $agency . $expcategory . $dept . $year;
$committed_data[] = array('name' => $row['year_year'], 'y' => $row['budget_committed'], 'url' => $url_committed);
$remaining_data[] = array('name' => $row['year_year'], 'y' => $row['budget_remaining'], 'url' => $url_remaining);
}
if($allZero){$node->totalDataCount = 0;}
$node->widgetConfig->chartTitle = 'Fiscal Year Comparisons';
$node->widgetConfig->chartConfig->xAxis->categories = $categories;
$node->widgetConfig->chartConfig->series = array(array('name' => 'Committed', 'data' => $committed_data), array('name' => 'Remaining', 'data' => $remaining_data));
return $node->data;
",
"summaryView":{
"template":"budget_expense_transactions_summary",
"templateTitle":"Expense Budget Details",
"templateLabel":"Year",
"templateLabelEval":"return 'FY '._getYearValueFromID(RequestUtilities::getRequestParamValue('year'));"
},
"chartConfig":{
"chart":{
"defaultSeriesType":"column"
},
"legend":{
"align":"left",
"verticalAlign":"bottom"
},
"xAxis":{
"categories":[]
},
"yAxis":{
"title":{
"text":""
},
"labels":{
"function":"yAxisFormatter"
}
},
"tooltip":{
"function":"budgetTooltip"
},
"plotOptions":{
"column":{
"minPointLength":3,
"pointWidth":50
},
"series":{
"cursor":"pointer",
"point":{
"events":{
"function":"clickEvent"
}
}
}
},
"series":[],
"title":{
"text":""
}
}
}
<function>yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##

budgetTooltip^^"formatter" : function() {return 'Year: '+this.point.name + '<br>Amount: ' + abbrNum(this.y, 2, '$')}##
clickEvent^^"click": function(){location.href = this.url;}
</function>
