{
"widgetType": "highcharts",
"html_class":"pieChartSlide",
"header":"
    $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>
    <p class=\"pieCount\">'. $node->widgetConfig->chartSubTitle .'</p>';
    return $header;
",
"cleanURLParameters":["agency","yeartype","awdmethod","vendor","status","csize","cindustry","mwbe","year","subvendor"],
"no_results_content":"No Results Found",
"widgetDataLoader":"
    $parameters = array();
    foreach($node->widgetConfig->requestParams as $param=>$value){
        $values_array = explode('~',$value);
        if(count($values_array) > 1){
            $parameters[$param] =  '(' . implode(',', $values_array) . ')';
        }else
            $parameters[$param] = htmlspecialchars_decode(_replace_special_characters_decode($value));
    }

    $subvendor = RequestUtilities::getRequestParamValue('subvendor');
    $fnName = isset($subvendor) ? 'GetContractsSubvendorReportingCountsSubLevel' : 'GetContractsSubvendorReportingCounts';

    $service = new ContractsDataService();
    $data = $service->$fnName($parameters)->getByDataset($parameters);
    $node->data  = $data;

",
"widgetUpdateJSONConfig":"

	$series_data = array();
        $legend_order = array(1 => 'Contracts with No Response by Prime',
                        4 => 'Contracts with Response Not Required by Prime',
                        2 => 'Reported Contracts with Sub Vendors',
                        3 => 'Reported Contracts without Sub Vendors'
                        );
	$index = 0;
        $total_contracts = 0;

        if(count($node->data) > 0){
            foreach($node->data as $row){
                $data[$row['scntrc_status']] = (int)$row['total_contracts'];
            }
            foreach($legend_order as $scntrc_status_id => $scntrc_status_name){
                if($data[$scntrc_status_id] > 0){
                    $series[$index]->y = $data[$scntrc_status_id];
                    $series[$index]->name = $scntrc_status_name;
                    $index += 1;
                    $total_contracts += $data[$scntrc_status_id];
                }
            }
            $node->widgetConfig->chartConfig->series[0]->data = $series;
        }else{
            $node->data = null;
        }
        $node->widgetConfig->chartTitle =  MappingUtil::getCurrenEthnicityName() . ' Sub Vendor Reporting by Prime Contracts';
$node->widgetConfig->chartSubTitle =  'Total Number of Contracts: '.number_format($total_contracts);
",
"chartConfig": {
"chart": {
"marginRight": 40,
"defaultSeriesType": "pie",
"plotBackgroundColor": null,
"plotBorderWidth": null,
"plotShadow": false
        },
        "colors": ["#78b5e9", "#8ca2de","#f79d60", "#8dea84"],
        "tooltip": {
            "function":"tooltipformatter"
        },
        "title": {
            "text": ""
        },
        "plotOptions": {
            "pie": {
                        "allowPointSelect": true,
                        "cursor": "pointer",
                        "dataLabels": {
"enabled": false
},
"showInLegend": true
}
},
"legend": {
"layout": "vertical",
"align": "right",
"verticalAlign": "middle",
"y": -25,
"x": 45,
"useHTML": false,
"itemMarginTop": 3,
"itemMarginBottom": 3
}

}
}
<function>
tooltipformatter^^'formatter': function() {
var statusName = new Array();
    statusName['Contracts with No Response by Prime'] = 'Contracts with No Response<br/>by Prime';
    statusName['Contracts with Response Not Required by Prime'] = 'Contracts with Response<br/>Not Required by Prime';
    statusName['Reported Contracts with Sub Vendors'] = 'Reported Contracts with<br/>Sub Vendors';
    statusName['Reported Contracts without Sub Vendors'] = 'Reported Contracts without<br/>Sub Vendors';
    return statusName[this.point.name] + ': <b>'+ (this.point.y).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") +'</b>';
}
</function>
