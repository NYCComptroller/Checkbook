{
    "widgetType":"phpparser",
    "parentNid":886,
    "startWith":0,
    "maxSelect":5,
    "limit":100,
    "defaultParameters":{"employment_type.employment_type" : "Salaried"},
    "columns":["civil_service_title_code.civil_service_title_code","civil_service_title.civil_service_title", "title_count"],
    "urlParamMap":{"title":"civil_service_title_code.civil_service_title_code"},
    "orderBy":"civil_service_title.civil_service_title",
    "filterName":"Title",
    "getTotalDataCount":true,
    "facetPager":true,
    "urlParameterName":"title",
    "autocompleteParamName":"ftitle_auto",
    "autocompleteID":"ftitle",
    "autocompleteField":"civil_service_title.civil_service_title",
    "adjustParameters":"
        $monthId = RequestUtilities::getRequestParamValue('month');
        if(isset($monthId)){
            $node->widgetConfig->dataset = 'checkbook:payroll_employee_agency_month';
        }
        $agencyId = RequestUtilities::getRequestParamValue('agency');
        if( isset($agencyId)){
            $node->widgetConfig->dataset = 'checkbook:payroll_employee_agency_title';
        }
        if(isset($parameters['employment_type.employment_type'])){
          $parameters['employment_type.employment_type']=PayrollUtil::getPayrollType();
         }
        if(function_exists('_checkbook_project_applyParameterFilters')){
            $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        $adjustedParameters['civil_service_title.civil_service_title'][] = data_controller_get_operator_factory_instance()->initiateHandler(NotEmptyOperatorHandler::$OPERATOR__NAME);
        return $adjustedParameters;
    ",
    "template":"individual_filter"
    }
