{
  "widgetType":"phpparser",
  "parentNid":707,
  "no_results_content":"No Results Found",
  "limit":100,
  "startWith":0,
  "maxSelect":50,
  "columns":["budget_name_code.budget_name_code", "txcount"],
  "orderBy":"-txcount",
  "facetPager":true,
  "filterName":"Budget Code",
  "urlParameterName":"bdgcode",
  "autocompleteParamName":"bdgcode_auto",
  "autocompleteID":"fBudgetCode",
  "autocompleteField":"budget_name_code.budget_name_code",
  "adjustParameters":"
  if(isset($parameters['disb_vendor_type'])){
  $parameters['disb_vendor_type'] = MappingUtil::getVendorTypeValue($parameters['disb_vendor_type']);
}
checkbook_faceted_search_adjust_param($node);
$year = $parameters['disb_fiscal_year_id'];
if(isset($year)){
$parameters['fiscal_year_id'] = $year;
}
if(function_exists('_checkbook_project_adjust_mwbe_spending_parameter_filters')){
$parameters = _checkbook_project_adjust_mwbe_spending_parameter_filters($node, $parameters);
}
//Adjust Certification parameters
$parameters = ContractUtil::adjustCertificationFacetParameters($node,$parameters);
$adjustedParameters = $parameters;
if(function_exists('_checkbook_project_applyParameterFilters')){
$adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
$adjustedParameters['budget_name_code.budget_name_code'][] = data_controller_get_operator_factory_instance()->initiateHandler(NotEmptyOperatorHandler::$OPERATOR__NAME);
}
return $adjustedParameters;
",
"template":"individual_filter"
}

