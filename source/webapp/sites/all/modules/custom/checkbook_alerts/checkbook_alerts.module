<?php
/**
* This file is part of the Checkbook NYC financial transparency software.
*
* Copyright (C) 2012, 2013 New York City
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as
* published by the Free Software Foundation, either version 3 of the
* License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Affero General Public License for more details.
*
* You should have received a copy of the GNU Affero General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

function checkbook_alerts_init(){
  require_once(drupal_get_path("module","checkbook_alerts")."/includes/checkbook_alerts.inc");
  require_once(drupal_get_path("module","checkbook_alerts")."/includes/twitter-api/TwitterAPIExchange.php");
}

/**
 * Implements hook_menu().
 */
function checkbook_alerts_menu() {
  $items = array();
    // show user alert form
  $items['alert/transactions/form'] = array(
    'title' => 'Checkbook Alerts',
    'page callback' => '_checkbook_alerts_form',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
    // Create Alert and send activate email
  $items['alert/transactions'] = array(
    'title' => 'Checkbook Alerts',
    'page callback' => '_checkbook_alerts_transactions',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'weight' => 1,
  );
  $items['alert/unsubscribe/%'] = array(
    'title' => 'Checkbook Alerts',
    'page callback' => '_checkbook_alerts_unsubscribe',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items['alert/activate/%'] = array(
    'title' => 'Checkbook Alerts',
    'page callback' => '_checkbook_alerts_activate',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );
  $items['alert/twitter']=array(
    'title'=>'Twitter Callback',
    'page callback' => '_checkbook_alerts_twitter_callback',
    'access callback' => TRUE,
    'type'=>MENU_CALLBACK
  );
  return $items;
}


/**
 * Implements hook_theme().
 */
function checkbook_alerts_theme($existing, $type, $theme, $path) {
  return array(
    'checkbook_alerts_default_theme'=>array(
      'template'=>'checkbook_alerts',
      //'path'=>'sites/all/modules/custom/checkbook_alerts'
    ),
    'checkbook_alerts_email_theme'=>array(
      'template'=>'checkbook_alerts_email',
      //'path'=>'sites/all/modules/custom/checkbook_alerts',      
      'arguments'=>array(
        'alerts'=>array(),
        'unsubscribe'=>null
      )
    ),
    'checkbook_alerts_activate_theme'=>array(
      'template'=>'checkbook_alerts_activate'
    ),
    'checkbook_alerts_activated_theme'=>array(
      'template'=>'checkbook_alerts_activated'
      //'path'=>'sites/all/modules/custom/check
    ),
    'checkbook_alerts_unsubscribe_theme'=>array(
      'template'=>'checkbook_alerts_unsubscribe'
    ),
    'checkbook_alerts_subscribe_theme'=>array(
      'template'=>'checkbook_alerts_subscribe'
    )
  );
}

function checkbook_alerts_schema() {
  $schema['checkbook_alerts'] = array(
    'description' => t('Table that will contain all of the alerts.'),
    'fields' => array(
      'checkbook_alerts_sysid' => array(
        'description' => t('The primary identifier'),
        'type' => 'serial',
        'not null' => TRUE
      ),
      'label'=>array(
        'description'=>t('The label that will be shown to the user.'),
        'type' => 'varchar',
        'not null'=>true,
        'length'=>'200'
      ),
      'recipient' => array(
        'description' => t('Recipient address for sending.'),
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => '300'
      ),
      'recipient_type'=>array(
        'description'=>t('Recipient type, email or twitter.'),
        'type'=>'varchar',
        'not null'=>true,
        'length'=>'15'
      ),
      'ref_url' => array(
        'description' => t('Reference URL for querying results.'),
        'type' => 'varchar',
        'length' => '2000',
        'not null' => TRUE,
      ),
      'user_url' => array(
        'description' => t('URL the user was on.'),
        'type'=>'varchar',
        'length'=>'2000',
        'not null'=>TRUE
      ),
      'active' => array(
        'description' => t('Indicating whether or not the alert has been activated via email.'),
        'type' => 'varchar',
        'not null' => true,
        'default' => 'N',
        'length' => 1
      ),
      'number_of_results' => array(
        'description' => t('Number of results required trigger the alert.'),
        'type'=>'int',
        'not null'=>true,
      ),
      'minimum_results'=>array(
        'description'=>t('Minimum number of results required to trigger the alert.'),
        'type'=>'int',
        'not null'=>true,
        'default'=>1
      ),
      'minimum_days'=>array(
        'description'=>t('Minimum days inbetween notifications even if more results are returned.'),
        'type'=>'int',
        'not null'=>true,
        'default'=>1
      ),
      'date_end'=>array(
        'description'=>t('Date that the notifications will end.'),
        'type'=>'datetime',
        'mysql_type' => 'datetime',
        'not null'=>true
      ),
      'date_last_new_results'=>array(
        'description'=>t('Date that the notification was last sent.'),
        'type'=>'datetime',
        'mysql_type' => 'datetime',
        'not null'=>true
      )
    ),
    'indexes'=>array(
      'checkbook_alerts_recipient'=>array('recipient')
    ),
    'primary key' => array('checkbook_alerts_sysid'),
  );
  return $schema;
}

function checkbook_alerts_enable() {
  if(db_table_exists('checkbook_alerts') == FALSE) {
    drupal_install_schema('checkbook_alerts');
  }
}

function checkbook_alerts_unsinstall(){
  db_query("DROP TABLE checkbook_alerts");
}
