<?php

function checkbook_api_ref_menu()
{
  $items['ref_code_list/%'] = array(
    'title' => 'Load Reference Data',
    'page callback' => 'checkbook_api_load_ref_data',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['ref_code_list_excel/%'] = array(
    'title' => 'Load Reference Data',
    'page callback' => 'checkbook_api_load_ref_data_excel',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
}
/**
 * Implements hook_cron().
 */
function checkbook_api_ref_cron() {
  $CES = new CheckbookApiRef();
  return $CES->run_cron();
}

/**
 * Implements hook_mail().
 * @param $key
 * @param $message
 * @param $params
 */
function checkbook_api_ref_mail($key, &$message, $params){
  $CES = new CheckbookApiRef();
  $CES->gatherData($message);
  $message['body'] = array_merge($message['body'], $params);
}

/**
 * Implements hook_mail_alter().
 *
 * Adds priority headers to messages passing condition.
 * @param $message
 * @throws Exception
 */
function checkbook_api_ref_mail_alter(&$message)
{
  // Apply this hook only for `checkbook_etl_status` module
  if ('checkbook_api_ref' !== $message['module']) {
    return;
  }
  if (stripos($message['subject'], 'Fail') || stripos($message['subject'], 'not Found')) {
    $message['headers']['X-Priority'] = '1 (Highest)';
    $message['headers']['X-MSMail-Priority'] = 'High';
    $message['headers']['Importance'] = 'High';
  }
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
  $message['body'] = theme('api_ref_mail', $message['body']);
  if (defined('CHECKBOOK_DEV')) {
    echo($message['body']);
    $message['send'] = false;
  }
}

/**
 * Implements hook_theme()
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function checkbook_api_ref_theme($existing, $type, $theme, $path)
{
  if ($type == 'module') {
    return array(
      'api_ref_mail' => array(
        'variables' => array(
          'file_generation_status' => NULL
        ),
        'template' => 'api-ref.email',
        'path' => drupal_get_path('module', 'checkbook_api_ref') . '/theme',
      ),
    );
  }
}

/**
 * @param $code_list_name
 */
function checkbook_api_load_ref_data($code_list_name) {
  global $conf;

  $file_name = $code_list_name . '_code_list.csv';
  $file = variable_get('file_public_path', 'sites/default/files') . '/' . $conf['check_book']['data_feeds']['output_file_dir'] . '/' . $conf['check_book']['ref_data_dir'] . '/' . $file_name;

  drupal_add_http_header("Content-Type", "text/csv");
  drupal_add_http_header("Content-Disposition", "attachment; filename=$file_name");
  drupal_add_http_header("Pragma", "cache");
  drupal_add_http_header("Expires", "-1");

  if (is_file($file)) {
    $data = file_get_contents($file);
    drupal_add_http_header("Content-Length", strlen($data));
    echo $data;
  }
  else {
    echo "Data is not generated.. Please contact support team.";
  }
}

/**
 * @param $code_list_name
 */
function checkbook_api_load_ref_data_excel($code_list_name) {
  global $conf;

  $file_name = $code_list_name . '_code_list.xlsx';
  $file = variable_get('file_public_path', 'sites/default/files') . '/' . $conf['check_book']['data_feeds']['output_file_dir'] . '/' . $conf['check_book']['ref_data_dir'] . '/' . $file_name;

  drupal_add_http_header("Content-Type", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
  drupal_add_http_header("Content-Disposition", "attachment; filename=$file_name");
  drupal_add_http_header("Pragma", "cache");
  drupal_add_http_header("Expires", "-1");

  if (is_file($file)) {
    $data = file_get_contents($file);
    drupal_add_http_header("Content-Length", strlen($data));
    echo $data;
  }
  else {
    echo "Data is not generated.. Please contact support team.";
  }
}
