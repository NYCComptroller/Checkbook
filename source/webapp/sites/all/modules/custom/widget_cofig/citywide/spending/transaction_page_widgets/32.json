{
    "widgetType": "phpparser",
    "cleanURLParameters":["agency","mcagency","agencyh","year","calyear","vendor","fvendor","mcvendor",
                          "expcategory","category","checkamtr","dept","contnum","checkamt","chkdate",
                          "fundcls","bdgcodenm","captprj","expdoc","vendornm","deptnm","expcategorynm",
                          "syear","scalyear","magid","agid","cvendor","cagency","awdmethod","status","csize",
                          "cindustry","expcategorycode","month","scomline",
                          "comline","comline_exact","budname_exact","budname","entcontnum_exact","entcontnum","industry","mwbe","subvendor"],
    "urlParamMap":{
        "year":"check_eft_issued_nyc_year_id","calyear":"calendar_fiscal_year_id","agency":"agency_id",
        "mcagency":"master_child_contract_agency_id","agencyh":"agency_history_id","vendor":"vendor_id","fvendor":"vendor_id",
        "mcvendor":"master_child_contract_vendor_id","expcategory":"expenditure_object_id",
        "checkamtr":"check_amount","dept":"department_code","contnum":"reference_document_number",
        "checkamt":"check_amount","chkdate":"check_eft_issued_date","fundcls":"fund_class_id",
        "bdgcodenm":"budget_name","captprj":"reporting_code","category":"spending_category_id",
        "expdoc":"disbursement_number","vendornm":"vendor_name","deptnm":"department_name",
        "expcategorynm":"expenditure_object_name","syear":"check_eft_issued_nyc_year_id",
        "scalyear":"calendar_fiscal_year_id","magid":"master_agreement_id","agid":"agreement_id",
        "cvendor":"ctx.ctx.vendor_id","cagency":"ctx.ctx.document_agency_id","awdmethod":"ctx.ctx.award_method_id",
        "status":"ctx.ctx.status_flag","csize":"ctx.ctx.award_size_id","cindustry":"ctx.ctx.industry_type_id",
        "expcategorycode":"expenditure_object_code", "month":"check_eft_issued_cal_month_id",
        "entcontnum_exact":"oge_contract_number",
        "entcontnum":"oge_contract_number",
        "comline_exact":"agreement_commodity_line_number",
        "comline":"agreement_commodity_line_number",
        "scomline":"agreement_commodity_line_number",
        "budname_exact":"oge_budget_name",
        "budname":"oge_budget_name",
        "mwbe":"minority_type_id",
        "industry":"industry_type_id",
        "subvendor":"vendor_id"
    },
    "paramTypeConfig":{"checkamtr":"rangeid","checkamt":"range","chkdate":"range","captprj":"like","vendornm":"like",
        "contnum":"like","bdgcodenm":"like","expdoc":"like","syear":"le","scalyear":"le",
        "budname":"like","comline":"like","entcontnum":"like","scomline":"le",
        "entcontnum_exact":"eqignorecase","comline_exact":"eqignorecase","budname_exact":"eqignorecase"},
    "dataset": "checkbook:fact_disbursement_line_item",
    "preProcessConfiguration":"
        $node->is_mwbe = _checkbook_check_is_mwbe_page();
        $node->is_subvendor = _checkbook_check_is_sub_vendor_page();
        if($node->is_subvendor) $node->widgetConfig->dataset = 'checkbook:subcontract_spending_details';
    ",
    "adjustParameters":"
            $cat = $parameters['spending_category_id'];
            if(   isset($parameters['ctx.ctx.vendor_id'])  ||  isset($parameters['ctx.ctx.document_agency_id'])  ||  isset($parameters['ctx.ctx.award_method_id'])  || isset($parameters['ctx.ctx.award_size_id'])  ||  isset($parameters['ctx.ctx.industry_type_id']) ){
		    $year = $parameters['check_eft_issued_nyc_year_id'];
		    $calyear = $parameters['calendar_fiscal_year_id'];
		    if(isset($year)){
			$parameters['ctx.ctx.fiscal_year_id'] = $year;
			$parameters['ctx.ctx.type_of_year'] = 'B';
		    }else if(isset($calyear )){
			$parameters['ctx.ctx.fiscal_year_id'] = $calyear ;
			$parameters['ctx.ctx.type_of_year'] = 'C';
		    }
	   }

        $dtsmnid = RequestUtilities::getRequestParamValue('dtsmnid');
        if($dtsmnid == 20){//From spending landing page
            $data_controller_instance = data_controller_get_operator_factory_instance();
            $parameters['agreement_id'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
            $parameters['contract_number'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
        }
        if($dtsmnid == 634 ||  $dtsmnid == 641 ||  $dtsmnid == 642){//From OGE contracts transactions pages
            $data_controller_instance = data_controller_get_operator_factory_instance();
            if($parameters['agreement_commodity_line_number'])
               $parameters['agreement_commodity_line_number'] = $data_controller_instance->initiateHandler(LessOrEqualOperatorHandler::$OPERATOR__NAME, $parameters['agreement_commodity_line_number']);
        }
            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            //Using child_contract_agency_id column in OGE domainO
            if(_checkbook_check_isEDCPage()){
                foreach($adjustedParameters as $key=>$value){
                    if($key == 'master_child_contract_agency_id'){
                       $adjustedParameters['contract_agency_id'] = $value;
                       unset($adjustedParameters[$key]);
                    }
                    if($key == 'master_child_contract_vendor_id'){
                       $adjustedParameters['contract_vendor_id'] = $value;
                       unset($adjustedParameters[$key]);
                    }
                }
            }

        //Sub vendor page, need to use prime_vendor_id
        if($node->is_subvendor) {
            $sub_vendor = RequestUtilities::getRequestParamValue('subvendor');
            $vendor = RequestUtilities::getRequestParamValue('vendor');
            if(isset($vendor)) {
                $adjustedParameters['prime_vendor_id'] = $vendor;
            }
            if($sub_vendor == 'all') {
                $data_controller_instance = data_controller_get_operator_factory_instance();
                $adjustedParameters['vendor_id'] = $data_controller_instance->initiateHandler(NotEqualOperatorHandler::$OPERATOR__NAME, NULL);
            }
            else {
                $adjustedParameters['vendor_id'] = $sub_vendor;
            }
        }
            return $adjustedParameters;
    ",
    "columns": ["check_amount_sum"],
    "template":"spending_transaction_total_amount"
}
