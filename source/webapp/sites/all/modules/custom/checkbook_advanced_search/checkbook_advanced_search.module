<?php

/**
 * This file is part of the Checkbook NYC financial transparency software.
 *
 * Copyright (C) 2012, 2013 New York City
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

module_load_include('inc', 'checkbook_advanced_search', 'includes/checkbook_advanced_search_constants');
module_load_include('php', 'checkbook_advanced_search', 'includes/classes/Field');
module_load_include('php', 'checkbook_advanced_search', 'includes/classes/Content');
module_load_include('php', 'checkbook_advanced_search', 'includes/classes/Form');
module_load_include('inc', 'checkbook_advanced_search', 'includes/checkbook_advanced_search');
module_load_include('inc', 'checkbook_advanced_search_autocomplete', 'includes/checkbook_advanced_search_autocomplete_functions');

use checkbook_advanced_search\DataSource as DataSource;
use checkbook_advanced_search\Domain as Domain;
use checkbook_advanced_search\Field as Field;
use checkbook_advanced_search\Content as Content;
use checkbook_advanced_search\Form as Form;

/**
 * Implements of hook_menu().
 */
function checkbook_advanced_search_menu()
{
    $items['advanced-search'] = array(
        'title' => 'Checkbook Advanced Search',
        'page callback' => 'checkbook_advanced_search_display',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['advanced-search/autocomplete'] = array(
        'page callback' => '_checkbook_advanced_search_autocomplete_get_agencyname_and_id',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function checkbook_advanced_search_display()
{
    return drupal_get_form('checkbook_advanced_search_form');
}

function _checkbook_advanced_search_next_ajax($form, &$form_state) {

    $create_alert_config =  _checkbook_advanced_search_create_alert_config();

    $domain = isset($form_state['triggering_element']['#ajax']['parameters']['domain'])
        ? $form_state['triggering_element']['#ajax']['parameters']['domain']
        : $_POST['domain'];
    $step = isset($form_state['triggering_element']['#ajax']['parameters']['step'])
        ? $form_state['triggering_element']['#ajax']['parameters']['step']
        : $_POST['step'];

    $next_step = '';
    $commands = [];

    switch($step) {
        case 'select_criteria':
            $next_step = 'customize_results';

            /* Hide the accordion */
            $commands[] = ajax_command_invoke('.advanced-search-accordion', 'css', array('display','none',));
            /* Show the results page */
            $commands[] = ajax_command_invoke('.create-alert-customize-results', 'css', array('display','inline',));
            /* Show results buttons */
            $commands[] = ajax_command_invoke('.create-alert-submit', 'css', array('display','inline',));
            /* Add new domain to hidden field for persistence */
            $commands[] = ajax_command_invoke('input:hidden[name="domain"]', 'val', array($domain));
            /* Add new step to hidden field for persistence */
            $commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array($next_step));
            /* Load Customize Results Form */
            $redirect_url = checkbook_advanced_search_form_submit($form, $form_state);
            //$commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array($next_step));
            //$commands[] = ajax_command_invoke(NULL, 'onCustomizeResults',array('params'));
            $commands[] = ajax_command_invoke(NULL, 'buildResults',array($redirect_url));

            break;

        case 'customize_results':
            $next_step = 'schedule_alert';

            /* Hide the results page */
            $commands[] = ajax_command_invoke('.create-alert-customize-results', 'css', array('display','none',));
            /* Show the schedule alert page */
            $commands[] = ajax_command_invoke('.create-alert-schedule-alert', 'css', array('display','inline',));
            /* Update hidden field for new step */
            $commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array($next_step));
            /* Load Schedule Alerts Form */
//            $commands[] = ajax_command_invoke(NULL, 'onScheduleAlert');

            break;

        case 'schedule_alert':
            $next_step = 'confirmation';

            /* Hide the schedule alert page */
            $commands[] = ajax_command_invoke('.create-alert-schedule-alert', 'css', array('display','none',));
            /* Show the confirmation page */
            $commands[] = ajax_command_invoke('.create-alert-confirmation', 'css', array('display','inline',));
            /* Hide buttons */
            $commands[] = ajax_command_invoke('.create-alert-submit', 'css', array('display','none',));
            /* Reset domain to default */
            $commands[] = ajax_command_invoke('input:hidden[name="domain"]', 'val', array('spending'));
            /* Reset step to default */
            $commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array('select_criteria'));
            break;
    }

    /* Update header */
    $commands[] = ajax_command_replace('.create-alert-header', _checkbook_advanced_search_create_alert_header($create_alert_config, $next_step));

    /* Update wizard instructions */
    $commands[] = ajax_command_replace('.create-alert-instructions', $create_alert_config[$next_step]['instructions']);

    return array('#type' => 'ajax', '#commands' => $commands);

}

function _checkbook_advanced_search_back_ajax($form, &$form_state) {

    $create_alert_config =  _checkbook_advanced_search_create_alert_config();

    $domain = $_POST['domain'];
    $step = $_POST['step'];
    $previous_step = '';
    $commands = [];

    switch($step) {
        case 'customize_results':
            $previous_step = 'select_criteria';

            /* Hide the results page */
            $commands[] = ajax_command_invoke('.create-alert-customize-results', 'css', array('display','none',));
            /* Show the accordion */
            $commands[] = ajax_command_invoke('.advanced-search-accordion', 'css', array('display','inline',));
            /* Hide results buttons */
            $commands[] = ajax_command_invoke('.create-alert-submit', 'css', array('display','none',));
            /* Update hidden field for new step */
            $commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array($previous_step));
            break;

        case 'schedule_alert':
            $previous_step = 'customize_results';

            /* Hide the schedule alerts page */
            $commands[] = ajax_command_invoke('.create-alert-schedule-alert', 'css', array('display','none',));
            /* Show the results page */
            $commands[] = ajax_command_invoke('.create-alert-customize-results', 'css', array('display','inline',));
            /* Show results buttons */
            $commands[] = ajax_command_invoke('.create-alert-submit', 'css', array('display','inline',));
            /* Update hidden field for new step */
            $commands[] = ajax_command_invoke('input:hidden[name="step"]', 'val', array($previous_step));

            break;
    }

    /* Update header */
    $commands[] = ajax_command_replace('.create-alert-header', _checkbook_advanced_search_create_alert_header($create_alert_config, $previous_step));

    /* Update wizard instructions */
    $commands[] = ajax_command_replace('.create-alert-instructions', $create_alert_config[$previous_step]['instructions']);

    return array('#type' => 'ajax', '#commands' => $commands);
}

function _checkbook_advanced_search_create_alert_instructions($step)
{
    $create_alert_config =  _checkbook_advanced_search_create_alert_config();
    $instructions = $create_alert_config[$step]['instructions'];
    return $instructions;
}

function _checkbook_advanced_search_create_alert_header($create_alert_config, $current_step)
{
    $header_html = '';

    foreach($create_alert_config as $step) {
        if(!isset($step['title'])) continue;
        $header_html .= $header_html != '' ? "<span class='inactive'>&nbsp;|&nbsp;</span>" : "";
        $header_html .= $current_step == $step['name'] ? "<span class='active'>" : "<span class='inactive'>";
        $header_html .= $step['title'];
        $header_html .= "</span>";
    }

    $header_html = "<span class='create-alert-header'>".$header_html."</span>";
    return $header_html;
}


/**
 * Implements hook_form().
 */
function checkbook_advanced_search_form($form, $form_state)
{
    $create_alert_config =  _checkbook_advanced_search_create_alert_config();
    $create_alert_instructions = $create_alert_config['select_criteria']['instructions'];

    $create_alert_customize_results = "<div class='create-alert-customize-results'>Create Alert Customize Results Page<br/><br/>";
    $create_alert_customize_results .= "<br/></div>";

    $create_alert_schedule_alert = "<div class='create-alert-schedule-alert'>Schedule Alert Page<br/><br/>";
    $create_alert_schedule_alert .= "</div>";

    $create_alert_confirmation = "<div class='create-alert-confirmation'><strong>Thank you for Scheduling your Alert!<br/>You will receive a confirmation email soon.</strong></div>";

    $create_alert_view = $create_alert_instructions.$create_alert_customize_results.$create_alert_schedule_alert.$create_alert_confirmation;

    $agencies = _checkbook_advanced_search_get_agencyname_and_id();
    $agency_attributes = _checkbook_advanced_search_get_agency_attributes();
    $fund_class = _checkbook_advanced_search_get_fund_class_and_id();
    $year_range = "'-" . (date("Y") - 1900) . ":+" . (2500 - date("Y")) . "'";
    $revenue_fys = array(0 => "All Fiscal Years") + _checkbook_advanced_search_get_year('revenue');
    $form['opening_div'] = array(
        '#type' => 'markup',
        '#markup' => $create_alert_view.'<div class = "advanced-search-accordion">',
    );

    //<editor-fold desc="Budget">

    $form['budget']['budget_agencies'] = array(
        '#type' => 'select',
        '#title' => t('Agency'),
        '#prefix' => '<h3><a href="#">Budget</a></h3><div id="budget-advanced-search"><div class="column column-left">',
        '#default_value' => t('Citywide(All Agencies)'),
        '#options' => $agencies,
        '#option_attributes' => $agency_attributes,
        //advanced-search-disable-accordion
    );
    $form['budget']['budget_department'] = array(
        '#type' => 'select',
        '#title' => t('Department'),
        '#default_value' => t('Select Department'),
        '#options' => array('Select Department'),
        '#disabled' => TRUE,
    );
    $form['budget']['budget_expense_category'] = array(
        '#type' => 'select',
        '#title' => t('Expense Category'),
        '#default_value' => t('Select Expense Category'),
        '#options' => array("Select Expense Category"),
        '#disabled' => TRUE,
    );
    $form['budget']['budget_budget_code'] = array(
        '#type' => 'textfield',
        '#title' => t('Budget Code'),
        '#size' => 30,
        '#maxlength' => 100
    );
    $form['budget']['budget_fiscal_year'] = array(
        '#type' => 'select',
        '#title' => t('Year'),
        '#default_value' => _getCurrentYearID(),
        '#options' => _checkbook_advanced_search_get_year('budget'),
        '#attributes' => array('default_selected_value' => _getCurrentYearID())
    );
    $form['budget']['budget_adopted_budget_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_adopted_budget datarange"><label>Adopted</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-adopted">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_adopted_budget_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div></div>',
    );
    $form['budget']['budget_current_modified_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="column column-right"><div class="datafield budget_current_modified datarange"><label>Modified</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-modified">',
        '#suffix' => '<span class="advanced-search-to">to </span>'
    );
    $form['budget']['budget_current_modified_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['budget']['budget_pre_encumbered_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_pre_encumbered datarange"><label>Pre Encumbered</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-pre-encumbered">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_pre_encumbered_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['budget']['budget_encumbered_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_encumbered datarange"><label>Encumbered</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-encumbered">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_encumbered_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['budget']['budget_accrued_expense_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_accrued_expense datarange"><label>Accrued Expense</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-accrued-expense">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_accrued_expense_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['budget']['budget_cash_expense_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_cash_expense datarange"><label>Cash Payments</label></label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-expense">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_cash_expense_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['budget']['budget_post_adjustments_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield budget_post_adjustments datarange"><label>Post Adjustments</label><div class="ranges"><div class="form-item form-type-textfield form-item-budget-post-adjustments">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['budget']['budget_post_adjustments_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div></div>',
    );
    $form['budget']['budget_next'] = array(
        '#type' => 'button',
        '#value' => t('Next'),
        '#name' => 'budget_next',
        '#prefix' => t('<div class="budget-submit">'),
        '#ajax' => array(
            'callback' => '_checkbook_advanced_search_next_ajax',
            'parameters' => array('domain' => 'budget', 'step' => 'select_criteria'),
        ),
    );
    $form['budget']['budget_submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
        '#name' => 'budget_submit',
    );
    $form['budget']['budget_clear'] = array(
        '#suffix' => '</div></div>',
        '#type' => 'submit',
        '#value' => t('Clear All'),
    );

    //</editor-fold>

    //<editor-fold desc="Revenue">

    $form['revenue']['revenue_budget_fiscal_year'] = array(
        '#prefix' => '<h3><a href="#">Revenue</a></h3><div id="revenue-advanced-search"><div class="column column-left">',
        '#type' => 'select',
        '#title' => t('Budget FY:'),
        '#options' => _checkbook_advanced_search_get_year('revenue'),
        '#attributes' => array('default_selected_value' => _getCurrentYearID()),
        '#default_value' => _getCurrentYearID(),
    );
    $form['revenue']['revenue_agencies'] = array(
        '#type' => 'select',
        '#title' => t('Agency:'),
        '#options' => $agencies,
        '#option_attributes' => $agency_attributes,
    );
    $form['revenue']['revenue_revenue_category'] = array(
        '#type' => 'select',
        '#title' => t('Revenue Category:'),
        '#options' => _checkbook_advanced_search_get_revenue_category_and_id(),
    );
    $form['revenue']['revenue_revenue_source'] = array(
        '#type' => 'textfield',
        '#title' => t('Revenue Source:'),
        '#size' => 30,
        '#maxlength' => 100
    );
    $form['revenue']['revenue_revenue_source_exact'] = array(
        '#type' => 'hidden'
    );
    $form['revenue']['revenue_adopted_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield revenue_adopted datarange"><label>Adopted:</label><div class="ranges"><div class="form-item form-type textfield form-item-revenue-adopted">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['revenue']['revenue_adopted_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div>',
    );
    $form['revenue']['revenue_recognized_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield revenue_recognized datarange"><label>Recognized:</label><div class="ranges"><div class="form-item form-type textfield form-item-revenue-recognized">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['revenue']['revenue_recognized_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div></div>',
    );
    $form['revenue']['revenue_fiscal_year'] = array(
        '#prefix' => '<div class="column column-right">',
        '#type' => 'select',
        '#title' => t('Fiscal Year:'),
        '#options' => $revenue_fys,
    );
    $form['revenue']['revenue_funding_source'] = array(
        '#type' => 'select',
        '#title' => t('Funding Class'),
        '#options' => _checkbook_advanced_search_get_funding_source_and_id(),
    );
    $form['revenue']['revenue_revenue_class'] = array(
        '#type' => 'textfield',
        '#title' => t('Revenue Class:'),
        '#size' => 30,
        '#maxlength' => 100
    );
    $form['revenue']['revenue_revenue_class_exact'] = array(
        '#type' => 'hidden'
    );
    $form['revenue']['revenue_fund_class'] = array(
        '#type' => 'select',
        '#title' => t('Fund Class:'),
        '#options' => $fund_class,

    );
    $form['revenue']['revenue_modified_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="datafield revenue_modified datarange"><label>Modified:</label><div class="ranges"><div class="form-item form-type textfield form-item-revenue-modified">',
        '#suffix' => '<span class="advanced-search-to">to </span>',
    );
    $form['revenue']['revenue_modified_to'] = array(
        '#type' => 'textfield',
        '#title' => t(''),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div></div></div>',
    );
    $form['revenue']['revenue_next'] = array(
        '#type' => 'submit',
        '#value' => t('Next'),
        '#name' => 'revenue_next',
        '#prefix' => t('<div class="revenue-submit">'),
    );
    $form['revenue']['revenue_submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
        '#name' => 'revenue_submit',
    );
    $form['revenue']['revenue_clear'] = array(
        '#suffix' => '</div></div>',
        '#type' => 'submit',
        '#value' => t('Clear All'),
    );

    //</editor-fold>

    //<editor-fold desc="Spending">

    $form = _checkbook_advanced_search_get_form($form, Domain::Spending, $agencies, $agency_attributes, $year_range);

    //</editor-fold>

    //<editor-fold desc="Contracts">

    $form = _checkbook_advanced_search_get_form($form, Domain::Contracts, $agencies, $agency_attributes, $year_range);

    //</editor-fold>

    //<editor-fold desc="Payroll">

    $form['payroll']['payroll_employee_name'] = array(
        '#prefix' => '<h3><a href="#">Payroll</a></h3><div id="payroll-advanced-search"><div class="column column-left">',
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#size' => 30,
        '#maxlength' => 100,
    );
    $form['payroll']['payroll_agencies'] = array(
        '#type' => 'select',
        '#title' => t('Agency'),
        '#default_value' => t('Citywide(All Agencies)'),
        '#options' => $agencies,
        '#option_attributes' => $agency_attributes,
    );
    $form['payroll']['payroll_other_payments_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="form-item form-item-payroll-other-payments"><label>Other Payments</label><div class="ranges">',
    );
    $form['payroll']['payroll_other_payments_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_gross_pay_amount_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="form-item form-item-payroll-pay-amount"><label>Gross Pay</label><div class="ranges">',
    );
    $form['payroll']['payroll_gross_pay_amount_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_total_gross_pay_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="form-item form-item-payroll-total-gross-pay"><label>Gross Pay YTD</label><div class="ranges">',
    );
    $form['payroll']['payroll_total_gross_pay_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_amount_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="form-item form-item-payroll-amount"><label>Amount</label><div class="ranges">',
    );
    $form['payroll']['payroll_amount_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_amount_type'] = array(
        '#type' => 'radios',
        '#default_value' => 0,
        '#options' => array(0 => t('All'), 1 => t('Annual'), 2 => t('Rate')),
        '#suffix' => '</div>',
    );
    $form['payroll']['payroll_base_salary_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="column column-right"><div class="form-item form-item-payroll-base-salary"><label>Base Pay</label><div class="ranges">',
    );
    $form['payroll']['payroll_base_salary_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_overtime_amount_from'] = array(
        '#type' => 'textfield',
        '#size' => 30,
        '#maxlength' => 32,
        '#prefix' => '<div class="form-item form-item-payroll-overtime-amount"><label>Overtime Payments</label><div class="ranges">',
    );
    $form['payroll']['payroll_overtime_amount_to'] = array(
        '#type' => 'textfield',
        '#title' => t('TO'),
        '#size' => 30,
        '#maxlength' => 32,
        '#suffix' => '</div></div>',
    );
    $form['payroll']['payroll_pay_frequency'] = array(
        '#type' => 'select',
        '#title' => t('Pay Frequency'),
        '#default_value' => t('Select Pay Frequency'),
        '#options' => _checkbook_advanced_search_get_payroll_frequency(),
    );
    $form['payroll']['payroll_year'] = array(
        '#type' => 'select',
        '#title' => t('Year'),
        '#default_value' => 'fy~' . _getCurrentYearID(),
        '#options' => _checkbook_advanced_search_get_year('payroll'),
        '#attributes' => array('default_selected_value' => 'fy~' . _getCurrentYearID())
    );
    $form['payroll']['payroll_pay_date_from'] = array(
        '#type' => 'date_popup',
        '#date_format' => 'Y-m-d',
        '#date_year_range' => '-3:+3',
        '#prefix' => '<div class="form-item form-item-payroll-pay-date"><label>Pay Date</label><div class="ranges">',
    );
    $form['payroll']['payroll_pay_date_to'] = array(
        '#type' => 'date_popup',
        '#date_format' => 'Y-m-d',
        '#date_year_range' => '-3:+3',
        '#title' => t('TO'),
        '#description' => '',
        '#suffix' => '</div></div></div>',
    );
    $form['payroll']['payroll_next'] = array(
        '#type' => 'submit',
        '#value' => t('Next'),
        '#name' => 'payroll_next',
        '#prefix' => t('<div class="payroll-submit">'),
    );
    $form['payroll']['payroll_submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
        '#name' => 'payroll_submit',
    );
    $form['payroll']['payroll_clear'] = array(
        '#suffix' => '</div></div>',
        '#type' => 'submit',
        '#value' => t('Clear All'),
    );

    //</editor-fold>

    $form['closing_div'] = array(
        '#type' => 'markup',
        '#markup' => '</div></div>',
    );

    //<editor-fold desc="Create Alert Fields">

    //Hidden Field for domain, spending by default
    $form['create_alerts']['domain'] = array(
        '#value' => 'spending',
        '#type' => 'hidden',
    );
    //Hidden Field for create alerts step, select_criteria by default
    $form['create_alerts']['step'] = array(
        '#value' => 'select_criteria',
        '#type' => 'hidden',
    );
    //Create Alerts step 2 buttons
    $form['create_alerts']['next_submit'] = array(
        '#type' => 'button',
        '#value' => t('Next'),
        '#name' => 'next_submit',
        '#prefix' => t('<div class="create-alert-submit">'),
        '#ajax' => array(
            'callback' => '_checkbook_advanced_search_next_ajax',
            'parameters' => array('create_alerts' => true),
        ),
    );
    $form['create_alerts']['back_submit'] = array(
        '#type' => 'button',
        '#value' => t('Back'),
        '#name' => 'back_submit',
        '#suffix' => '</div>',
        '#ajax' => array(
            'callback' => '_checkbook_advanced_search_back_ajax',
        ),
    );

    //</editor-fold>

    $form['#attached'] = array(
        'library' => array(
            array('system', 'ui.accordion', FALSE),
            array('system', 'ui.autocomplete', FALSE),
        ),
        'js' => array(
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_clear_button.js',
            ),
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_spending.js',
            ),
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_budget.js',
            ),
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_revenue.js',
            ),
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_payroll.js',
            ),
            array(
                'type' => 'file',
                'data' => drupal_get_path('module', 'checkbook_advanced_search') . '/js/checkbook_advanced_search_contracts.js',
            ),
        ),
    );

    return $form;
}

function _checkbook_advanced_search_get_form($form, $domain, $agencies, $agency_attributes, $year_range)
{
    $field_configurations = _checkbook_advanced_search_get_field_configs($domain);

    $checkbook_form = new Form($domain);

    foreach ($field_configurations as $key => $value) {
        $data_source = $key;
        $field_configs = $value;
        $all_field_def = _checkbook_advanced_search_filter_field_definition($domain,$data_source,$agencies,$agency_attributes,$year_range);

        $checkbook_content = new Content($data_source);

        foreach ($field_configs as $field_config){

            $field_name = $field_config['field_name'];
            $column = $field_config['column'];
            $field_def = $all_field_def[$field_name];
            $disabled = $field_def['disabled'];
            if((is_null($disabled)))
                $disabled = FALSE;
            $field = new Field($field_def['field_name'],$field_def['field_type'],$field_def['attributes'],$disabled);

            $checkbook_content->add_field($field,$column);
        }
        $checkbook_form->add_content($checkbook_content);
    }

    $form = $checkbook_form->generate_form($form);
    return $form;
}

function _checkbook_advanced_search_filter_field_definition($domain, $data_source, $agencies, $agency_attributes, $year_range)
{
    if($data_source == DataSource::OtherGovernmentEntities)
    {
        $agencies = _checkbook_advanced_search_get_agencyname_and_id($data_source);
        $agency_attributes = _checkbook_advanced_search_get_agency_attributes($data_source);
    }
    $expense_attributes = _checkbook_advanced_search_get_expensetype_and_id($data_source);
    $year_attribute = _checkbook_advanced_search_get_year($domain, $data_source);
    $award_method = _checkbook_advanced_search_get_contract_award_method_and_id($data_source);
    $award_method_attributes = _checkbook_advanced_search_get_contract_award_method_attributes($data_source);
    $contract_type_attribute = _checkbook_advanced_search_get_contract_type_and_id($data_source);

    $field_definition_configs = _checkbook_advanced_search_get_field_def_configs();

    foreach ($field_definition_configs as $i=>$field_config) {
       if(!(is_null($field_config['attributes'])))
       {
           $attributes = $field_config['attributes'];
           if(!(is_null($attributes['options'])))
           {
               $options = $attributes['options'];
               switch ($options) {
                   case '$agencies':
                       $field_definition_configs[$i]['attributes']['options'] = $agencies;
                       break;
                   case '$expense_attributes':
                       $field_definition_configs[$i]['attributes']['options'] = $expense_attributes;
                       break;
                   case'$year_attribute':
                       $field_definition_configs[$i]['attributes']['options'] = $year_attribute;
                       break;
                   case'$award_method':
                       $field_definition_configs[$i]['attributes']['options'] = $award_method;
                       break;
                   case'$year_range':
                       $field_definition_configs[$i]['attributes']['options'] = $year_range;
                       break;
                   case'$contract_type_attribute':
                       $field_definition_configs[$i]['attributes']['options'] = $contract_type_attribute;
                       break;
               }
           }
           if(!(is_null($attributes['option_attributes'])))
           {
               $option_attributes = $attributes['option_attributes'];
               switch ($option_attributes) {
                   case '$agency_attributes':
                       $field_definition_configs[$i]['attributes']['option_attributes'] = $agency_attributes;
                       break;
                   case '$award_method_attributes':
                       $field_definition_configs[$i]['attributes']['option_attributes'] = $award_method_attributes;
                       break;
               }
           }
       }
    }

    return $field_definition_configs;
}

/**
 * Ajax callback for the data source radio button toggle.
 *
 * Updates the form to point to correct data source for spending
 */
function advanced_search_spending_filter_ajax($form, $form_state) {
    $new_data_Source = $form_state['triggering_element']['#ajax']['attributes']['new_data_source'];
    $fields_html = array($form['spending']['advanced_search_spending_filter'], $form[$new_data_Source.'_spending']);
    $fields_html = drupal_render($fields_html);
    $commands[] = ajax_command_replace('#advanced_search_spending_dynamic_fields', $fields_html);
    return array('#type' => 'ajax', '#commands' => $commands);
}
/**
 * Ajax callback for the data source radio button toggle.
 *
 * Updates the form to point to correct data source for contracts
 */
function advanced_search_contracts_filter_ajax($form, $form_state) {
    $new_data_Source = $form_state['triggering_element']['#ajax']['attributes']['new_data_source'];
    $html = array($form['contracts']['advanced_search_contracts_filter'], $form[$new_data_Source.'_contracts']);
    $html = drupal_render($html);
    $commands[] = ajax_command_replace('#advanced_search_contracts_dynamic_fields', $html);
    return array('#type' => 'ajax', '#commands' => $commands);
}

/*
* This block is designed to print the advanced search form which is then exposed to the users using a jQuery modal dialog box
*/

/**
 * Implements hook_block_info().
 */
function checkbook_advanced_search_block_info()
{
    $blocks['checkbook_advanced_search_form'] = array(
        'info' => t('Checkbook Advanced Search Form Block'),
        'cache' => DRUPAL_CACHE_GLOBAL,
    );
    return $blocks;
}


/**
 * Implements hook_block_view().
 */
function checkbook_advanced_search_block_view($delta = '')
{
    switch ($delta) {
        case 'checkbook_advanced_search_form':
            $block['content'] = drupal_get_form('checkbook_advanced_search_form');
            break;
    }
    return $block;
}
