<?php
/**
* This file is part of the Checkbook NYC financial transparency software.
* 
* Copyright (C) 2012, 2013 New York City
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as
* published by the Free Software Foundation, either version 3 of the
* License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/


function views_fusionmaps_init() {
	drupal_add_js(drupal_get_path('module', 'views_fusionmaps') .'/FusionMaps/FusionMaps.js');
}
/**
 * Implementation of hook_views_api().
 */
function views_fusionmaps_views_api() {
	return array('api' => 3);
}

/**
 * Implementation of hook_views_plugin().
 */
function views_fusionmaps_views_plugins() {
	$path = drupal_get_path('module', 'views_fusionmaps');
	return array(
		'module'  => 'views_fusionmaps',
		'style'   => array(                 // Declare the views_fusionmaps style plugin.
		'views_fusionmaps' => array(
			'title'           => t('FusionMaps'),
			'path'            => $path,
			'help'            => t('Displays views as FusionMaps'), 
			'handler'         => 'views_plugin_style_fusionmaps',
			'theme'           => 'views_views_fusionmaps_style',
			'theme path'      => $path.'/theme',
			'uses row plugin' => FALSE,
			'uses fields'     => TRUE,
			'uses options'    => TRUE,
			'type'            => 'normal',
			'even empty'      => FALSE
			),
		),
	);
}

function views_fusionmaps_validate_color($element, &$form_state) {
	if(!preg_match('!^[0-9A-Fa-f]{6}$!', $element['#value'])) {
		form_error($element, 'The ' . $element['#title'] . ' field must be a hex triplet, with no leading hashmark.');
	}
}


//this is a theme pre-process function where we can prepare variables for the template
function template_preprocess_views_views_fusionmaps_style(&$vars) {
	
	$options = $vars['options'];
	
	$view = $vars['view'];
	
	$fields   = &$view->field;
	

	$entity_id_col = _views_fusionmaps_get_field_alias($options['data']['entity_id_column'], $fields);
	$entity_val_col = _views_fusionmaps_get_field_alias($options['data']['entity_value_column'], $fields);
	$entity_tooltip_col = _views_fusionmaps_get_field_alias($options['data']['entity_tooltip_column'], $fields);
	$entity_displayVal_col = _views_fusionmaps_get_field_alias($options['data']['entity_displayVal_column'], $fields);
	$entity_link_col = _views_fusionmaps_get_field_alias($options['data']['entity_link_column'], $fields);
	
	//begin block to render fields
	$rows_in = $vars['rows'];
	
	$rows = array();
	foreach ($rows_in as $row) {
		$rows[] = views_fusionmaps_views_render_fields($view, $row);
	}	
	
	$vars['mapDiv'] = 'view-fusionmaps-'. $view->name . "-". $view->current_display;
	$vars['data'] = $rows;
	$vars['entity_id_col'] = $entity_id_col;
	$vars['entity_val_col'] = $entity_val_col;
	$vars['entity_tooltip_col'] = $entity_tooltip_col;
	$vars['entity_displayVal_col'] = $entity_displayVal_col;
	$vars['entity_link_col'] = $entity_link_col;
	
}

function views_fusionmaps_views_render_fields($view, $row) {
	foreach ($view->field as $id => $field) {
		$field_output = $view->field[$field->options['id']]->advanced_render($row);
		if (empty($field->options['exclude']) && !empty($field_output)) {
			/*
			 * 2011-02-11 [DJ]
			 * $field->field_alias is not guaranteed to be unique;
			 * for example, most Global: Custom Text fields will
			 * have a field_alias of "unknown". It's better for us
			 * to use the index of $view->field as our alias since
			 * it is guaranteed to be unique.
			 */
			//$fname = $field->field_alias;
			$rendered_fields->$id = $field_output;
		}
	}
	return $rendered_fields;
}


function _views_fusionmaps_get_field_alias($fieldoption, $fields) {
	$fieldname = str_replace('.', '_', $fieldoption);
	if (!isset($fields[$fieldname])) {
		return NULL;
	}
	return $fieldname;
	/*
	 * Don't use field_alias; see comment under
	 * views_fusioncharts_views_render_fields for an explanation why.
	 */
	//return $fields[$fieldname]->field_alias;
}
