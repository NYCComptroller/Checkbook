{
"widgetType": "highcharts",
"header":"
   $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>';
   $header .= ChartUtil::generateGridViewLink($node);
   return $header;
",
"gridConfig":{
    "template":"payroll_by_agency_gross_ot_pay",
    "html_class":"chart-grid-view-table two-columns",
    "table_columns": [
        {
            "labelAlias": "agency_name",
            "column": "agency_agency_agency_name"
        },
        {
            "labelAlias": "amount",
            "column": "total_overtime_pay"
        }
    ]
},
"dataset": "checkbook:payroll_month",
"columns": ["agency.agency","agency.agency.agency_name","agency.agency.agency_short_name","total_overtime_pay","year.year.year_value","year_type.year_type"],
"derivedColumns":{
    "agency_formatted":{
        "type":"expression2",
        "expression":"html_entity_decode($row[\"agency_agency_agency_short_name\"],ENT_QUOTES);"
    },
    "agency_long_name_formatted": {
        "type": "expression2",
        "expression": "strtoupper(html_entity_decode($row[\"agency_name@checkbook:agency\"],ENT_QUOTES))"
    }
},
"datasets":[{"name":"agency_short","column":"agency_formatted","type":"string","isArray":true}],
"limit": 10,
"orderBy": "-total_overtime_pay",
"defaultParameters":{"fiscal_year_id":114,"year_type.year_type":"B","overtime_pay":"0"},
"defaultParamTypeConfig":{"overtime_pay":"ne"},
"adjustParameters":"
            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
"cleanURLParameters":["year","agency","yeartype"],
"urlParamMap":{"year":"fiscal_year_id","agency":"agency_id","yeartype":"year_type.year_type"},
"transformationPHP": "
    $data = array();$categories=array();
    $pathParams = explode('/',drupal_get_path_alias($_GET['q']));
    foreach ($node->data as $row){
           $link='payroll/agency/' .$row['agency_agency'] . _checkbook_project_get_year_url_param_string();
           $categories[]=html_entity_decode($row['agency_agency_agency_short_name'],ENT_QUOTES);
           $data[] = (object)array('year'=>$row['year_year_year_value'],
                                               'year_type'=>$row['year_type_year_type'],
                                               'agency_id'=>$row['agency_agency'],
                                               'y'=>$row['total_overtime_pay'],
                                               'url'=>$link,
                                               'name'=>strtoupper($row['agency_agency_agency_name']));
    }
    $node->widgetConfig->chartConfig->series[0]->data = $data;
    $node->widgetConfig->chartConfig->xAxis->categories = $categories;
    $node->widgetConfig->chartConfig->series[0]->name = 'overtime Pay';
    $node->widgetConfig->chartTitle = 'Top Ten Agencies by Total Overtime';

    return $node->data;
",
"chartConfig": {
    "chart": {"defaultSeriesType": "column" },
    "colors":["#7DB7E5"],
    "legend": {
        "enabled": false,
        "align": "left",
        "verticalAlign": "bottom",
        "floating": "true",
       "layout": "horizontal"
    },
    "xAxis": {
        "title": {"text": ""},
        "categories":{"ds":"agency_short"},
        "minPadding":0.1,
        "maxPadding":0.1
    },
    "yAxis": {
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    },
    "tooltip": {
        "useHTML": true,
        "function": "agencyTooltip"
    },
    "title": {"text": ""},
    "plotOptions": {"column": {"pointWidth": 30},
        "series": {
                "cursor": "pointer",
                "point": {
                    "events": {
                        "function": "clickEvent"
                    }
                }
        }
    },
    "series": [],
    "title":{"text":""}
}
}
<function>yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
agencyTooltip^^"formatter": function(){
var year ='';
if(this.point.year_type == 'C'){
     year = 'CY ' + this.point.year;
}
else if(this.point.year_type == 'B'){
     year = 'FY ' + this.point.year;
}
return 'Agency: '+ this.point.name + '<br/>' + 'Year: '+ year + '<br/>' +'Overtime Amount: '+abbrNum(this.y,2,'$')}##
clickEvent^^"click": function(){location.href = Drupal.settings.basePath+this.url; }
</function>