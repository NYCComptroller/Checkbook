{
"widgetType": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateGridViewLink($node);
       return $header;
",
"gridConfig":{
    "template":"highchart_contract_grid_view",
    "html_class":"chart-grid-view-table",
    "table_columns": [
        {
            "labelAlias": "month",
            "column": "month_month_month_name",
            "sortColumn":"sort_order"
        },
        {
            "colLabel": "$node->widgetConfig->chartConfig->series[0]->name",
            "column": "previous_spending",
            "eval":true
        },
        {
            "colLabel": "$node->widgetConfig->chartConfig->series[1]->name",
            "column": "current_spending",
            "eval":true
        }
    ]
},
"no_results_content":"No Results Found",
"defaultParameters":{"type_of_year":"B","document_code.document_code.document_code":"MA1~CTA1~CT1","status_flag":"A","spending_amount_sum":null},
"cleanURLParameters":["year","calyear","agency","yeartype","awdmethod","vendor","status","csize","cindustry"],
"urlParamMap":{"calyear":"fiscal_year_id","year":"fiscal_year_id","agency":"agency_id","yeartype":"type_of_year","awdmethod":"award_method_id","vendor":"vendor_id","status":"status_flag","csize":"award_size_id","cindustry":"industry_type_id"},
"defaultParamTypeConfig":{"spending_amount_sum":"ne"},
"adjustParameters":"
        $year = 'year_id';
        $config->model->series[0]->additionalParameters->$year = $parameters[fiscal_year_id][0]  ;
        $config->model->series[1]->additionalParameters->fiscal_year_id = $parameters[fiscal_year_id][0] -1 ;
        $config->model->series[2]->additionalParameters->fiscal_year_id = $parameters[fiscal_year_id][0];
         $adjustedParameters = $parameters;
        if(function_exists('_checkbook_project_applyParameterFilters')){
              $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
        }
        return $adjustedParameters;
",
"model": {
    "join": {
        "method": "LeftOuter",
        "columns": ["month_month_month_value"]
    },
    "series": [
        {
            "dataset": "checkbook:month",
            "useList":true,
            "orderBy":"month_value",
            "allowedParams":["year"],
            "columns": ["month_value","month_short_name","month_name"],
            "columnPrefix": "month_month_"
        },
        {
            "dataset": "checkbook:contracts_coa_spending_month",
            "orderBy":"","columns": ["spending_amount_sum","month.month", "month.month.month_value"],
            "allowedParams":["fiscal_year_id","agency_id","type_of_year","award_method_id","vendor_id","spending_amount_sum","status_flag","document_code.document_code.document_code","award_size_id","industry_type_id"],
            "columnPrefix": "previous_"
        },
        {
            "dataset": "checkbook:contracts_coa_spending_month",
            "orderBy":"",
            "columns": ["spending_amount_sum","month.month", "month.month.month_value"],
            "allowedParams":["fiscal_year_id","agency_id","type_of_year","award_method_id","vendor_id","spending_amount_sum","status_flag","document_code.document_code.document_code","award_size_id","industry_type_id"],
            "columnPrefix": "current_"
        }
    ]
},
"derivedColumns": {
    "current_spending": {
        "type": "expression2",
        "expression": "($row['current_spending_amount_sum']==null)?0:$row['current_spending_amount_sum']"
    },
    "previous_spending": {
        "type": "null_check",
        "type": "expression2",
        "expression": "  ($row['previous_spending_amount_sum']==null)?0:$row['previous_spending_amount_sum']"
    }
},

"datasets" : [
    {"name": "month","column":"month_month_month_short_name", "type":"string", "isArray":true},
    {"name": "previous","column":"previous_spending", "type":"string", "isArray":true},
    {"name": "current","column":"current_spending", "type":"string", "isArray":true}
],
"transformationPHP":"
    $year = _getYearValueFromID($parameters['fiscal_year_id'][0]);
    if($parameters['type_of_year'][0] == 'B'){
        $SeriesCurrentYearLabel = 'FY '   .  $year;
        $SeriesPreviousYearLabel = 'FY '.  ($year - 1);
    }else{
        $SeriesCurrentYearLabel = 'CY '   .  $year;
        $SeriesPreviousYearLabel = 'CY '.  ($year - 1);
    }

    foreach($node->data as $key=>$value){
        if($value['current_spending_amount_sum'] == 0)
            $value['current_spending_amount_sum'] = null;
        if($value['previous_spending_amount_sum'] == 0)
           $value['previous_spending_amount_sum'] = null;
    }


    $node->widgetConfig->chartConfig->series[0]->name = $SeriesPreviousYearLabel;
    $node->widgetConfig->chartConfig->series[1]->name = $SeriesCurrentYearLabel;

    $categories=array();
    $allZero = true;
    foreach ($node->data as $row){
	    $categories[]=html_entity_decode($row['month_month_month_name'],ENT_QUOTES);

        $docCodeParam = 'document_code.document_code.document_code';
        $docCodes = $node->widgetConfig->defaultParameters->$docCodeParam;
        $currentYearUrl = CustomURLHelper::prepareUrl('contract/spending/transactions',  ContractURLHelper::$transactionPageParams, NULL, array('doctype' => $docCodes, 'month' => $row['current_month_month'],'newwindow'=>NULL));
        $previousYearUrl = CustomURLHelper::prepareUrl('contract/spending/transactions',  ContractURLHelper::$transactionPageParams, NULL, array('doctype' => $docCodes, 'month' => $row['previous_month_month'],'newwindow'=>NULL),true);

        if(abs($row['previous_spending_amount_sum']) > 0)
            $allZero = false;
        if(abs($row['current_spending_amount_sum']) > 0)
            $allZero = false;

	    $seriesPreviousData[] = (object)array('y' => $row['previous_spending_amount_sum'],'url'=> $previousYearUrl);
        $seriesCurrentData[] = (object)array('y' => $row['current_spending_amount_sum'],'url'=> $currentYearUrl);

    }
    if($allZero) $node->totalDataCount = 0;
    $node->widgetConfig->chartConfig->series[0]->data = $seriesPreviousData;
    $node->widgetConfig->chartConfig->series[1]->data = $seriesCurrentData;
    $node->widgetConfig->chartConfig->xAxis->categories = $categories;
    $node->widgetConfig->chartTitle = _checkbook_project_getChartTitle('contracts','Spending','by');
    if($year == 2010){
        foreach($node->data as $row){
            $row['previous_spending_amount_sum'] = null;
        }
        $node->widgetConfig->chartConfig->series[0]->showInLegend = false;
        $node->widgetConfig->chartConfig->series[0]->visible = false;
        unset($node->widgetConfig->gridConfig->table_columns[1]);
    }
    return $node->data;
",
"chartConfig" : {
    "plotOptions": {
        "series": {
            "cursor": "pointer",
            "point": {"events": {"function": "clickEvent"}}
        }
    },
    "chart" : {},
    "xAxis": {
        "categories": {"ds":"month"},
        "title": {"text": ""},
        "labels": {}
    },
    "series": [
        {
            "name": "YTD",
            "type": "column",
            "pointWidth": 15,
            "data": {"ds":"previous"}
        },
        {
            "name": "FY",
            "type": "column",
            "pointWidth": 15,
            "data": {"ds":"current"}
        }
    ],
    "title": {"text": ""},
    "yAxis": {
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{
            "rotation": 0,
            "function":"yAxisFormatter"
        }
    },
    "legend": {
       "enabled": "true",
       "align": "left",
       "verticalAlign": "bottom",
       "floating": "true",
       "layout": "horizontal"
    },
    "tooltip":{"function":"tooltipformatter" }
}
}


<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' :
function() {return 'Month: ' + this.x + '<br/>Amount: ' + abbrNum(this.y, 2, '$') ;}
##clickEvent^^"click": function(){window.open(Drupal.settings.basePath+this.options.url, '_blank', 'menubar=no,toolbar=no,location=no,resizable=yes,scrollbars=yes,personalbar=no,chrome=yes,height=700,width=980');}
</function>