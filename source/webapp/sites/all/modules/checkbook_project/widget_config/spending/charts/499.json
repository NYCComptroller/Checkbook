{
"widgetType": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">' . $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateGridViewLink($node);
       return $header;
",
"footer":" $footer =''; return $footer; ",
"gridConfig":{
    "template":"highchart_spending_contract_grid_view",
    "html_class":"chart-grid-view-table four-columns",
    "table_columns": [
        {
            "labelAlias": "contract_id",
            "column": "document_id"
        },
        {
            "labelAlias": "amount",
            "column": "total_spending_amount"
        },
        {
            "labelAlias": "vendor_name",
            "column": "legal_name@checkbook:vendor"
        },
        {
            "labelAlias": "contract_agency",
            "column": "agency_name@checkbook:agency"
        }
    ]
},
"useList":true,
"no_results_content":"No Results Found",
"cleanURLParameters":["year","yeartype","agency","vendor","category"],
"urlParamMap":{"year":"year_id","yeartype":"type_of_year","agency":"agency_id","vendor":"vendor_id","category":"spending_category_id"},
"defaultParameters":{"total_spending_amount":"0"},
"defaultParamTypeConfig":{"total_spending_amount":"ne"},
"adjustParameters":"
            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
 "transformationPHP": "
 $node->widgetConfig->chartTitle = 'Top Ten Contracts by Disbursement Amount';
 return $node->data;
",
"model": {
    "join": {
        "method": "Union"
    },
    "series": [{
        "dataset": "checkbook:contracts_spending","orderBy":"-total_spending_amount",
        "columns": ["vendor_id","legal_name@checkbook:vendor","agency_name@checkbook:agency","agency_id","document_id","agreement_id","total_spending_amount","document_code"]
        }
    ]
  },
"derivedColumns": {
    "agency_formatted": {
        "type": "expression2",
        "expression": "strtoupper(html_entity_decode($row[\"agency_name@checkbook:agency\"],ENT_QUOTES))"
    },
    "vendor_formatted": {
        "type": "expression2",
        "expression": "strtoupper(html_entity_decode($row[\"legal_name@checkbook:vendor\"],ENT_QUOTES))"
    },
    "column_link":{
        "type":"expression2",
        "expression":" 'contract_details'
                       . ( in_array($row['document_code'], array('MMA1','MA1')) ? '/magid/' : '/agid/' )
                       .  $row['agreement_id'] . '/doctype/' . $row['document_code'] . '/newwindow' "
    }
},
"limit": "10",
"datasets" : [
    {
        "name": "contracts",
        "type":"string",
        "columns":[{
                    "name":"y",
                    "url":"column_link",
                    "value":"total_spending_amount",
                    "agency":"agency_formatted",
                    "vendor":"vendor_formatted",
                    "contractnum":"document_id"
        }],
        "isArray":true,
        "allowNullValues":true
    }
],
"chartConfig" : {
    "colors":["#7DB7E5"],
    "plotOptions":{
        "series": {
            "cursor": "pointer",
            "point": {"events": {"function": "clickEvent"}}
        }
    },
    "xAxis": {
        "title": {"text": ""},
        "labels": {
            "enabled": false,
            "align": "left",
            "verticalAlign": "bottom",
            "floating": "true",
            "layout": "horizontal"
        }
    },
    "series": [{
        "name": "Contract Amount",
        "type": "column",
        "pointWidth": 30,
        "data": {"ds":"contracts"}
    }],
    "title": {"text": ""},
    "yAxis": {
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    },
    "legend": {
        "enabled": false,
        "align": "left",
        "verticalAlign": "bottom",
        "floating": "true",
        "layout": "horizontal"
    },
    "tooltip":{
        "function":"tooltipformatter"
    }
    }
}

<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' : function() {return  'Contract ID: ' + this.point.contractnum + '<br/>' + 'Amount: ' + abbrNum(this.y, 2, '$') + '<br/>' + 'Vendor: ' + this.point.vendor  + '<br/>' + 'Agency: ' + this.point.agency ;}
##clickEvent^^"click": function(){
        var newWindow = window.open(Drupal.settings.basePath+this.options.url, '_blank', 'menubar=no,toolbar=no,location=no,resizable=yes,scrollbars=yes,personalbar=no,chrome=yes,height=700,width=980');
        function disableClicks(){
            (function ($) {
                $('body', newWindow.document).addClass('newwindow');
                $('body', newWindow.document).delegate('a', 'click', function () {
                        	if($(this).hasClass('showHide'))
                        		return true;
                        	else
                        		return false;
                });
}(jQuery));
}
    if(newWindow.addEventListener){
        newWindow.addEventListener('load',disableClicks)
    } else if (newWindow.attachEvent){
        newWindow.attachEvent('onload',disableClicks);
    }
}
</function>

