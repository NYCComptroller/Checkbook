{
"widgetType": "data_tables",
"widgetSubType": "dataTableList",
"cleanURLParameters":["deptnm","expcategorynm","year","calyear","yeartype","status","agency","vendor","expcategory","category","checkamtr","dept","syear","scalyear","magid","agid","cvendor","cagency","awdmethod","csize","cindustry","doctype","month"],
"urlParamMap":{"deptnm":"disb_department_short_name","expcategorynm":"disb_expenditure_object_name","year":"disb_fiscal_year_id","calyear":"disb_fiscal_year_id","yeartype":"type_of_year","status":"status_flag","agency":"disb_agency_id","vendor":"vendor_id","expcategory":"disb_expenditure_object_id","category":"disb_spending_category_id","checkamtr":"disb_check_amount","dept":"disb_department_id","syear":"disb_fiscal_year_id","scalyear":"disb_fiscal_year_id","magid":"disb_master_agreement_id","agid":"disb_agreement_id","cvendor":"vendor_id","cagency":"document_agency_id","awdmethod":"award_method_id","csize":"award_size_id","cindustry":"industry_type_id","doctype":"document_code@checkbook:ref_document_code","month":"disb_check_eft_issued_cal_month_id"},
"paramTypeConfig":{"checkamtr":"rangeid","syear":"le","scalyear":"le","deptnm":"eqignorecase","expcategorynm":"eqignorecase"},
"header":"
	$header = NULL;
	$header .= widget_data_tables_export_link($node);
	return $header; 
",
"useList":true,
"getTotalDataCount":true,
"limit":"20",
"noDataInitialLoad":true,
"html_class": "initiative-table",
"no_results_content":"No Results Found",
"dataset": "checkbook:contracts_spending_transactions",
"columns": ["disb_disbursement_number","disb_vendor_name","disb_check_eft_issued_date","disb_agency_name","disb_department_short_name","disb_check_amount","disb_expenditure_object_name","disb_budget_name","disb_contract_number","disb_purpose","disb_reporting_code","disb_spending_category_name","disb_agency_id","disb_vendor_id","disb_expenditure_object_id","disb_department_id","disb_spending_category_id","disb_agreement_id","document_code@checkbook:ref_document_code"],
"caption":"",
"derivedColumns": {
       "agency_name_formatted":{
                "type": "expression2",
                "expression": "_get_tooltip_markup($row[disb_agency_name], 30)"
       },
	"agency_name_link": {
		"type": "expression2",
                "expression": " RequestUtil::isNewWindow() ? $row[agency_name_formatted]  : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string() . _checkbook_project_get_url_param_string('category') . '/agency/'. $row[disb_agency_id]. '?expandBottomCont=true>'. $row[agency_name_formatted] .'</a>') "

	},
       "vendor_name_formatted":{
                "type": "expression2",
                "expression": "_get_tooltip_markup($row[disb_vendor_name], 30)"
       },
	"vendor_name_link": {
	      "type": "expression2",
              "expression": " RequestUtil::isNewWindow() ?  $row[vendor_name_formatted] : ('<a href=/spending_landing' . _checkbook_project_get_year_url_param_string() . _checkbook_project_get_url_param_string('category') . '/vendor/'. $row[vendor_id] . '?expandBottomCont=true>'. $row[vendor_name_formatted] .'</a>') "
	    } ,
	"formatted_check_amount": {
	      "type": "expression2",
	      "expression": "custom_number_formatter_basic_format($row['disb_check_amount'])"
	    },
	"contract_number_link_actual": {
	      "type": "expression2",
               "expression": "($row[disb_spending_category_name] == 'Payroll' ||  $row[disb_spending_category_name] == 'Others') ? 'n/a' : $row[disb_contract_number]"
	    } ,

           "contract_number_link": {
	       "type": "expression2",
               "expression": "ContractURLHelper::prepareSpendingContractTransactionsLink($row, $node)"
	    },

	"fms_document_link": {
	      "type": "expression2",
	      "expression": "($row[disb_spending_category_name] == 'Payroll' ||  $row[disb_spending_category_name] == 'Others') ? 'n/a' : '' "
	    },
        "purpose_formatted":{
            "type": "expression2",
            "expression": "_get_tooltip_markup($row[disb_purpose], 30)"
        },
         "contract_purpose_text":{
	      "type": "expression2",
	      "expression": "($row[disb_spending_category_name] == 'Payroll' ||  $row[disb_spending_category_name] == 'Others') ? 'n/a' : $row[purpose_formatted]"
	    }
},
"table_columns": [
	   {
	   	  "labelAlias": "document_id",		   
	      "column": "disb_disbursement_number"
	    },
	    {
	   	  "labelAlias": "payee_name",		    
	      "column": "vendor_name_link",
	      "sortSourceColumn":"disb_vendor_name"
	    },
	    {
	   	  "labelAlias": "issue_date",		    
	      "column": "disb_check_eft_issued_date"
	    },
	    {
	   	  "labelAlias": "agency_name",		    
	      "column": "agency_name_link",
	      "sortSourceColumn":"disb_agency_name"
	    },
	    {
	   	  "labelAlias": "dept_name",		    
	      "column": "disb_department_short_name"
	    },
	    {
	   	  "labelAlias": "check_amount",		    
	      "column": "formatted_check_amount",
	      "sortSourceColumn":"disb_check_amount"
	    },
	    {
	   	  "labelAlias": "expense_category",		    
	      "column": "disb_expenditure_object_name"
	    },
	    /*{
	      "label": "<span>Budget Code</span>",
              "colLabel": "Budget Code",
	      "column": "disb_budget_name",
              "headerClass":"text"
	    },
            {
	      "label": "FMS<br/>Document",
              "colLabel": "FMS Document",
	      "column": "fms_document_link",
	      "sortSourceColumn":"contract_number"              
	    },*/
	    {
	   	  "labelAlias": "contract_id",		    
	      "column": "contract_number_link",
	      "sortSourceColumn":"disb_contract_number"
	    },
	    {
	   	  "labelAlias": "contract_purpose",		    
	      "column": "contract_purpose_text",
               "sortSourceColumn":"disb_purpose"
	    },
	    {
	   	  "labelAlias": "capital_project",		    
	      "column": "disb_reporting_code"
	    },
	    {
	   	  "labelAlias": "spending_category",		    
	      "column": "disb_spending_category_name"
	    }
	  ],
"adjustParameters":"

            $year = $parameters['disb_fiscal_year_id'];
	     if(isset($year)){
		$parameters['fiscal_year_id'] = $year;
	     }

            $adjustedParameters = $parameters;
            if(function_exists('_checkbook_project_applyParameterFilters')){
                  $adjustedParameters = _checkbook_project_applyParameterFilters($node,$parameters);
            }
            return $adjustedParameters;
",
"adjustDataTableOptions":"
          $adjustDataTableOptions = $node->widgetConfig->dataTableOptions;

          $rpp = _getRequestParamValue('rpp');
             if(is_numeric($rpp) ){
                    $adjustDataTableOptions->iDisplayLength = (int)$rpp;
             }
",
"dataTableOptions":{
         "bRetrieve": true,
        "bServerSide": true,
        "bProcessing":true,
        "bFilter": false,
        "iDisplayLength":20,
        "bPaginate": true,
        "sPaginationType":"full_numbers",
        "bLengthChange": false,
        "sDom":"<pr><t><ip>",
        "oLanguage": {
                "sInfo": "Displaying transactions _START_ - _END_ of _TOTAL_",
                "sProcessing":"<img src='/sites/all/themes/checkbook/images/loading_large.gif' title='Processing...'/>"
        },
        "bInfo": true,
         "aoColumns":[
            {"sClass":"text", "sWidth":"160px","asSorting": [ "asc","desc" ]},
            {"sClass":"text","sWidth":"180px","asSorting": [ "asc","desc" ]},
            {"sClass":"text", "sWidth":"90px","asSorting": [ "asc","desc" ]},
            {"sClass":"text", "sWidth":"165px","asSorting": [ "asc","desc" ]},
            {"sClass":"text", "sWidth":"115px","asSorting": [ "asc","desc" ]},
            {"sClass":"number","sWidth":"135px","asSorting": [ "desc","asc" ]},
            {"sClass":"text number-left","sWidth":"180px","asSorting": [ "asc","desc" ]},
            {"sClass":"text","sWidth":"165px","asSorting": [ "asc","desc" ]},
            {"sClass":"text","sWidth":"165px","asSorting": [ "asc","desc" ]},
            {"sClass":"text","sWidth":"165px","asSorting": [ "asc","desc" ]},
            {"sClass":"text","sWidth":"165px","asSorting": [ "asc","desc" ]}
        ],
         "aaSorting":[[5,"desc"]],
       		"sScrollX": "100%",

 		"bScrollCollapse": false,
        "fnInitComplete": "##function () { new FixedColumns( oTable, {
 		\"iLeftColumns\": 3,
		\"iLeftWidth\": 515
 	} );}##"
},
"customExternalJS":"function prepareTableListFilterUrl(){
        var agencyIds = getNamedFilterCriteria('fagencyId');
        if(agencyIds.length==0 && eval(document.getElementById('fHideAgencyId'))){
             agencyIds = document.getElementById('fHideAgencyId').value;
        }
        var oVendorIds = getNamedFilterCriteria('fvendorId');
        var oCategoryIds = getNamedFilterCriteria('fCategoryNm');
         var oSpendCategoryIds = getNamedFilterCriteria('fSpendCategoryId');
        var oCheckAmount = getNamedFilterCriteria('fCheckAmount');
        var oDeptIds = getNamedFilterCriteria('fdeptNm');

         var  cUrl = oTable.fnSettings().sAjaxSource;
           cUrl = adjustUrlParameter(cUrl,'agency',agencyIds);
           cUrl = adjustUrlParameter(cUrl,'vendor',oVendorIds);
           cUrl = adjustUrlParameter(cUrl,'expcategorynm',oCategoryIds);
           cUrl = adjustUrlParameter(cUrl,'category',oSpendCategoryIds );
           cUrl = adjustUrlParameter(cUrl,'checkamtr',oCheckAmount);
           cUrl = adjustUrlParameter(cUrl,'deptnm',oDeptIds);
       
         //remove advance search param if narrow down search is present for amount
         //if(oCheckAmount != null && oCheckAmount.length > 0 ){
         //     cUrl = adjustUrlParameter(cUrl,'checkamt','');
         //}
       return cUrl;
    }"
}