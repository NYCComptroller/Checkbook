{
"widgetType": "highcharts",
"header":"
       $header = '<h2 class=\"chart-title\" style=\"display:none;\">'. $node->widgetConfig->chartTitle . '</h2>';
       $header .= ChartUtil::generateGridViewLink($node);
       return $header;
    ",
 "gridConfig":{
        "template":"highchart_spending_fy_grid_view",
        "html_class":"chart-grid-view-table three-columns",
        "table_columns": [
            {
                  "labelAlias": "month",
              "column": "month_month_month_name",
                  "sortColumn":"sort_order"
             },
            {
                  "colLabel": "$node->widgetConfig->chartConfig->series[0]->name",
              "column": "previous_spending",
                   "eval":true
            },
            {
                  "colLabel": "$node->widgetConfig->chartConfig->series[1]->name",
              "column": "current_spending",
                   "eval":true
            }
        ]
},
"no_results_content":"No Results Found",
"defaultParameters":{"type_of_year":"B"},
"cleanURLParameters":["year","yeartype","agency","vendor","category"],
"urlParamMap":{"year":"year_id","yeartype":"type_of_year","agency":"agency_id","vendor":"vendor_id","category":"spending_category_id"},
"adjustParameters":"
        $year = 'year_id';
        $config->model->series[0]->additionalParameters->$year = $parameters[year_id][0]  ;
        $config->model->series[1]->additionalParameters->$year = $parameters[year_id][0] -1 ;
        $config->model->series[2]->additionalParameters->$year = $parameters[year_id][0];
        return $parameters;
",
"model": {
        "join":
        {
            "method": "LeftOuter",
            "columns": ["month_month_month_value"]
        },
        "series": [
        {
            "dataset": "checkbook:month",
            "useList":true,
            "orderBy":"display_order",
            "allowedParams":["year"],
            "columns": ["month_value","month_name"],
            "columnPrefix": "month_month_"
        },
        {
            "dataset": "checkbook:spending_data",
            "orderBy":"","columns": ["check_amount_sum","month.month", "month.month.month_value"],
            "columnPrefix": "previous_"
        },
        {
            "dataset": "checkbook:spending_data",
            "orderBy":"",
            "columns": ["check_amount_sum","month.month", "month.month.month_value"],
            "columnPrefix": "current_"
        }
      ]
  },
"derivedColumns": {
    "current_spending": {
        "type": "expression2",
        "expression": "  ($row['current_check_amount_sum']==null)?'0':$row['current_check_amount_sum']"
    },
    "previous_spending": {
        "type": "null_check",
        "type": "expression2",
        "expression": "  ($row['previous_check_amount_sum']==null)?'0':$row['previous_check_amount_sum']"
    }
},

"datasets" : [
    {"name": "month","column":"month_month_month_name", "type":"string", "isArray":true},
    {"name": "previous","column":"previous_spending", "type":"string", "isArray":true},
    {"name": "current","column":"current_spending", "type":"string", "isArray":true}
],
"transformationPHP":"
    $year = _getYearValueFromID($parameters['year_id'][0]);
    if($parameters['type_of_year'][0] == 'B'){
        $SeriesCurrentYearLabel = 'FY '   .  $year;
        $SeriesPreviousYearLabel = 'FY '.  ($year - 1);
    }else{
        $SeriesCurrentYearLabel = 'CY '   .  $year;
        $SeriesPreviousYearLabel = 'CY '.  ($year - 1);
    }

    foreach($node->data as $key=>$value){
        if($value['current_check_amount_sum'] == 0)
            $value['current_check_amount_sum'] = null;
        if($value['previous_check_amount_sum'] > 0)
            $value['previous_check_amount_sum'] = null;
    }


    $node->widgetConfig->chartConfig->series[0]->name = $SeriesPreviousYearLabel;
    $node->widgetConfig->chartConfig->series[1]->name = $SeriesCurrentYearLabel;

    $categories=array();
    $allZero = true;
    foreach ($node->data as $row){
        $categories[]=html_entity_decode($row['month_month_month_name'],ENT_QUOTES);
        $currentYearUrl = current_path() . CustomURLHelper::prepareUrl('?expandBottomContURL=/panel_html/spending_transactions/spending/transactions', SpendingUtil::$landingPageParams, NULL, array('month' => $row['current_month_month']), false, false);
        $previousYearUrl = current_path() . CustomURLHelper::prepareUrl('?expandBottomContURL=/panel_html/spending_transactions/spending/transactions', SpendingUtil::$landingPageParams, NULL, array('month' => $row['previous_month_month']), true, false);

        if(abs($row['previous_check_amount_sum']) > 0)
            $allZero = false;
        if(abs($row['current_check_amount_sum']) > 0)
            $allZero = false;

        $seriesPreviousData[] = (object)array('y' => $row['previous_check_amount_sum'],'url'=> $previousYearUrl);
        $seriesCurrentData[] = (object)array('y' => $row['current_check_amount_sum'],'url'=> $currentYearUrl);

    }
    if($allZero) $node->totalDataCount = 0;
    $node->widgetConfig->chartConfig->series[0]->data = $seriesPreviousData;
    $node->widgetConfig->chartConfig->series[1]->data = $seriesCurrentData;
    $node->widgetConfig->chartConfig->xAxis->categories = $categories;
    $node->widgetConfig->chartTitle = RequestUtil::getSpendingCategoryName('Total Spending');

    if($year == 2010){
        foreach($node->data as $row){
            if($row['previous_check_amount_sum'] = null);
        }
        $node->widgetConfig->chartConfig->series[0]->showInLegend = false;
        unset($node->widgetConfig->gridConfig->table_columns[1]);
    }

    return $node->data;
",
"chartConfig" : {
    "plotOptions": {
            "series": {
                "cursor": "pointer",
                "point": {"events": {"function": "clickEvent"}}
            }
    },
    "chart" : {},
    "xAxis": {
        "categories": {"ds":"month"},
        "title": {"text": ""},
        "labels": {}
    },
    "series": [
        {
            "name": "YTD",
            "type": "column",
            "pointWidth": 15,
            "data": {"ds":"previous"}
        },
        {
            "name": "FY",
            "type": "column",
            "pointWidth": 15,
            "data": {"ds":"current"}
        }
    ],
    "title": {"text": ""},
    "yAxis": {
        "startOnTick":true,
        "title": {"text": ""},
        "labels":{"rotation": 0,"function":"yAxisFormatter"}
    } ,
    "legend": {
        "enabled": "true",
        "align": "left",
        "verticalAlign": "bottom",
        "floating": "true",
        "layout": "horizontal"
    },
    "tooltip":{"function":"tooltipformatter"}
    }
}


<function>
yAxisFormatter^^'formatter' : function(){return yAxisLabelFormatter(this);}##
tooltipformatter^^'formatter' :
function() {return 'Month: ' + this.x + '<br/>Amount: ' + abbrNum(this.y, 2, '$') ;
}
##clickEvent^^"click": function(){ location.href = Drupal.settings.basePath+this.options.url;}
</function>